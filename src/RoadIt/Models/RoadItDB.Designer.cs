//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Transport_ibfk_3", "ActualPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.ActualPosition), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Transport), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Transport_ibfk_5", "ActualPositionReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.ActualPositionReturn), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Transport), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Silo_ibfk_2", "Aggragation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Aggragation), "Silo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Silo), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_7", "AirHumidity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.AirHumidity), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_2", "Angle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Angle), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Silo_ibfk_1", "AsphaltMixPlant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.AsphaltMixPlant), "Silo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Silo), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_8", "AsphaltTemp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.AsphaltTemp), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "BatchList_ibfk_1", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Project), "BatchList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.BatchList), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "BatchList_ibfk_2", "Silo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Silo), "BatchList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.BatchList), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "BatchList_ibfk_3", "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Transport), "BatchList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.BatchList), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Compactor_ibfk_2", "BatchList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.BatchList), "Compactor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Compactor), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Silo_ibfk_3", "Bitumen", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Bituman), "Silo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Silo), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Compactor_ibfk_1", "ColorCode", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.ColorCode), "Compactor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Compactor), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Silo_ibfk_5", "Composition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Composition), "Silo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Silo), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Contractor_ibfk_1", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Project), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Contractor), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Transport_ibfk_4", "ETA", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.ETA), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Transport), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Transport_ibfk_6", "ETAReturn", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.ETAReturn), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Transport), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_1", "SpeedFinisher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.SpeedFinisher), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_3", "LayerThickness", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.LayerThickness), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_4", "LocationAndTimeSpan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.LocationAndTimeSpan), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_5", "Temp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Temp), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_6", "Wind", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Wind), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Finisher_ibfk_9", "Width", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Width), "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Finisher), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Transport_ibfk_2", "Finisher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Finisher), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Transport), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Silo_ibfk_4", "ListFillerRecup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.ListFillerRecup), "Silo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Silo), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Planning_ibfk_1", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Project), "Planning", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Planning), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "QualityControl_ibfk_1", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Project), "QualityControl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.QualityControl), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "RoadSection_ibfk_1", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Project), "RoadSection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.RoadSection), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Users_ibfk_1", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.User), true)]
[assembly: EdmRelationshipAttribute("RoadItEntitiesModel", "Transport_ibfk_7", "TransportTemp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(RoadIt.Models.TransportTemp), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(RoadIt.Models.Transport), true)]

#endregion

namespace RoadIt.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RoadItEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RoadItEntities object using the connection string found in the 'RoadItEntities' section of the application configuration file.
        /// </summary>
        public RoadItEntities() : base("name=RoadItEntities", "RoadItEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RoadItEntities object.
        /// </summary>
        public RoadItEntities(string connectionString) : base(connectionString, "RoadItEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RoadItEntities object.
        /// </summary>
        public RoadItEntities(EntityConnection connection) : base(connection, "RoadItEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActualPosition> ActualPositions
        {
            get
            {
                if ((_ActualPositions == null))
                {
                    _ActualPositions = base.CreateObjectSet<ActualPosition>("ActualPositions");
                }
                return _ActualPositions;
            }
        }
        private ObjectSet<ActualPosition> _ActualPositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActualPositionReturn> ActualPositionReturns
        {
            get
            {
                if ((_ActualPositionReturns == null))
                {
                    _ActualPositionReturns = base.CreateObjectSet<ActualPositionReturn>("ActualPositionReturns");
                }
                return _ActualPositionReturns;
            }
        }
        private ObjectSet<ActualPositionReturn> _ActualPositionReturns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Aggragation> Aggragations
        {
            get
            {
                if ((_Aggragations == null))
                {
                    _Aggragations = base.CreateObjectSet<Aggragation>("Aggragations");
                }
                return _Aggragations;
            }
        }
        private ObjectSet<Aggragation> _Aggragations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AirHumidity> AirHumidities
        {
            get
            {
                if ((_AirHumidities == null))
                {
                    _AirHumidities = base.CreateObjectSet<AirHumidity>("AirHumidities");
                }
                return _AirHumidities;
            }
        }
        private ObjectSet<AirHumidity> _AirHumidities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Angle> Angles
        {
            get
            {
                if ((_Angles == null))
                {
                    _Angles = base.CreateObjectSet<Angle>("Angles");
                }
                return _Angles;
            }
        }
        private ObjectSet<Angle> _Angles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsphaltMixPlant> AsphaltMixPlants
        {
            get
            {
                if ((_AsphaltMixPlants == null))
                {
                    _AsphaltMixPlants = base.CreateObjectSet<AsphaltMixPlant>("AsphaltMixPlants");
                }
                return _AsphaltMixPlants;
            }
        }
        private ObjectSet<AsphaltMixPlant> _AsphaltMixPlants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsphaltTemp> AsphaltTemps
        {
            get
            {
                if ((_AsphaltTemps == null))
                {
                    _AsphaltTemps = base.CreateObjectSet<AsphaltTemp>("AsphaltTemps");
                }
                return _AsphaltTemps;
            }
        }
        private ObjectSet<AsphaltTemp> _AsphaltTemps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BatchList> BatchLists
        {
            get
            {
                if ((_BatchLists == null))
                {
                    _BatchLists = base.CreateObjectSet<BatchList>("BatchLists");
                }
                return _BatchLists;
            }
        }
        private ObjectSet<BatchList> _BatchLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bituman> Bitumen
        {
            get
            {
                if ((_Bitumen == null))
                {
                    _Bitumen = base.CreateObjectSet<Bituman>("Bitumen");
                }
                return _Bitumen;
            }
        }
        private ObjectSet<Bituman> _Bitumen;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ColorCode> ColorCodes
        {
            get
            {
                if ((_ColorCodes == null))
                {
                    _ColorCodes = base.CreateObjectSet<ColorCode>("ColorCodes");
                }
                return _ColorCodes;
            }
        }
        private ObjectSet<ColorCode> _ColorCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Compactor> Compactors
        {
            get
            {
                if ((_Compactors == null))
                {
                    _Compactors = base.CreateObjectSet<Compactor>("Compactors");
                }
                return _Compactors;
            }
        }
        private ObjectSet<Compactor> _Compactors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Composition> Compositions
        {
            get
            {
                if ((_Compositions == null))
                {
                    _Compositions = base.CreateObjectSet<Composition>("Compositions");
                }
                return _Compositions;
            }
        }
        private ObjectSet<Composition> _Compositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contractor> Contractors
        {
            get
            {
                if ((_Contractors == null))
                {
                    _Contractors = base.CreateObjectSet<Contractor>("Contractors");
                }
                return _Contractors;
            }
        }
        private ObjectSet<Contractor> _Contractors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ETA> ETAs
        {
            get
            {
                if ((_ETAs == null))
                {
                    _ETAs = base.CreateObjectSet<ETA>("ETAs");
                }
                return _ETAs;
            }
        }
        private ObjectSet<ETA> _ETAs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ETAReturn> ETAReturns
        {
            get
            {
                if ((_ETAReturns == null))
                {
                    _ETAReturns = base.CreateObjectSet<ETAReturn>("ETAReturns");
                }
                return _ETAReturns;
            }
        }
        private ObjectSet<ETAReturn> _ETAReturns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Finisher> Finishers
        {
            get
            {
                if ((_Finishers == null))
                {
                    _Finishers = base.CreateObjectSet<Finisher>("Finishers");
                }
                return _Finishers;
            }
        }
        private ObjectSet<Finisher> _Finishers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LayerThickness> LayerThicknesses
        {
            get
            {
                if ((_LayerThicknesses == null))
                {
                    _LayerThicknesses = base.CreateObjectSet<LayerThickness>("LayerThicknesses");
                }
                return _LayerThicknesses;
            }
        }
        private ObjectSet<LayerThickness> _LayerThicknesses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListFillerRecup> ListFillerRecups
        {
            get
            {
                if ((_ListFillerRecups == null))
                {
                    _ListFillerRecups = base.CreateObjectSet<ListFillerRecup>("ListFillerRecups");
                }
                return _ListFillerRecups;
            }
        }
        private ObjectSet<ListFillerRecup> _ListFillerRecups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationAndTimeSpan> LocationAndTimeSpans
        {
            get
            {
                if ((_LocationAndTimeSpans == null))
                {
                    _LocationAndTimeSpans = base.CreateObjectSet<LocationAndTimeSpan>("LocationAndTimeSpans");
                }
                return _LocationAndTimeSpans;
            }
        }
        private ObjectSet<LocationAndTimeSpan> _LocationAndTimeSpans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Planning> Plannings
        {
            get
            {
                if ((_Plannings == null))
                {
                    _Plannings = base.CreateObjectSet<Planning>("Plannings");
                }
                return _Plannings;
            }
        }
        private ObjectSet<Planning> _Plannings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QualityControl> QualityControls
        {
            get
            {
                if ((_QualityControls == null))
                {
                    _QualityControls = base.CreateObjectSet<QualityControl>("QualityControls");
                }
                return _QualityControls;
            }
        }
        private ObjectSet<QualityControl> _QualityControls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoadSection> RoadSections
        {
            get
            {
                if ((_RoadSections == null))
                {
                    _RoadSections = base.CreateObjectSet<RoadSection>("RoadSections");
                }
                return _RoadSections;
            }
        }
        private ObjectSet<RoadSection> _RoadSections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Silo> Silos
        {
            get
            {
                if ((_Silos == null))
                {
                    _Silos = base.CreateObjectSet<Silo>("Silos");
                }
                return _Silos;
            }
        }
        private ObjectSet<Silo> _Silos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpeedFinisher> SpeedFinishers
        {
            get
            {
                if ((_SpeedFinishers == null))
                {
                    _SpeedFinishers = base.CreateObjectSet<SpeedFinisher>("SpeedFinishers");
                }
                return _SpeedFinishers;
            }
        }
        private ObjectSet<SpeedFinisher> _SpeedFinishers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Temp> Temps
        {
            get
            {
                if ((_Temps == null))
                {
                    _Temps = base.CreateObjectSet<Temp>("Temps");
                }
                return _Temps;
            }
        }
        private ObjectSet<Temp> _Temps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transport> Transports
        {
            get
            {
                if ((_Transports == null))
                {
                    _Transports = base.CreateObjectSet<Transport>("Transports");
                }
                return _Transports;
            }
        }
        private ObjectSet<Transport> _Transports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransportTemp> TransportTemps
        {
            get
            {
                if ((_TransportTemps == null))
                {
                    _TransportTemps = base.CreateObjectSet<TransportTemp>("TransportTemps");
                }
                return _TransportTemps;
            }
        }
        private ObjectSet<TransportTemp> _TransportTemps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Width> Widths
        {
            get
            {
                if ((_Widths == null))
                {
                    _Widths = base.CreateObjectSet<Width>("Widths");
                }
                return _Widths;
            }
        }
        private ObjectSet<Width> _Widths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Wind> Winds
        {
            get
            {
                if ((_Winds == null))
                {
                    _Winds = base.CreateObjectSet<Wind>("Winds");
                }
                return _Winds;
            }
        }
        private ObjectSet<Wind> _Winds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AsphaltProcucer> AsphaltProcucers
        {
            get
            {
                if ((_AsphaltProcucers == null))
                {
                    _AsphaltProcucers = base.CreateObjectSet<AsphaltProcucer>("AsphaltProcucers");
                }
                return _AsphaltProcucers;
            }
        }
        private ObjectSet<AsphaltProcucer> _AsphaltProcucers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorView> ContractorViews
        {
            get
            {
                if ((_ContractorViews == null))
                {
                    _ContractorViews = base.CreateObjectSet<ContractorView>("ContractorViews");
                }
                return _ContractorViews;
            }
        }
        private ObjectSet<ContractorView> _ContractorViews;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Copro> Coproes
        {
            get
            {
                if ((_Coproes == null))
                {
                    _Coproes = base.CreateObjectSet<Copro>("Coproes");
                }
                return _Coproes;
            }
        }
        private ObjectSet<Copro> _Coproes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transporter> Transporters
        {
            get
            {
                if ((_Transporters == null))
                {
                    _Transporters = base.CreateObjectSet<Transporter>("Transporters");
                }
                return _Transporters;
            }
        }
        private ObjectSet<Transporter> _Transporters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UA> UAs
        {
            get
            {
                if ((_UAs == null))
                {
                    _UAs = base.CreateObjectSet<UA>("UAs");
                }
                return _UAs;
            }
        }
        private ObjectSet<UA> _UAs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActualPositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActualPositions(ActualPosition actualPosition)
        {
            base.AddObject("ActualPositions", actualPosition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActualPositionReturns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActualPositionReturns(ActualPositionReturn actualPositionReturn)
        {
            base.AddObject("ActualPositionReturns", actualPositionReturn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Aggragations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAggragations(Aggragation aggragation)
        {
            base.AddObject("Aggragations", aggragation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AirHumidities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAirHumidities(AirHumidity airHumidity)
        {
            base.AddObject("AirHumidities", airHumidity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Angles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAngles(Angle angle)
        {
            base.AddObject("Angles", angle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AsphaltMixPlants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAsphaltMixPlants(AsphaltMixPlant asphaltMixPlant)
        {
            base.AddObject("AsphaltMixPlants", asphaltMixPlant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AsphaltTemps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAsphaltTemps(AsphaltTemp asphaltTemp)
        {
            base.AddObject("AsphaltTemps", asphaltTemp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BatchLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBatchLists(BatchList batchList)
        {
            base.AddObject("BatchLists", batchList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bitumen EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBitumen(Bituman bituman)
        {
            base.AddObject("Bitumen", bituman);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ColorCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColorCodes(ColorCode colorCode)
        {
            base.AddObject("ColorCodes", colorCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Compactors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompactors(Compactor compactor)
        {
            base.AddObject("Compactors", compactor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Compositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompositions(Composition composition)
        {
            base.AddObject("Compositions", composition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contractors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractors(Contractor contractor)
        {
            base.AddObject("Contractors", contractor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ETAs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToETAs(ETA eTA)
        {
            base.AddObject("ETAs", eTA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ETAReturns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToETAReturns(ETAReturn eTAReturn)
        {
            base.AddObject("ETAReturns", eTAReturn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Finishers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFinishers(Finisher finisher)
        {
            base.AddObject("Finishers", finisher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LayerThicknesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLayerThicknesses(LayerThickness layerThickness)
        {
            base.AddObject("LayerThicknesses", layerThickness);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListFillerRecups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListFillerRecups(ListFillerRecup listFillerRecup)
        {
            base.AddObject("ListFillerRecups", listFillerRecup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationAndTimeSpans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationAndTimeSpans(LocationAndTimeSpan locationAndTimeSpan)
        {
            base.AddObject("LocationAndTimeSpans", locationAndTimeSpan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Plannings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlannings(Planning planning)
        {
            base.AddObject("Plannings", planning);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QualityControls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQualityControls(QualityControl qualityControl)
        {
            base.AddObject("QualityControls", qualityControl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoadSections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoadSections(RoadSection roadSection)
        {
            base.AddObject("RoadSections", roadSection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Silos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSilos(Silo silo)
        {
            base.AddObject("Silos", silo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpeedFinishers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpeedFinishers(SpeedFinisher speedFinisher)
        {
            base.AddObject("SpeedFinishers", speedFinisher);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Temps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemps(Temp temp)
        {
            base.AddObject("Temps", temp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransports(Transport transport)
        {
            base.AddObject("Transports", transport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransportTemps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransportTemps(TransportTemp transportTemp)
        {
            base.AddObject("TransportTemps", transportTemp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Widths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWidths(Width width)
        {
            base.AddObject("Widths", width);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Winds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWinds(Wind wind)
        {
            base.AddObject("Winds", wind);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AsphaltProcucers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAsphaltProcucers(AsphaltProcucer asphaltProcucer)
        {
            base.AddObject("AsphaltProcucers", asphaltProcucer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorViews(ContractorView contractorView)
        {
            base.AddObject("ContractorViews", contractorView);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Coproes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCoproes(Copro copro)
        {
            base.AddObject("Coproes", copro);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transporters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransporters(Transporter transporter)
        {
            base.AddObject("Transporters", transporter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UAs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUAs(UA uA)
        {
            base.AddObject("UAs", uA);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="ActualPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActualPosition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActualPosition object.
        /// </summary>
        /// <param name="actualPositionId">Initial value of the ActualPositionId property.</param>
        /// <param name="actualPosition1">Initial value of the ActualPosition1 property.</param>
        public static ActualPosition CreateActualPosition(global::System.Int32 actualPositionId, global::System.String actualPosition1)
        {
            ActualPosition actualPosition = new ActualPosition();
            actualPosition.ActualPositionId = actualPositionId;
            actualPosition.ActualPosition1 = actualPosition1;
            return actualPosition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionId
        {
            get
            {
                return _ActualPositionId;
            }
            set
            {
                if (_ActualPositionId != value)
                {
                    OnActualPositionIdChanging(value);
                    ReportPropertyChanging("ActualPositionId");
                    _ActualPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionId");
                    OnActualPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionId;
        partial void OnActualPositionIdChanging(global::System.Int32 value);
        partial void OnActualPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPosition1
        {
            get
            {
                return _ActualPosition1;
            }
            set
            {
                OnActualPosition1Changing(value);
                ReportPropertyChanging("ActualPosition1");
                _ActualPosition1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActualPosition1");
                OnActualPosition1Changed();
            }
        }
        private global::System.String _ActualPosition1;
        partial void OnActualPosition1Changing(global::System.String value);
        partial void OnActualPosition1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_3", "Transport")]
        public EntityCollection<Transport> Transports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_3", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_3", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="ActualPositionReturn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActualPositionReturn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActualPositionReturn object.
        /// </summary>
        /// <param name="actualPositionReturnId">Initial value of the ActualPositionReturnId property.</param>
        /// <param name="actualPosition">Initial value of the ActualPosition property.</param>
        public static ActualPositionReturn CreateActualPositionReturn(global::System.Int32 actualPositionReturnId, global::System.String actualPosition)
        {
            ActualPositionReturn actualPositionReturn = new ActualPositionReturn();
            actualPositionReturn.ActualPositionReturnId = actualPositionReturnId;
            actualPositionReturn.ActualPosition = actualPosition;
            return actualPositionReturn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionReturnId
        {
            get
            {
                return _ActualPositionReturnId;
            }
            set
            {
                if (_ActualPositionReturnId != value)
                {
                    OnActualPositionReturnIdChanging(value);
                    ReportPropertyChanging("ActualPositionReturnId");
                    _ActualPositionReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionReturnId");
                    OnActualPositionReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionReturnId;
        partial void OnActualPositionReturnIdChanging(global::System.Int32 value);
        partial void OnActualPositionReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPosition
        {
            get
            {
                return _ActualPosition;
            }
            set
            {
                OnActualPositionChanging(value);
                ReportPropertyChanging("ActualPosition");
                _ActualPosition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActualPosition");
                OnActualPositionChanged();
            }
        }
        private global::System.String _ActualPosition;
        partial void OnActualPositionChanging(global::System.String value);
        partial void OnActualPositionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_5", "Transport")]
        public EntityCollection<Transport> Transports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_5", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_5", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Aggragation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aggragation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Aggragation object.
        /// </summary>
        /// <param name="aggragationId">Initial value of the AggragationId property.</param>
        /// <param name="aggragationMaxTemp">Initial value of the AggragationMaxTemp property.</param>
        /// <param name="aggragationMinTemp">Initial value of the AggragationMinTemp property.</param>
        /// <param name="aggragationTimeStamp">Initial value of the AggragationTimeStamp property.</param>
        public static Aggragation CreateAggragation(global::System.Int32 aggragationId, global::System.Int32 aggragationMaxTemp, global::System.Int32 aggragationMinTemp, global::System.DateTime aggragationTimeStamp)
        {
            Aggragation aggragation = new Aggragation();
            aggragation.AggragationId = aggragationId;
            aggragation.AggragationMaxTemp = aggragationMaxTemp;
            aggragation.AggragationMinTemp = aggragationMinTemp;
            aggragation.AggragationTimeStamp = aggragationTimeStamp;
            return aggragation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationId
        {
            get
            {
                return _AggragationId;
            }
            set
            {
                if (_AggragationId != value)
                {
                    OnAggragationIdChanging(value);
                    ReportPropertyChanging("AggragationId");
                    _AggragationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationId");
                    OnAggragationIdChanged();
                }
            }
        }
        private global::System.Int32 _AggragationId;
        partial void OnAggragationIdChanging(global::System.Int32 value);
        partial void OnAggragationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMaxTemp
        {
            get
            {
                return _AggragationMaxTemp;
            }
            set
            {
                OnAggragationMaxTempChanging(value);
                ReportPropertyChanging("AggragationMaxTemp");
                _AggragationMaxTemp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AggragationMaxTemp");
                OnAggragationMaxTempChanged();
            }
        }
        private global::System.Int32 _AggragationMaxTemp;
        partial void OnAggragationMaxTempChanging(global::System.Int32 value);
        partial void OnAggragationMaxTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMinTemp
        {
            get
            {
                return _AggragationMinTemp;
            }
            set
            {
                OnAggragationMinTempChanging(value);
                ReportPropertyChanging("AggragationMinTemp");
                _AggragationMinTemp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AggragationMinTemp");
                OnAggragationMinTempChanged();
            }
        }
        private global::System.Int32 _AggragationMinTemp;
        partial void OnAggragationMinTempChanging(global::System.Int32 value);
        partial void OnAggragationMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AggragationTimeStamp
        {
            get
            {
                return _AggragationTimeStamp;
            }
            set
            {
                OnAggragationTimeStampChanging(value);
                ReportPropertyChanging("AggragationTimeStamp");
                _AggragationTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AggragationTimeStamp");
                OnAggragationTimeStampChanged();
            }
        }
        private global::System.DateTime _AggragationTimeStamp;
        partial void OnAggragationTimeStampChanging(global::System.DateTime value);
        partial void OnAggragationTimeStampChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_2", "Silo")]
        public EntityCollection<Silo> Silos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_2", "Silo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_2", "Silo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="AirHumidity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AirHumidity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AirHumidity object.
        /// </summary>
        /// <param name="airHumidityId">Initial value of the AirHumidityId property.</param>
        /// <param name="airHumidity1">Initial value of the AirHumidity1 property.</param>
        public static AirHumidity CreateAirHumidity(global::System.Int32 airHumidityId, global::System.Int32 airHumidity1)
        {
            AirHumidity airHumidity = new AirHumidity();
            airHumidity.AirHumidityId = airHumidityId;
            airHumidity.AirHumidity1 = airHumidity1;
            return airHumidity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidityId
        {
            get
            {
                return _AirHumidityId;
            }
            set
            {
                if (_AirHumidityId != value)
                {
                    OnAirHumidityIdChanging(value);
                    ReportPropertyChanging("AirHumidityId");
                    _AirHumidityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirHumidityId");
                    OnAirHumidityIdChanged();
                }
            }
        }
        private global::System.Int32 _AirHumidityId;
        partial void OnAirHumidityIdChanging(global::System.Int32 value);
        partial void OnAirHumidityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidity1
        {
            get
            {
                return _AirHumidity1;
            }
            set
            {
                OnAirHumidity1Changing(value);
                ReportPropertyChanging("AirHumidity1");
                _AirHumidity1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AirHumidity1");
                OnAirHumidity1Changed();
            }
        }
        private global::System.Int32 _AirHumidity1;
        partial void OnAirHumidity1Changing(global::System.Int32 value);
        partial void OnAirHumidity1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_7", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_7", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_7", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Angle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Angle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Angle object.
        /// </summary>
        /// <param name="angleId">Initial value of the AngleId property.</param>
        /// <param name="left">Initial value of the Left property.</param>
        /// <param name="right">Initial value of the Right property.</param>
        public static Angle CreateAngle(global::System.Int32 angleId, global::System.Int32 left, global::System.Int32 right)
        {
            Angle angle = new Angle();
            angle.AngleId = angleId;
            angle.Left = left;
            angle.Right = right;
            return angle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleId
        {
            get
            {
                return _AngleId;
            }
            set
            {
                if (_AngleId != value)
                {
                    OnAngleIdChanging(value);
                    ReportPropertyChanging("AngleId");
                    _AngleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleId");
                    OnAngleIdChanged();
                }
            }
        }
        private global::System.Int32 _AngleId;
        partial void OnAngleIdChanging(global::System.Int32 value);
        partial void OnAngleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Left
        {
            get
            {
                return _Left;
            }
            set
            {
                OnLeftChanging(value);
                ReportPropertyChanging("Left");
                _Left = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Left");
                OnLeftChanged();
            }
        }
        private global::System.Int32 _Left;
        partial void OnLeftChanging(global::System.Int32 value);
        partial void OnLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Right
        {
            get
            {
                return _Right;
            }
            set
            {
                OnRightChanging(value);
                ReportPropertyChanging("Right");
                _Right = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Right");
                OnRightChanged();
            }
        }
        private global::System.Int32 _Right;
        partial void OnRightChanging(global::System.Int32 value);
        partial void OnRightChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_2", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_2", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_2", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="AsphaltMixPlant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsphaltMixPlant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AsphaltMixPlant object.
        /// </summary>
        /// <param name="centralId">Initial value of the CentralId property.</param>
        /// <param name="mixtureName">Initial value of the MixtureName property.</param>
        /// <param name="technicalDataSheet">Initial value of the TechnicalDataSheet property.</param>
        /// <param name="typeOfAggregates">Initial value of the TypeOfAggregates property.</param>
        /// <param name="mixtureChange">Initial value of the MixtureChange property.</param>
        public static AsphaltMixPlant CreateAsphaltMixPlant(global::System.Int32 centralId, global::System.String mixtureName, global::System.String technicalDataSheet, global::System.String typeOfAggregates, global::System.String mixtureChange)
        {
            AsphaltMixPlant asphaltMixPlant = new AsphaltMixPlant();
            asphaltMixPlant.CentralId = centralId;
            asphaltMixPlant.MixtureName = mixtureName;
            asphaltMixPlant.TechnicalDataSheet = technicalDataSheet;
            asphaltMixPlant.TypeOfAggregates = typeOfAggregates;
            asphaltMixPlant.MixtureChange = mixtureChange;
            return asphaltMixPlant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CentralId
        {
            get
            {
                return _CentralId;
            }
            set
            {
                if (_CentralId != value)
                {
                    OnCentralIdChanging(value);
                    ReportPropertyChanging("CentralId");
                    _CentralId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CentralId");
                    OnCentralIdChanged();
                }
            }
        }
        private global::System.Int32 _CentralId;
        partial void OnCentralIdChanging(global::System.Int32 value);
        partial void OnCentralIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureName
        {
            get
            {
                return _MixtureName;
            }
            set
            {
                OnMixtureNameChanging(value);
                ReportPropertyChanging("MixtureName");
                _MixtureName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MixtureName");
                OnMixtureNameChanged();
            }
        }
        private global::System.String _MixtureName;
        partial void OnMixtureNameChanging(global::System.String value);
        partial void OnMixtureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TechnicalDataSheet
        {
            get
            {
                return _TechnicalDataSheet;
            }
            set
            {
                OnTechnicalDataSheetChanging(value);
                ReportPropertyChanging("TechnicalDataSheet");
                _TechnicalDataSheet = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TechnicalDataSheet");
                OnTechnicalDataSheetChanged();
            }
        }
        private global::System.String _TechnicalDataSheet;
        partial void OnTechnicalDataSheetChanging(global::System.String value);
        partial void OnTechnicalDataSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeOfAggregates
        {
            get
            {
                return _TypeOfAggregates;
            }
            set
            {
                OnTypeOfAggregatesChanging(value);
                ReportPropertyChanging("TypeOfAggregates");
                _TypeOfAggregates = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeOfAggregates");
                OnTypeOfAggregatesChanged();
            }
        }
        private global::System.String _TypeOfAggregates;
        partial void OnTypeOfAggregatesChanging(global::System.String value);
        partial void OnTypeOfAggregatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureChange
        {
            get
            {
                return _MixtureChange;
            }
            set
            {
                OnMixtureChangeChanging(value);
                ReportPropertyChanging("MixtureChange");
                _MixtureChange = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MixtureChange");
                OnMixtureChangeChanged();
            }
        }
        private global::System.String _MixtureChange;
        partial void OnMixtureChangeChanging(global::System.String value);
        partial void OnMixtureChangeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_1", "Silo")]
        public EntityCollection<Silo> Silos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_1", "Silo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_1", "Silo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="AsphaltProcucer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsphaltProcucer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AsphaltProcucer object.
        /// </summary>
        /// <param name="tonPerDay">Initial value of the TonPerDay property.</param>
        /// <param name="technicalDataSheet">Initial value of the TechnicalDataSheet property.</param>
        /// <param name="mixtureName">Initial value of the MixtureName property.</param>
        /// <param name="typeOfAggregates">Initial value of the TypeOfAggregates property.</param>
        /// <param name="mixtureChange">Initial value of the MixtureChange property.</param>
        /// <param name="centralId">Initial value of the CentralId property.</param>
        /// <param name="aggregationId">Initial value of the AggregationId property.</param>
        /// <param name="aggragationMaxTemp">Initial value of the AggragationMaxTemp property.</param>
        /// <param name="aggragationMinTemp">Initial value of the AggragationMinTemp property.</param>
        /// <param name="aggragationTimeStamp">Initial value of the AggragationTimeStamp property.</param>
        /// <param name="bitumenId">Initial value of the BitumenId property.</param>
        /// <param name="bitumenMaxTemp">Initial value of the BitumenMaxTemp property.</param>
        /// <param name="bitumenMinTemp">Initial value of the BitumenMinTemp property.</param>
        /// <param name="bitumenTimeStamp">Initial value of the BitumenTimeStamp property.</param>
        /// <param name="listRecupFillerId">Initial value of the ListRecupFillerId property.</param>
        /// <param name="fillerRecup">Initial value of the FillerRecup property.</param>
        /// <param name="mixingTemp">Initial value of the MixingTemp property.</param>
        /// <param name="mixingTime">Initial value of the MixingTime property.</param>
        /// <param name="realCompositionId">Initial value of the RealCompositionId property.</param>
        /// <param name="massOfAggregationBunker1">Initial value of the MassOfAggregationBunker1 property.</param>
        /// <param name="massOfAggregationBunker2">Initial value of the MassOfAggregationBunker2 property.</param>
        /// <param name="massOfAggregationBunker3">Initial value of the MassOfAggregationBunker3 property.</param>
        /// <param name="massOfAggregationBunker4">Initial value of the MassOfAggregationBunker4 property.</param>
        /// <param name="massOfAggregationBunker5">Initial value of the MassOfAggregationBunker5 property.</param>
        /// <param name="massOfAggregationBunker6">Initial value of the MassOfAggregationBunker6 property.</param>
        /// <param name="filler">Initial value of the Filler property.</param>
        /// <param name="bitumen">Initial value of the Bitumen property.</param>
        /// <param name="additivesKg">Initial value of the AdditivesKg property.</param>
        /// <param name="tempSilo">Initial value of the TempSilo property.</param>
        /// <param name="analysisComposition">Initial value of the AnalysisComposition property.</param>
        /// <param name="truckLicensPlate">Initial value of the TruckLicensPlate property.</param>
        /// <param name="departureTime">Initial value of the DepartureTime property.</param>
        /// <param name="massTruck">Initial value of the MassTruck property.</param>
        /// <param name="actualPositionId">Initial value of the ActualPositionId property.</param>
        /// <param name="actualPosition">Initial value of the ActualPosition property.</param>
        /// <param name="eTAId">Initial value of the ETAId property.</param>
        /// <param name="eTA">Initial value of the ETA property.</param>
        /// <param name="realArrivalTime">Initial value of the RealArrivalTime property.</param>
        /// <param name="deattachmentFinisherTime">Initial value of the DeattachmentFinisherTime property.</param>
        /// <param name="deattachmentFinisherPosition">Initial value of the DeattachmentFinisherPosition property.</param>
        /// <param name="actualPositionReturnId">Initial value of the ActualPositionReturnId property.</param>
        /// <param name="actualPositionReturn">Initial value of the ActualPositionReturn property.</param>
        /// <param name="eTAReturnId">Initial value of the ETAReturnId property.</param>
        /// <param name="eTAReturn">Initial value of the ETAReturn property.</param>
        /// <param name="arrivalAtPlant">Initial value of the ArrivalAtPlant property.</param>
        /// <param name="unforseenStop">Initial value of the UnforseenStop property.</param>
        /// <param name="actualTempId">Initial value of the ActualTempId property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        /// <param name="qrCodeCompactor">Initial value of the QrCodeCompactor property.</param>
        /// <param name="samplesCopro">Initial value of the SamplesCopro property.</param>
        /// <param name="complianceMixture">Initial value of the ComplianceMixture property.</param>
        public static AsphaltProcucer CreateAsphaltProcucer(global::System.Int32 tonPerDay, global::System.String technicalDataSheet, global::System.String mixtureName, global::System.String typeOfAggregates, global::System.String mixtureChange, global::System.Int32 centralId, global::System.Int32 aggregationId, global::System.Int32 aggragationMaxTemp, global::System.Int32 aggragationMinTemp, global::System.DateTime aggragationTimeStamp, global::System.Int32 bitumenId, global::System.Int32 bitumenMaxTemp, global::System.Int32 bitumenMinTemp, global::System.DateTime bitumenTimeStamp, global::System.Int32 listRecupFillerId, global::System.Int32 fillerRecup, global::System.Int32 mixingTemp, global::System.TimeSpan mixingTime, global::System.Int32 realCompositionId, global::System.Int32 massOfAggregationBunker1, global::System.Int32 massOfAggregationBunker2, global::System.Int32 massOfAggregationBunker3, global::System.Int32 massOfAggregationBunker4, global::System.Int32 massOfAggregationBunker5, global::System.Int32 massOfAggregationBunker6, global::System.Int32 filler, global::System.Int32 bitumen, global::System.Int32 additivesKg, global::System.Int32 tempSilo, global::System.String analysisComposition, global::System.String truckLicensPlate, global::System.DateTime departureTime, global::System.Int32 massTruck, global::System.Int32 actualPositionId, global::System.String actualPosition, global::System.Int32 eTAId, global::System.String eTA, global::System.DateTime realArrivalTime, global::System.DateTime deattachmentFinisherTime, global::System.String deattachmentFinisherPosition, global::System.Int32 actualPositionReturnId, global::System.String actualPositionReturn, global::System.Int32 eTAReturnId, global::System.String eTAReturn, global::System.DateTime arrivalAtPlant, global::System.Int32 unforseenStop, global::System.Int32 actualTempId, global::System.Int32 temp, global::System.String qrCodeCompactor, global::System.String samplesCopro, global::System.String complianceMixture)
        {
            AsphaltProcucer asphaltProcucer = new AsphaltProcucer();
            asphaltProcucer.TonPerDay = tonPerDay;
            asphaltProcucer.TechnicalDataSheet = technicalDataSheet;
            asphaltProcucer.MixtureName = mixtureName;
            asphaltProcucer.TypeOfAggregates = typeOfAggregates;
            asphaltProcucer.MixtureChange = mixtureChange;
            asphaltProcucer.CentralId = centralId;
            asphaltProcucer.AggregationId = aggregationId;
            asphaltProcucer.AggragationMaxTemp = aggragationMaxTemp;
            asphaltProcucer.AggragationMinTemp = aggragationMinTemp;
            asphaltProcucer.AggragationTimeStamp = aggragationTimeStamp;
            asphaltProcucer.BitumenId = bitumenId;
            asphaltProcucer.BitumenMaxTemp = bitumenMaxTemp;
            asphaltProcucer.BitumenMinTemp = bitumenMinTemp;
            asphaltProcucer.BitumenTimeStamp = bitumenTimeStamp;
            asphaltProcucer.ListRecupFillerId = listRecupFillerId;
            asphaltProcucer.FillerRecup = fillerRecup;
            asphaltProcucer.MixingTemp = mixingTemp;
            asphaltProcucer.MixingTime = mixingTime;
            asphaltProcucer.RealCompositionId = realCompositionId;
            asphaltProcucer.MassOfAggregationBunker1 = massOfAggregationBunker1;
            asphaltProcucer.MassOfAggregationBunker2 = massOfAggregationBunker2;
            asphaltProcucer.MassOfAggregationBunker3 = massOfAggregationBunker3;
            asphaltProcucer.MassOfAggregationBunker4 = massOfAggregationBunker4;
            asphaltProcucer.MassOfAggregationBunker5 = massOfAggregationBunker5;
            asphaltProcucer.MassOfAggregationBunker6 = massOfAggregationBunker6;
            asphaltProcucer.Filler = filler;
            asphaltProcucer.Bitumen = bitumen;
            asphaltProcucer.AdditivesKg = additivesKg;
            asphaltProcucer.TempSilo = tempSilo;
            asphaltProcucer.AnalysisComposition = analysisComposition;
            asphaltProcucer.TruckLicensPlate = truckLicensPlate;
            asphaltProcucer.DepartureTime = departureTime;
            asphaltProcucer.MassTruck = massTruck;
            asphaltProcucer.ActualPositionId = actualPositionId;
            asphaltProcucer.ActualPosition = actualPosition;
            asphaltProcucer.ETAId = eTAId;
            asphaltProcucer.ETA = eTA;
            asphaltProcucer.RealArrivalTime = realArrivalTime;
            asphaltProcucer.DeattachmentFinisherTime = deattachmentFinisherTime;
            asphaltProcucer.DeattachmentFinisherPosition = deattachmentFinisherPosition;
            asphaltProcucer.ActualPositionReturnId = actualPositionReturnId;
            asphaltProcucer.ActualPositionReturn = actualPositionReturn;
            asphaltProcucer.ETAReturnId = eTAReturnId;
            asphaltProcucer.ETAReturn = eTAReturn;
            asphaltProcucer.ArrivalAtPlant = arrivalAtPlant;
            asphaltProcucer.UnforseenStop = unforseenStop;
            asphaltProcucer.ActualTempId = actualTempId;
            asphaltProcucer.Temp = temp;
            asphaltProcucer.QrCodeCompactor = qrCodeCompactor;
            asphaltProcucer.SamplesCopro = samplesCopro;
            asphaltProcucer.ComplianceMixture = complianceMixture;
            return asphaltProcucer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TonPerDay
        {
            get
            {
                return _TonPerDay;
            }
            set
            {
                if (_TonPerDay != value)
                {
                    OnTonPerDayChanging(value);
                    ReportPropertyChanging("TonPerDay");
                    _TonPerDay = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TonPerDay");
                    OnTonPerDayChanged();
                }
            }
        }
        private global::System.Int32 _TonPerDay;
        partial void OnTonPerDayChanging(global::System.Int32 value);
        partial void OnTonPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TechnicalDataSheet
        {
            get
            {
                return _TechnicalDataSheet;
            }
            set
            {
                if (_TechnicalDataSheet != value)
                {
                    OnTechnicalDataSheetChanging(value);
                    ReportPropertyChanging("TechnicalDataSheet");
                    _TechnicalDataSheet = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TechnicalDataSheet");
                    OnTechnicalDataSheetChanged();
                }
            }
        }
        private global::System.String _TechnicalDataSheet;
        partial void OnTechnicalDataSheetChanging(global::System.String value);
        partial void OnTechnicalDataSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureName
        {
            get
            {
                return _MixtureName;
            }
            set
            {
                if (_MixtureName != value)
                {
                    OnMixtureNameChanging(value);
                    ReportPropertyChanging("MixtureName");
                    _MixtureName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureName");
                    OnMixtureNameChanged();
                }
            }
        }
        private global::System.String _MixtureName;
        partial void OnMixtureNameChanging(global::System.String value);
        partial void OnMixtureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeOfAggregates
        {
            get
            {
                return _TypeOfAggregates;
            }
            set
            {
                if (_TypeOfAggregates != value)
                {
                    OnTypeOfAggregatesChanging(value);
                    ReportPropertyChanging("TypeOfAggregates");
                    _TypeOfAggregates = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeOfAggregates");
                    OnTypeOfAggregatesChanged();
                }
            }
        }
        private global::System.String _TypeOfAggregates;
        partial void OnTypeOfAggregatesChanging(global::System.String value);
        partial void OnTypeOfAggregatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureChange
        {
            get
            {
                return _MixtureChange;
            }
            set
            {
                if (_MixtureChange != value)
                {
                    OnMixtureChangeChanging(value);
                    ReportPropertyChanging("MixtureChange");
                    _MixtureChange = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureChange");
                    OnMixtureChangeChanged();
                }
            }
        }
        private global::System.String _MixtureChange;
        partial void OnMixtureChangeChanging(global::System.String value);
        partial void OnMixtureChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CentralId
        {
            get
            {
                return _CentralId;
            }
            set
            {
                if (_CentralId != value)
                {
                    OnCentralIdChanging(value);
                    ReportPropertyChanging("CentralId");
                    _CentralId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CentralId");
                    OnCentralIdChanged();
                }
            }
        }
        private global::System.Int32 _CentralId;
        partial void OnCentralIdChanging(global::System.Int32 value);
        partial void OnCentralIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggregationId
        {
            get
            {
                return _AggregationId;
            }
            set
            {
                if (_AggregationId != value)
                {
                    OnAggregationIdChanging(value);
                    ReportPropertyChanging("AggregationId");
                    _AggregationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggregationId");
                    OnAggregationIdChanged();
                }
            }
        }
        private global::System.Int32 _AggregationId;
        partial void OnAggregationIdChanging(global::System.Int32 value);
        partial void OnAggregationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMaxTemp
        {
            get
            {
                return _AggragationMaxTemp;
            }
            set
            {
                if (_AggragationMaxTemp != value)
                {
                    OnAggragationMaxTempChanging(value);
                    ReportPropertyChanging("AggragationMaxTemp");
                    _AggragationMaxTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationMaxTemp");
                    OnAggragationMaxTempChanged();
                }
            }
        }
        private global::System.Int32 _AggragationMaxTemp;
        partial void OnAggragationMaxTempChanging(global::System.Int32 value);
        partial void OnAggragationMaxTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMinTemp
        {
            get
            {
                return _AggragationMinTemp;
            }
            set
            {
                if (_AggragationMinTemp != value)
                {
                    OnAggragationMinTempChanging(value);
                    ReportPropertyChanging("AggragationMinTemp");
                    _AggragationMinTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationMinTemp");
                    OnAggragationMinTempChanged();
                }
            }
        }
        private global::System.Int32 _AggragationMinTemp;
        partial void OnAggragationMinTempChanging(global::System.Int32 value);
        partial void OnAggragationMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AggragationTimeStamp
        {
            get
            {
                return _AggragationTimeStamp;
            }
            set
            {
                if (_AggragationTimeStamp != value)
                {
                    OnAggragationTimeStampChanging(value);
                    ReportPropertyChanging("AggragationTimeStamp");
                    _AggragationTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationTimeStamp");
                    OnAggragationTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _AggragationTimeStamp;
        partial void OnAggragationTimeStampChanging(global::System.DateTime value);
        partial void OnAggragationTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenId
        {
            get
            {
                return _BitumenId;
            }
            set
            {
                if (_BitumenId != value)
                {
                    OnBitumenIdChanging(value);
                    ReportPropertyChanging("BitumenId");
                    _BitumenId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenId");
                    OnBitumenIdChanged();
                }
            }
        }
        private global::System.Int32 _BitumenId;
        partial void OnBitumenIdChanging(global::System.Int32 value);
        partial void OnBitumenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMaxTemp
        {
            get
            {
                return _BitumenMaxTemp;
            }
            set
            {
                if (_BitumenMaxTemp != value)
                {
                    OnBitumenMaxTempChanging(value);
                    ReportPropertyChanging("BitumenMaxTemp");
                    _BitumenMaxTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenMaxTemp");
                    OnBitumenMaxTempChanged();
                }
            }
        }
        private global::System.Int32 _BitumenMaxTemp;
        partial void OnBitumenMaxTempChanging(global::System.Int32 value);
        partial void OnBitumenMaxTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMinTemp
        {
            get
            {
                return _BitumenMinTemp;
            }
            set
            {
                if (_BitumenMinTemp != value)
                {
                    OnBitumenMinTempChanging(value);
                    ReportPropertyChanging("BitumenMinTemp");
                    _BitumenMinTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenMinTemp");
                    OnBitumenMinTempChanged();
                }
            }
        }
        private global::System.Int32 _BitumenMinTemp;
        partial void OnBitumenMinTempChanging(global::System.Int32 value);
        partial void OnBitumenMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BitumenTimeStamp
        {
            get
            {
                return _BitumenTimeStamp;
            }
            set
            {
                if (_BitumenTimeStamp != value)
                {
                    OnBitumenTimeStampChanging(value);
                    ReportPropertyChanging("BitumenTimeStamp");
                    _BitumenTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenTimeStamp");
                    OnBitumenTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _BitumenTimeStamp;
        partial void OnBitumenTimeStampChanging(global::System.DateTime value);
        partial void OnBitumenTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListRecupFillerId
        {
            get
            {
                return _ListRecupFillerId;
            }
            set
            {
                if (_ListRecupFillerId != value)
                {
                    OnListRecupFillerIdChanging(value);
                    ReportPropertyChanging("ListRecupFillerId");
                    _ListRecupFillerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListRecupFillerId");
                    OnListRecupFillerIdChanged();
                }
            }
        }
        private global::System.Int32 _ListRecupFillerId;
        partial void OnListRecupFillerIdChanging(global::System.Int32 value);
        partial void OnListRecupFillerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FillerRecup
        {
            get
            {
                return _FillerRecup;
            }
            set
            {
                if (_FillerRecup != value)
                {
                    OnFillerRecupChanging(value);
                    ReportPropertyChanging("FillerRecup");
                    _FillerRecup = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FillerRecup");
                    OnFillerRecupChanged();
                }
            }
        }
        private global::System.Int32 _FillerRecup;
        partial void OnFillerRecupChanging(global::System.Int32 value);
        partial void OnFillerRecupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MixingTemp
        {
            get
            {
                return _MixingTemp;
            }
            set
            {
                if (_MixingTemp != value)
                {
                    OnMixingTempChanging(value);
                    ReportPropertyChanging("MixingTemp");
                    _MixingTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MixingTemp");
                    OnMixingTempChanged();
                }
            }
        }
        private global::System.Int32 _MixingTemp;
        partial void OnMixingTempChanging(global::System.Int32 value);
        partial void OnMixingTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan MixingTime
        {
            get
            {
                return _MixingTime;
            }
            set
            {
                if (_MixingTime != value)
                {
                    OnMixingTimeChanging(value);
                    ReportPropertyChanging("MixingTime");
                    _MixingTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MixingTime");
                    OnMixingTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _MixingTime;
        partial void OnMixingTimeChanging(global::System.TimeSpan value);
        partial void OnMixingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealCompositionId
        {
            get
            {
                return _RealCompositionId;
            }
            set
            {
                if (_RealCompositionId != value)
                {
                    OnRealCompositionIdChanging(value);
                    ReportPropertyChanging("RealCompositionId");
                    _RealCompositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealCompositionId");
                    OnRealCompositionIdChanged();
                }
            }
        }
        private global::System.Int32 _RealCompositionId;
        partial void OnRealCompositionIdChanging(global::System.Int32 value);
        partial void OnRealCompositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker1
        {
            get
            {
                return _MassOfAggregationBunker1;
            }
            set
            {
                if (_MassOfAggregationBunker1 != value)
                {
                    OnMassOfAggregationBunker1Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker1");
                    _MassOfAggregationBunker1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker1");
                    OnMassOfAggregationBunker1Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker1;
        partial void OnMassOfAggregationBunker1Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker2
        {
            get
            {
                return _MassOfAggregationBunker2;
            }
            set
            {
                if (_MassOfAggregationBunker2 != value)
                {
                    OnMassOfAggregationBunker2Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker2");
                    _MassOfAggregationBunker2 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker2");
                    OnMassOfAggregationBunker2Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker2;
        partial void OnMassOfAggregationBunker2Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker3
        {
            get
            {
                return _MassOfAggregationBunker3;
            }
            set
            {
                if (_MassOfAggregationBunker3 != value)
                {
                    OnMassOfAggregationBunker3Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker3");
                    _MassOfAggregationBunker3 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker3");
                    OnMassOfAggregationBunker3Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker3;
        partial void OnMassOfAggregationBunker3Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker4
        {
            get
            {
                return _MassOfAggregationBunker4;
            }
            set
            {
                if (_MassOfAggregationBunker4 != value)
                {
                    OnMassOfAggregationBunker4Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker4");
                    _MassOfAggregationBunker4 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker4");
                    OnMassOfAggregationBunker4Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker4;
        partial void OnMassOfAggregationBunker4Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker5
        {
            get
            {
                return _MassOfAggregationBunker5;
            }
            set
            {
                if (_MassOfAggregationBunker5 != value)
                {
                    OnMassOfAggregationBunker5Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker5");
                    _MassOfAggregationBunker5 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker5");
                    OnMassOfAggregationBunker5Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker5;
        partial void OnMassOfAggregationBunker5Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker6
        {
            get
            {
                return _MassOfAggregationBunker6;
            }
            set
            {
                if (_MassOfAggregationBunker6 != value)
                {
                    OnMassOfAggregationBunker6Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker6");
                    _MassOfAggregationBunker6 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker6");
                    OnMassOfAggregationBunker6Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker6;
        partial void OnMassOfAggregationBunker6Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Filler
        {
            get
            {
                return _Filler;
            }
            set
            {
                if (_Filler != value)
                {
                    OnFillerChanging(value);
                    ReportPropertyChanging("Filler");
                    _Filler = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Filler");
                    OnFillerChanged();
                }
            }
        }
        private global::System.Int32 _Filler;
        partial void OnFillerChanging(global::System.Int32 value);
        partial void OnFillerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bitumen
        {
            get
            {
                return _Bitumen;
            }
            set
            {
                if (_Bitumen != value)
                {
                    OnBitumenChanging(value);
                    ReportPropertyChanging("Bitumen");
                    _Bitumen = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Bitumen");
                    OnBitumenChanged();
                }
            }
        }
        private global::System.Int32 _Bitumen;
        partial void OnBitumenChanging(global::System.Int32 value);
        partial void OnBitumenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdditivesKg
        {
            get
            {
                return _AdditivesKg;
            }
            set
            {
                if (_AdditivesKg != value)
                {
                    OnAdditivesKgChanging(value);
                    ReportPropertyChanging("AdditivesKg");
                    _AdditivesKg = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdditivesKg");
                    OnAdditivesKgChanged();
                }
            }
        }
        private global::System.Int32 _AdditivesKg;
        partial void OnAdditivesKgChanging(global::System.Int32 value);
        partial void OnAdditivesKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempSilo
        {
            get
            {
                return _TempSilo;
            }
            set
            {
                if (_TempSilo != value)
                {
                    OnTempSiloChanging(value);
                    ReportPropertyChanging("TempSilo");
                    _TempSilo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TempSilo");
                    OnTempSiloChanged();
                }
            }
        }
        private global::System.Int32 _TempSilo;
        partial void OnTempSiloChanging(global::System.Int32 value);
        partial void OnTempSiloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnalysisComposition
        {
            get
            {
                return _AnalysisComposition;
            }
            set
            {
                if (_AnalysisComposition != value)
                {
                    OnAnalysisCompositionChanging(value);
                    ReportPropertyChanging("AnalysisComposition");
                    _AnalysisComposition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AnalysisComposition");
                    OnAnalysisCompositionChanged();
                }
            }
        }
        private global::System.String _AnalysisComposition;
        partial void OnAnalysisCompositionChanging(global::System.String value);
        partial void OnAnalysisCompositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TruckLicensPlate
        {
            get
            {
                return _TruckLicensPlate;
            }
            set
            {
                if (_TruckLicensPlate != value)
                {
                    OnTruckLicensPlateChanging(value);
                    ReportPropertyChanging("TruckLicensPlate");
                    _TruckLicensPlate = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TruckLicensPlate");
                    OnTruckLicensPlateChanged();
                }
            }
        }
        private global::System.String _TruckLicensPlate;
        partial void OnTruckLicensPlateChanging(global::System.String value);
        partial void OnTruckLicensPlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureTime
        {
            get
            {
                return _DepartureTime;
            }
            set
            {
                if (_DepartureTime != value)
                {
                    OnDepartureTimeChanging(value);
                    ReportPropertyChanging("DepartureTime");
                    _DepartureTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartureTime");
                    OnDepartureTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartureTime;
        partial void OnDepartureTimeChanging(global::System.DateTime value);
        partial void OnDepartureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassTruck
        {
            get
            {
                return _MassTruck;
            }
            set
            {
                if (_MassTruck != value)
                {
                    OnMassTruckChanging(value);
                    ReportPropertyChanging("MassTruck");
                    _MassTruck = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassTruck");
                    OnMassTruckChanged();
                }
            }
        }
        private global::System.Int32 _MassTruck;
        partial void OnMassTruckChanging(global::System.Int32 value);
        partial void OnMassTruckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionId
        {
            get
            {
                return _ActualPositionId;
            }
            set
            {
                if (_ActualPositionId != value)
                {
                    OnActualPositionIdChanging(value);
                    ReportPropertyChanging("ActualPositionId");
                    _ActualPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionId");
                    OnActualPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionId;
        partial void OnActualPositionIdChanging(global::System.Int32 value);
        partial void OnActualPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPosition
        {
            get
            {
                return _ActualPosition;
            }
            set
            {
                if (_ActualPosition != value)
                {
                    OnActualPositionChanging(value);
                    ReportPropertyChanging("ActualPosition");
                    _ActualPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPosition");
                    OnActualPositionChanged();
                }
            }
        }
        private global::System.String _ActualPosition;
        partial void OnActualPositionChanging(global::System.String value);
        partial void OnActualPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAId
        {
            get
            {
                return _ETAId;
            }
            set
            {
                if (_ETAId != value)
                {
                    OnETAIdChanging(value);
                    ReportPropertyChanging("ETAId");
                    _ETAId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAId");
                    OnETAIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAId;
        partial void OnETAIdChanging(global::System.Int32 value);
        partial void OnETAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETA
        {
            get
            {
                return _ETA;
            }
            set
            {
                if (_ETA != value)
                {
                    OnETAChanging(value);
                    ReportPropertyChanging("ETA");
                    _ETA = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETA");
                    OnETAChanged();
                }
            }
        }
        private global::System.String _ETA;
        partial void OnETAChanging(global::System.String value);
        partial void OnETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealArrivalTime
        {
            get
            {
                return _RealArrivalTime;
            }
            set
            {
                if (_RealArrivalTime != value)
                {
                    OnRealArrivalTimeChanging(value);
                    ReportPropertyChanging("RealArrivalTime");
                    _RealArrivalTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealArrivalTime");
                    OnRealArrivalTimeChanged();
                }
            }
        }
        private global::System.DateTime _RealArrivalTime;
        partial void OnRealArrivalTimeChanging(global::System.DateTime value);
        partial void OnRealArrivalTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeattachmentFinisherTime
        {
            get
            {
                return _DeattachmentFinisherTime;
            }
            set
            {
                if (_DeattachmentFinisherTime != value)
                {
                    OnDeattachmentFinisherTimeChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherTime");
                    _DeattachmentFinisherTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeattachmentFinisherTime");
                    OnDeattachmentFinisherTimeChanged();
                }
            }
        }
        private global::System.DateTime _DeattachmentFinisherTime;
        partial void OnDeattachmentFinisherTimeChanging(global::System.DateTime value);
        partial void OnDeattachmentFinisherTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeattachmentFinisherPosition
        {
            get
            {
                return _DeattachmentFinisherPosition;
            }
            set
            {
                if (_DeattachmentFinisherPosition != value)
                {
                    OnDeattachmentFinisherPositionChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherPosition");
                    _DeattachmentFinisherPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DeattachmentFinisherPosition");
                    OnDeattachmentFinisherPositionChanged();
                }
            }
        }
        private global::System.String _DeattachmentFinisherPosition;
        partial void OnDeattachmentFinisherPositionChanging(global::System.String value);
        partial void OnDeattachmentFinisherPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionReturnId
        {
            get
            {
                return _ActualPositionReturnId;
            }
            set
            {
                if (_ActualPositionReturnId != value)
                {
                    OnActualPositionReturnIdChanging(value);
                    ReportPropertyChanging("ActualPositionReturnId");
                    _ActualPositionReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionReturnId");
                    OnActualPositionReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionReturnId;
        partial void OnActualPositionReturnIdChanging(global::System.Int32 value);
        partial void OnActualPositionReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPositionReturn
        {
            get
            {
                return _ActualPositionReturn;
            }
            set
            {
                if (_ActualPositionReturn != value)
                {
                    OnActualPositionReturnChanging(value);
                    ReportPropertyChanging("ActualPositionReturn");
                    _ActualPositionReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPositionReturn");
                    OnActualPositionReturnChanged();
                }
            }
        }
        private global::System.String _ActualPositionReturn;
        partial void OnActualPositionReturnChanging(global::System.String value);
        partial void OnActualPositionReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAReturnId
        {
            get
            {
                return _ETAReturnId;
            }
            set
            {
                if (_ETAReturnId != value)
                {
                    OnETAReturnIdChanging(value);
                    ReportPropertyChanging("ETAReturnId");
                    _ETAReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAReturnId");
                    OnETAReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAReturnId;
        partial void OnETAReturnIdChanging(global::System.Int32 value);
        partial void OnETAReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETAReturn
        {
            get
            {
                return _ETAReturn;
            }
            set
            {
                if (_ETAReturn != value)
                {
                    OnETAReturnChanging(value);
                    ReportPropertyChanging("ETAReturn");
                    _ETAReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETAReturn");
                    OnETAReturnChanged();
                }
            }
        }
        private global::System.String _ETAReturn;
        partial void OnETAReturnChanging(global::System.String value);
        partial void OnETAReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArrivalAtPlant
        {
            get
            {
                return _ArrivalAtPlant;
            }
            set
            {
                if (_ArrivalAtPlant != value)
                {
                    OnArrivalAtPlantChanging(value);
                    ReportPropertyChanging("ArrivalAtPlant");
                    _ArrivalAtPlant = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArrivalAtPlant");
                    OnArrivalAtPlantChanged();
                }
            }
        }
        private global::System.DateTime _ArrivalAtPlant;
        partial void OnArrivalAtPlantChanging(global::System.DateTime value);
        partial void OnArrivalAtPlantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnforseenStop
        {
            get
            {
                return _UnforseenStop;
            }
            set
            {
                if (_UnforseenStop != value)
                {
                    OnUnforseenStopChanging(value);
                    ReportPropertyChanging("UnforseenStop");
                    _UnforseenStop = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnforseenStop");
                    OnUnforseenStopChanged();
                }
            }
        }
        private global::System.Int32 _UnforseenStop;
        partial void OnUnforseenStopChanging(global::System.Int32 value);
        partial void OnUnforseenStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualTempId
        {
            get
            {
                return _ActualTempId;
            }
            set
            {
                if (_ActualTempId != value)
                {
                    OnActualTempIdChanging(value);
                    ReportPropertyChanging("ActualTempId");
                    _ActualTempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualTempId");
                    OnActualTempIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualTempId;
        partial void OnActualTempIdChanging(global::System.Int32 value);
        partial void OnActualTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                if (_Temp != value)
                {
                    OnTempChanging(value);
                    ReportPropertyChanging("Temp");
                    _Temp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Temp");
                    OnTempChanged();
                }
            }
        }
        private global::System.Int32 _Temp;
        partial void OnTempChanging(global::System.Int32 value);
        partial void OnTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QrCodeCompactor
        {
            get
            {
                return _QrCodeCompactor;
            }
            set
            {
                if (_QrCodeCompactor != value)
                {
                    OnQrCodeCompactorChanging(value);
                    ReportPropertyChanging("QrCodeCompactor");
                    _QrCodeCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QrCodeCompactor");
                    OnQrCodeCompactorChanged();
                }
            }
        }
        private global::System.String _QrCodeCompactor;
        partial void OnQrCodeCompactorChanging(global::System.String value);
        partial void OnQrCodeCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SamplesCopro
        {
            get
            {
                return _SamplesCopro;
            }
            set
            {
                if (_SamplesCopro != value)
                {
                    OnSamplesCoproChanging(value);
                    ReportPropertyChanging("SamplesCopro");
                    _SamplesCopro = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SamplesCopro");
                    OnSamplesCoproChanged();
                }
            }
        }
        private global::System.String _SamplesCopro;
        partial void OnSamplesCoproChanging(global::System.String value);
        partial void OnSamplesCoproChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComplianceMixture
        {
            get
            {
                return _ComplianceMixture;
            }
            set
            {
                if (_ComplianceMixture != value)
                {
                    OnComplianceMixtureChanging(value);
                    ReportPropertyChanging("ComplianceMixture");
                    _ComplianceMixture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ComplianceMixture");
                    OnComplianceMixtureChanged();
                }
            }
        }
        private global::System.String _ComplianceMixture;
        partial void OnComplianceMixtureChanging(global::System.String value);
        partial void OnComplianceMixtureChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="AsphaltTemp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AsphaltTemp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AsphaltTemp object.
        /// </summary>
        /// <param name="asphaltTempId">Initial value of the AsphaltTempId property.</param>
        /// <param name="gPS">Initial value of the GPS property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        public static AsphaltTemp CreateAsphaltTemp(global::System.Int32 asphaltTempId, global::System.String gPS, global::System.Int32 temp)
        {
            AsphaltTemp asphaltTemp = new AsphaltTemp();
            asphaltTemp.AsphaltTempId = asphaltTempId;
            asphaltTemp.GPS = gPS;
            asphaltTemp.Temp = temp;
            return asphaltTemp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AsphaltTempId
        {
            get
            {
                return _AsphaltTempId;
            }
            set
            {
                if (_AsphaltTempId != value)
                {
                    OnAsphaltTempIdChanging(value);
                    ReportPropertyChanging("AsphaltTempId");
                    _AsphaltTempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AsphaltTempId");
                    OnAsphaltTempIdChanged();
                }
            }
        }
        private global::System.Int32 _AsphaltTempId;
        partial void OnAsphaltTempIdChanging(global::System.Int32 value);
        partial void OnAsphaltTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPS
        {
            get
            {
                return _GPS;
            }
            set
            {
                OnGPSChanging(value);
                ReportPropertyChanging("GPS");
                _GPS = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GPS");
                OnGPSChanged();
            }
        }
        private global::System.String _GPS;
        partial void OnGPSChanging(global::System.String value);
        partial void OnGPSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                OnTempChanging(value);
                ReportPropertyChanging("Temp");
                _Temp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Temp");
                OnTempChanged();
            }
        }
        private global::System.Int32 _Temp;
        partial void OnTempChanging(global::System.Int32 value);
        partial void OnTempChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_8", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_8", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_8", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="BatchList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BatchList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BatchList object.
        /// </summary>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="siloId">Initial value of the SiloId property.</param>
        /// <param name="transportId">Initial value of the TransportId property.</param>
        public static BatchList CreateBatchList(global::System.Int32 batchId, global::System.Int32 projectId, global::System.Int32 siloId, global::System.Int32 transportId)
        {
            BatchList batchList = new BatchList();
            batchList.BatchId = batchId;
            batchList.ProjectId = projectId;
            batchList.SiloId = siloId;
            batchList.TransportId = transportId;
            return batchList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                if (_BatchId != value)
                {
                    OnBatchIdChanging(value);
                    ReportPropertyChanging("BatchId");
                    _BatchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BatchId");
                    OnBatchIdChanged();
                }
            }
        }
        private global::System.Int32 _BatchId;
        partial void OnBatchIdChanging(global::System.Int32 value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiloId
        {
            get
            {
                return _SiloId;
            }
            set
            {
                OnSiloIdChanging(value);
                ReportPropertyChanging("SiloId");
                _SiloId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiloId");
                OnSiloIdChanged();
            }
        }
        private global::System.Int32 _SiloId;
        partial void OnSiloIdChanging(global::System.Int32 value);
        partial void OnSiloIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransportId
        {
            get
            {
                return _TransportId;
            }
            set
            {
                OnTransportIdChanging(value);
                ReportPropertyChanging("TransportId");
                _TransportId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransportId");
                OnTransportIdChanged();
            }
        }
        private global::System.Int32 _TransportId;
        partial void OnTransportIdChanging(global::System.Int32 value);
        partial void OnTransportIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "BatchList_ibfk_1", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.BatchList_ibfk_1", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.BatchList_ibfk_1", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.BatchList_ibfk_1", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("RoadItEntitiesModel.BatchList_ibfk_1", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "BatchList_ibfk_2", "Silo")]
        public Silo Silo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Silo>("RoadItEntitiesModel.BatchList_ibfk_2", "Silo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Silo>("RoadItEntitiesModel.BatchList_ibfk_2", "Silo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Silo> SiloReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Silo>("RoadItEntitiesModel.BatchList_ibfk_2", "Silo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Silo>("RoadItEntitiesModel.BatchList_ibfk_2", "Silo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "BatchList_ibfk_3", "Transport")]
        public Transport Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport>("RoadItEntitiesModel.BatchList_ibfk_3", "Transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport>("RoadItEntitiesModel.BatchList_ibfk_3", "Transport").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transport> TransportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport>("RoadItEntitiesModel.BatchList_ibfk_3", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transport>("RoadItEntitiesModel.BatchList_ibfk_3", "Transport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Compactor_ibfk_2", "Compactor")]
        public EntityCollection<Compactor> Compactors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Compactor>("RoadItEntitiesModel.Compactor_ibfk_2", "Compactor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Compactor>("RoadItEntitiesModel.Compactor_ibfk_2", "Compactor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Bituman")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bituman : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bituman object.
        /// </summary>
        /// <param name="bitumenId">Initial value of the BitumenId property.</param>
        /// <param name="bitumenTimeStamp">Initial value of the BitumenTimeStamp property.</param>
        /// <param name="bitumenMinTemp">Initial value of the BitumenMinTemp property.</param>
        /// <param name="bitumenMaxTemp">Initial value of the BitumenMaxTemp property.</param>
        public static Bituman CreateBituman(global::System.Int32 bitumenId, global::System.DateTime bitumenTimeStamp, global::System.Int32 bitumenMinTemp, global::System.Int32 bitumenMaxTemp)
        {
            Bituman bituman = new Bituman();
            bituman.BitumenId = bitumenId;
            bituman.BitumenTimeStamp = bitumenTimeStamp;
            bituman.BitumenMinTemp = bitumenMinTemp;
            bituman.BitumenMaxTemp = bitumenMaxTemp;
            return bituman;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenId
        {
            get
            {
                return _BitumenId;
            }
            set
            {
                if (_BitumenId != value)
                {
                    OnBitumenIdChanging(value);
                    ReportPropertyChanging("BitumenId");
                    _BitumenId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenId");
                    OnBitumenIdChanged();
                }
            }
        }
        private global::System.Int32 _BitumenId;
        partial void OnBitumenIdChanging(global::System.Int32 value);
        partial void OnBitumenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BitumenTimeStamp
        {
            get
            {
                return _BitumenTimeStamp;
            }
            set
            {
                OnBitumenTimeStampChanging(value);
                ReportPropertyChanging("BitumenTimeStamp");
                _BitumenTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BitumenTimeStamp");
                OnBitumenTimeStampChanged();
            }
        }
        private global::System.DateTime _BitumenTimeStamp;
        partial void OnBitumenTimeStampChanging(global::System.DateTime value);
        partial void OnBitumenTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMinTemp
        {
            get
            {
                return _BitumenMinTemp;
            }
            set
            {
                OnBitumenMinTempChanging(value);
                ReportPropertyChanging("BitumenMinTemp");
                _BitumenMinTemp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BitumenMinTemp");
                OnBitumenMinTempChanged();
            }
        }
        private global::System.Int32 _BitumenMinTemp;
        partial void OnBitumenMinTempChanging(global::System.Int32 value);
        partial void OnBitumenMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMaxTemp
        {
            get
            {
                return _BitumenMaxTemp;
            }
            set
            {
                OnBitumenMaxTempChanging(value);
                ReportPropertyChanging("BitumenMaxTemp");
                _BitumenMaxTemp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BitumenMaxTemp");
                OnBitumenMaxTempChanged();
            }
        }
        private global::System.Int32 _BitumenMaxTemp;
        partial void OnBitumenMaxTempChanging(global::System.Int32 value);
        partial void OnBitumenMaxTempChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_3", "Silo")]
        public EntityCollection<Silo> Silos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_3", "Silo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_3", "Silo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="roadId">Initial value of the RoadId property.</param>
        /// <param name="roadDescription">Initial value of the RoadDescription property.</param>
        /// <param name="technicalDataSheet">Initial value of the TechnicalDataSheet property.</param>
        /// <param name="mixtureName">Initial value of the MixtureName property.</param>
        /// <param name="mixtureChange">Initial value of the MixtureChange property.</param>
        /// <param name="truckLicensPlate">Initial value of the TruckLicensPlate property.</param>
        /// <param name="departureTime">Initial value of the DepartureTime property.</param>
        /// <param name="massTruck">Initial value of the MassTruck property.</param>
        /// <param name="actualPositionId">Initial value of the ActualPositionId property.</param>
        /// <param name="actualPosition">Initial value of the ActualPosition property.</param>
        /// <param name="eTAId">Initial value of the ETAId property.</param>
        /// <param name="eTA">Initial value of the ETA property.</param>
        /// <param name="realArrivalTime">Initial value of the RealArrivalTime property.</param>
        /// <param name="speedId">Initial value of the SpeedId property.</param>
        /// <param name="finisherSpeed">Initial value of the FinisherSpeed property.</param>
        /// <param name="angleId">Initial value of the AngleId property.</param>
        /// <param name="angleLeft">Initial value of the AngleLeft property.</param>
        /// <param name="angleRight">Initial value of the AngleRight property.</param>
        /// <param name="widthId">Initial value of the WidthId property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="thicknessLayerId">Initial value of the ThicknessLayerId property.</param>
        /// <param name="thicknessLeft">Initial value of the ThicknessLeft property.</param>
        /// <param name="thicknessMiddel">Initial value of the ThicknessMiddel property.</param>
        /// <param name="thicknessRight">Initial value of the ThicknessRight property.</param>
        /// <param name="tranverseSlope">Initial value of the TranverseSlope property.</param>
        /// <param name="locationAndTimeSpanId">Initial value of the LocationAndTimeSpanId property.</param>
        /// <param name="stopLocation">Initial value of the StopLocation property.</param>
        /// <param name="stopTime">Initial value of the StopTime property.</param>
        /// <param name="precipation">Initial value of the Precipation property.</param>
        /// <param name="tempId">Initial value of the TempId property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        /// <param name="windId">Initial value of the WindId property.</param>
        /// <param name="windSpeed">Initial value of the WindSpeed property.</param>
        /// <param name="airHumidityId">Initial value of the AirHumidityId property.</param>
        /// <param name="airHumidity">Initial value of the AirHumidity property.</param>
        /// <param name="asphaltTempAfterFinisherIrScanOrThermo">Initial value of the AsphaltTempAfterFinisherIrScanOrThermo property.</param>
        /// <param name="qrCodeCompactor">Initial value of the QrCodeCompactor property.</param>
        /// <param name="colorCodeId">Initial value of the ColorCodeId property.</param>
        /// <param name="gPSFinisher">Initial value of the GPSFinisher property.</param>
        /// <param name="gPSCompactor">Initial value of the GPSCompactor property.</param>
        /// <param name="complianceMixture">Initial value of the ComplianceMixture property.</param>
        /// <param name="samplesCopro">Initial value of the SamplesCopro property.</param>
        /// <param name="densityOfField">Initial value of the DensityOfField property.</param>
        /// <param name="cores">Initial value of the Cores property.</param>
        /// <param name="lengthwiseFlatness">Initial value of the LengthwiseFlatness property.</param>
        /// <param name="skidresistance">Initial value of the Skidresistance property.</param>
        /// <param name="iri">Initial value of the Iri property.</param>
        /// <param name="extraTestsAskedBijClient">Initial value of the ExtraTestsAskedBijClient property.</param>
        public static Client CreateClient(global::System.Int32 roadId, global::System.String roadDescription, global::System.String technicalDataSheet, global::System.String mixtureName, global::System.String mixtureChange, global::System.String truckLicensPlate, global::System.DateTime departureTime, global::System.Int32 massTruck, global::System.Int32 actualPositionId, global::System.String actualPosition, global::System.Int32 eTAId, global::System.String eTA, global::System.DateTime realArrivalTime, global::System.Int32 speedId, global::System.Int32 finisherSpeed, global::System.Int32 angleId, global::System.Int32 angleLeft, global::System.Int32 angleRight, global::System.Int32 widthId, global::System.Int32 width, global::System.Int32 thicknessLayerId, global::System.Int32 thicknessLeft, global::System.Int32 thicknessMiddel, global::System.Int32 thicknessRight, global::System.Int32 tranverseSlope, global::System.Int32 locationAndTimeSpanId, global::System.String stopLocation, global::System.TimeSpan stopTime, global::System.String precipation, global::System.Int32 tempId, global::System.Int32 temp, global::System.Int32 windId, global::System.Int32 windSpeed, global::System.Int32 airHumidityId, global::System.Int32 airHumidity, global::System.String asphaltTempAfterFinisherIrScanOrThermo, global::System.String qrCodeCompactor, global::System.Int32 colorCodeId, global::System.String gPSFinisher, global::System.String gPSCompactor, global::System.String complianceMixture, global::System.String samplesCopro, global::System.String densityOfField, global::System.String cores, global::System.String lengthwiseFlatness, global::System.String skidresistance, global::System.String iri, global::System.String extraTestsAskedBijClient)
        {
            Client client = new Client();
            client.RoadId = roadId;
            client.RoadDescription = roadDescription;
            client.TechnicalDataSheet = technicalDataSheet;
            client.MixtureName = mixtureName;
            client.MixtureChange = mixtureChange;
            client.TruckLicensPlate = truckLicensPlate;
            client.DepartureTime = departureTime;
            client.MassTruck = massTruck;
            client.ActualPositionId = actualPositionId;
            client.ActualPosition = actualPosition;
            client.ETAId = eTAId;
            client.ETA = eTA;
            client.RealArrivalTime = realArrivalTime;
            client.SpeedId = speedId;
            client.FinisherSpeed = finisherSpeed;
            client.AngleId = angleId;
            client.AngleLeft = angleLeft;
            client.AngleRight = angleRight;
            client.WidthId = widthId;
            client.Width = width;
            client.ThicknessLayerId = thicknessLayerId;
            client.ThicknessLeft = thicknessLeft;
            client.ThicknessMiddel = thicknessMiddel;
            client.ThicknessRight = thicknessRight;
            client.TranverseSlope = tranverseSlope;
            client.LocationAndTimeSpanId = locationAndTimeSpanId;
            client.StopLocation = stopLocation;
            client.StopTime = stopTime;
            client.Precipation = precipation;
            client.TempId = tempId;
            client.Temp = temp;
            client.WindId = windId;
            client.WindSpeed = windSpeed;
            client.AirHumidityId = airHumidityId;
            client.AirHumidity = airHumidity;
            client.AsphaltTempAfterFinisherIrScanOrThermo = asphaltTempAfterFinisherIrScanOrThermo;
            client.QrCodeCompactor = qrCodeCompactor;
            client.ColorCodeId = colorCodeId;
            client.GPSFinisher = gPSFinisher;
            client.GPSCompactor = gPSCompactor;
            client.ComplianceMixture = complianceMixture;
            client.SamplesCopro = samplesCopro;
            client.DensityOfField = densityOfField;
            client.Cores = cores;
            client.LengthwiseFlatness = lengthwiseFlatness;
            client.Skidresistance = skidresistance;
            client.Iri = iri;
            client.ExtraTestsAskedBijClient = extraTestsAskedBijClient;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoadId
        {
            get
            {
                return _RoadId;
            }
            set
            {
                if (_RoadId != value)
                {
                    OnRoadIdChanging(value);
                    ReportPropertyChanging("RoadId");
                    _RoadId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoadId");
                    OnRoadIdChanged();
                }
            }
        }
        private global::System.Int32 _RoadId;
        partial void OnRoadIdChanging(global::System.Int32 value);
        partial void OnRoadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoadDescription
        {
            get
            {
                return _RoadDescription;
            }
            set
            {
                if (_RoadDescription != value)
                {
                    OnRoadDescriptionChanging(value);
                    ReportPropertyChanging("RoadDescription");
                    _RoadDescription = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoadDescription");
                    OnRoadDescriptionChanged();
                }
            }
        }
        private global::System.String _RoadDescription;
        partial void OnRoadDescriptionChanging(global::System.String value);
        partial void OnRoadDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TechnicalDataSheet
        {
            get
            {
                return _TechnicalDataSheet;
            }
            set
            {
                if (_TechnicalDataSheet != value)
                {
                    OnTechnicalDataSheetChanging(value);
                    ReportPropertyChanging("TechnicalDataSheet");
                    _TechnicalDataSheet = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TechnicalDataSheet");
                    OnTechnicalDataSheetChanged();
                }
            }
        }
        private global::System.String _TechnicalDataSheet;
        partial void OnTechnicalDataSheetChanging(global::System.String value);
        partial void OnTechnicalDataSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureName
        {
            get
            {
                return _MixtureName;
            }
            set
            {
                if (_MixtureName != value)
                {
                    OnMixtureNameChanging(value);
                    ReportPropertyChanging("MixtureName");
                    _MixtureName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureName");
                    OnMixtureNameChanged();
                }
            }
        }
        private global::System.String _MixtureName;
        partial void OnMixtureNameChanging(global::System.String value);
        partial void OnMixtureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureChange
        {
            get
            {
                return _MixtureChange;
            }
            set
            {
                if (_MixtureChange != value)
                {
                    OnMixtureChangeChanging(value);
                    ReportPropertyChanging("MixtureChange");
                    _MixtureChange = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureChange");
                    OnMixtureChangeChanged();
                }
            }
        }
        private global::System.String _MixtureChange;
        partial void OnMixtureChangeChanging(global::System.String value);
        partial void OnMixtureChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TruckLicensPlate
        {
            get
            {
                return _TruckLicensPlate;
            }
            set
            {
                if (_TruckLicensPlate != value)
                {
                    OnTruckLicensPlateChanging(value);
                    ReportPropertyChanging("TruckLicensPlate");
                    _TruckLicensPlate = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TruckLicensPlate");
                    OnTruckLicensPlateChanged();
                }
            }
        }
        private global::System.String _TruckLicensPlate;
        partial void OnTruckLicensPlateChanging(global::System.String value);
        partial void OnTruckLicensPlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureTime
        {
            get
            {
                return _DepartureTime;
            }
            set
            {
                if (_DepartureTime != value)
                {
                    OnDepartureTimeChanging(value);
                    ReportPropertyChanging("DepartureTime");
                    _DepartureTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartureTime");
                    OnDepartureTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartureTime;
        partial void OnDepartureTimeChanging(global::System.DateTime value);
        partial void OnDepartureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassTruck
        {
            get
            {
                return _MassTruck;
            }
            set
            {
                if (_MassTruck != value)
                {
                    OnMassTruckChanging(value);
                    ReportPropertyChanging("MassTruck");
                    _MassTruck = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassTruck");
                    OnMassTruckChanged();
                }
            }
        }
        private global::System.Int32 _MassTruck;
        partial void OnMassTruckChanging(global::System.Int32 value);
        partial void OnMassTruckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionId
        {
            get
            {
                return _ActualPositionId;
            }
            set
            {
                if (_ActualPositionId != value)
                {
                    OnActualPositionIdChanging(value);
                    ReportPropertyChanging("ActualPositionId");
                    _ActualPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionId");
                    OnActualPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionId;
        partial void OnActualPositionIdChanging(global::System.Int32 value);
        partial void OnActualPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPosition
        {
            get
            {
                return _ActualPosition;
            }
            set
            {
                if (_ActualPosition != value)
                {
                    OnActualPositionChanging(value);
                    ReportPropertyChanging("ActualPosition");
                    _ActualPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPosition");
                    OnActualPositionChanged();
                }
            }
        }
        private global::System.String _ActualPosition;
        partial void OnActualPositionChanging(global::System.String value);
        partial void OnActualPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAId
        {
            get
            {
                return _ETAId;
            }
            set
            {
                if (_ETAId != value)
                {
                    OnETAIdChanging(value);
                    ReportPropertyChanging("ETAId");
                    _ETAId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAId");
                    OnETAIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAId;
        partial void OnETAIdChanging(global::System.Int32 value);
        partial void OnETAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETA
        {
            get
            {
                return _ETA;
            }
            set
            {
                if (_ETA != value)
                {
                    OnETAChanging(value);
                    ReportPropertyChanging("ETA");
                    _ETA = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETA");
                    OnETAChanged();
                }
            }
        }
        private global::System.String _ETA;
        partial void OnETAChanging(global::System.String value);
        partial void OnETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealArrivalTime
        {
            get
            {
                return _RealArrivalTime;
            }
            set
            {
                if (_RealArrivalTime != value)
                {
                    OnRealArrivalTimeChanging(value);
                    ReportPropertyChanging("RealArrivalTime");
                    _RealArrivalTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealArrivalTime");
                    OnRealArrivalTimeChanged();
                }
            }
        }
        private global::System.DateTime _RealArrivalTime;
        partial void OnRealArrivalTimeChanging(global::System.DateTime value);
        partial void OnRealArrivalTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedId
        {
            get
            {
                return _SpeedId;
            }
            set
            {
                if (_SpeedId != value)
                {
                    OnSpeedIdChanging(value);
                    ReportPropertyChanging("SpeedId");
                    _SpeedId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpeedId");
                    OnSpeedIdChanged();
                }
            }
        }
        private global::System.Int32 _SpeedId;
        partial void OnSpeedIdChanging(global::System.Int32 value);
        partial void OnSpeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinisherSpeed
        {
            get
            {
                return _FinisherSpeed;
            }
            set
            {
                if (_FinisherSpeed != value)
                {
                    OnFinisherSpeedChanging(value);
                    ReportPropertyChanging("FinisherSpeed");
                    _FinisherSpeed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinisherSpeed");
                    OnFinisherSpeedChanged();
                }
            }
        }
        private global::System.Int32 _FinisherSpeed;
        partial void OnFinisherSpeedChanging(global::System.Int32 value);
        partial void OnFinisherSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleId
        {
            get
            {
                return _AngleId;
            }
            set
            {
                if (_AngleId != value)
                {
                    OnAngleIdChanging(value);
                    ReportPropertyChanging("AngleId");
                    _AngleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleId");
                    OnAngleIdChanged();
                }
            }
        }
        private global::System.Int32 _AngleId;
        partial void OnAngleIdChanging(global::System.Int32 value);
        partial void OnAngleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleLeft
        {
            get
            {
                return _AngleLeft;
            }
            set
            {
                if (_AngleLeft != value)
                {
                    OnAngleLeftChanging(value);
                    ReportPropertyChanging("AngleLeft");
                    _AngleLeft = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleLeft");
                    OnAngleLeftChanged();
                }
            }
        }
        private global::System.Int32 _AngleLeft;
        partial void OnAngleLeftChanging(global::System.Int32 value);
        partial void OnAngleLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleRight
        {
            get
            {
                return _AngleRight;
            }
            set
            {
                if (_AngleRight != value)
                {
                    OnAngleRightChanging(value);
                    ReportPropertyChanging("AngleRight");
                    _AngleRight = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleRight");
                    OnAngleRightChanged();
                }
            }
        }
        private global::System.Int32 _AngleRight;
        partial void OnAngleRightChanging(global::System.Int32 value);
        partial void OnAngleRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WidthId
        {
            get
            {
                return _WidthId;
            }
            set
            {
                if (_WidthId != value)
                {
                    OnWidthIdChanging(value);
                    ReportPropertyChanging("WidthId");
                    _WidthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WidthId");
                    OnWidthIdChanged();
                }
            }
        }
        private global::System.Int32 _WidthId;
        partial void OnWidthIdChanging(global::System.Int32 value);
        partial void OnWidthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                if (_Width != value)
                {
                    OnWidthChanging(value);
                    ReportPropertyChanging("Width");
                    _Width = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Width");
                    OnWidthChanged();
                }
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessLayerId
        {
            get
            {
                return _ThicknessLayerId;
            }
            set
            {
                if (_ThicknessLayerId != value)
                {
                    OnThicknessLayerIdChanging(value);
                    ReportPropertyChanging("ThicknessLayerId");
                    _ThicknessLayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessLayerId");
                    OnThicknessLayerIdChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessLayerId;
        partial void OnThicknessLayerIdChanging(global::System.Int32 value);
        partial void OnThicknessLayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessLeft
        {
            get
            {
                return _ThicknessLeft;
            }
            set
            {
                if (_ThicknessLeft != value)
                {
                    OnThicknessLeftChanging(value);
                    ReportPropertyChanging("ThicknessLeft");
                    _ThicknessLeft = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessLeft");
                    OnThicknessLeftChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessLeft;
        partial void OnThicknessLeftChanging(global::System.Int32 value);
        partial void OnThicknessLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessMiddel
        {
            get
            {
                return _ThicknessMiddel;
            }
            set
            {
                if (_ThicknessMiddel != value)
                {
                    OnThicknessMiddelChanging(value);
                    ReportPropertyChanging("ThicknessMiddel");
                    _ThicknessMiddel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessMiddel");
                    OnThicknessMiddelChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessMiddel;
        partial void OnThicknessMiddelChanging(global::System.Int32 value);
        partial void OnThicknessMiddelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessRight
        {
            get
            {
                return _ThicknessRight;
            }
            set
            {
                if (_ThicknessRight != value)
                {
                    OnThicknessRightChanging(value);
                    ReportPropertyChanging("ThicknessRight");
                    _ThicknessRight = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessRight");
                    OnThicknessRightChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessRight;
        partial void OnThicknessRightChanging(global::System.Int32 value);
        partial void OnThicknessRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TranverseSlope
        {
            get
            {
                return _TranverseSlope;
            }
            set
            {
                if (_TranverseSlope != value)
                {
                    OnTranverseSlopeChanging(value);
                    ReportPropertyChanging("TranverseSlope");
                    _TranverseSlope = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TranverseSlope");
                    OnTranverseSlopeChanged();
                }
            }
        }
        private global::System.Int32 _TranverseSlope;
        partial void OnTranverseSlopeChanging(global::System.Int32 value);
        partial void OnTranverseSlopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationAndTimeSpanId
        {
            get
            {
                return _LocationAndTimeSpanId;
            }
            set
            {
                if (_LocationAndTimeSpanId != value)
                {
                    OnLocationAndTimeSpanIdChanging(value);
                    ReportPropertyChanging("LocationAndTimeSpanId");
                    _LocationAndTimeSpanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationAndTimeSpanId");
                    OnLocationAndTimeSpanIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationAndTimeSpanId;
        partial void OnLocationAndTimeSpanIdChanging(global::System.Int32 value);
        partial void OnLocationAndTimeSpanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StopLocation
        {
            get
            {
                return _StopLocation;
            }
            set
            {
                if (_StopLocation != value)
                {
                    OnStopLocationChanging(value);
                    ReportPropertyChanging("StopLocation");
                    _StopLocation = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StopLocation");
                    OnStopLocationChanged();
                }
            }
        }
        private global::System.String _StopLocation;
        partial void OnStopLocationChanging(global::System.String value);
        partial void OnStopLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StopTime
        {
            get
            {
                return _StopTime;
            }
            set
            {
                if (_StopTime != value)
                {
                    OnStopTimeChanging(value);
                    ReportPropertyChanging("StopTime");
                    _StopTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StopTime");
                    OnStopTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _StopTime;
        partial void OnStopTimeChanging(global::System.TimeSpan value);
        partial void OnStopTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Precipation
        {
            get
            {
                return _Precipation;
            }
            set
            {
                if (_Precipation != value)
                {
                    OnPrecipationChanging(value);
                    ReportPropertyChanging("Precipation");
                    _Precipation = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Precipation");
                    OnPrecipationChanged();
                }
            }
        }
        private global::System.String _Precipation;
        partial void OnPrecipationChanging(global::System.String value);
        partial void OnPrecipationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempId
        {
            get
            {
                return _TempId;
            }
            set
            {
                if (_TempId != value)
                {
                    OnTempIdChanging(value);
                    ReportPropertyChanging("TempId");
                    _TempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TempId");
                    OnTempIdChanged();
                }
            }
        }
        private global::System.Int32 _TempId;
        partial void OnTempIdChanging(global::System.Int32 value);
        partial void OnTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                if (_Temp != value)
                {
                    OnTempChanging(value);
                    ReportPropertyChanging("Temp");
                    _Temp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Temp");
                    OnTempChanged();
                }
            }
        }
        private global::System.Int32 _Temp;
        partial void OnTempChanging(global::System.Int32 value);
        partial void OnTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindId
        {
            get
            {
                return _WindId;
            }
            set
            {
                if (_WindId != value)
                {
                    OnWindIdChanging(value);
                    ReportPropertyChanging("WindId");
                    _WindId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindId");
                    OnWindIdChanged();
                }
            }
        }
        private global::System.Int32 _WindId;
        partial void OnWindIdChanging(global::System.Int32 value);
        partial void OnWindIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindSpeed
        {
            get
            {
                return _WindSpeed;
            }
            set
            {
                if (_WindSpeed != value)
                {
                    OnWindSpeedChanging(value);
                    ReportPropertyChanging("WindSpeed");
                    _WindSpeed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindSpeed");
                    OnWindSpeedChanged();
                }
            }
        }
        private global::System.Int32 _WindSpeed;
        partial void OnWindSpeedChanging(global::System.Int32 value);
        partial void OnWindSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidityId
        {
            get
            {
                return _AirHumidityId;
            }
            set
            {
                if (_AirHumidityId != value)
                {
                    OnAirHumidityIdChanging(value);
                    ReportPropertyChanging("AirHumidityId");
                    _AirHumidityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirHumidityId");
                    OnAirHumidityIdChanged();
                }
            }
        }
        private global::System.Int32 _AirHumidityId;
        partial void OnAirHumidityIdChanging(global::System.Int32 value);
        partial void OnAirHumidityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidity
        {
            get
            {
                return _AirHumidity;
            }
            set
            {
                if (_AirHumidity != value)
                {
                    OnAirHumidityChanging(value);
                    ReportPropertyChanging("AirHumidity");
                    _AirHumidity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirHumidity");
                    OnAirHumidityChanged();
                }
            }
        }
        private global::System.Int32 _AirHumidity;
        partial void OnAirHumidityChanging(global::System.Int32 value);
        partial void OnAirHumidityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AsphaltTempAfterFinisherIrScanOrThermo
        {
            get
            {
                return _AsphaltTempAfterFinisherIrScanOrThermo;
            }
            set
            {
                if (_AsphaltTempAfterFinisherIrScanOrThermo != value)
                {
                    OnAsphaltTempAfterFinisherIrScanOrThermoChanging(value);
                    ReportPropertyChanging("AsphaltTempAfterFinisherIrScanOrThermo");
                    _AsphaltTempAfterFinisherIrScanOrThermo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AsphaltTempAfterFinisherIrScanOrThermo");
                    OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
                }
            }
        }
        private global::System.String _AsphaltTempAfterFinisherIrScanOrThermo;
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanging(global::System.String value);
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QrCodeCompactor
        {
            get
            {
                return _QrCodeCompactor;
            }
            set
            {
                if (_QrCodeCompactor != value)
                {
                    OnQrCodeCompactorChanging(value);
                    ReportPropertyChanging("QrCodeCompactor");
                    _QrCodeCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QrCodeCompactor");
                    OnQrCodeCompactorChanged();
                }
            }
        }
        private global::System.String _QrCodeCompactor;
        partial void OnQrCodeCompactorChanging(global::System.String value);
        partial void OnQrCodeCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorCodeId
        {
            get
            {
                return _ColorCodeId;
            }
            set
            {
                if (_ColorCodeId != value)
                {
                    OnColorCodeIdChanging(value);
                    ReportPropertyChanging("ColorCodeId");
                    _ColorCodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColorCodeId");
                    OnColorCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _ColorCodeId;
        partial void OnColorCodeIdChanging(global::System.Int32 value);
        partial void OnColorCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSFinisher
        {
            get
            {
                return _GPSFinisher;
            }
            set
            {
                if (_GPSFinisher != value)
                {
                    OnGPSFinisherChanging(value);
                    ReportPropertyChanging("GPSFinisher");
                    _GPSFinisher = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GPSFinisher");
                    OnGPSFinisherChanged();
                }
            }
        }
        private global::System.String _GPSFinisher;
        partial void OnGPSFinisherChanging(global::System.String value);
        partial void OnGPSFinisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSCompactor
        {
            get
            {
                return _GPSCompactor;
            }
            set
            {
                if (_GPSCompactor != value)
                {
                    OnGPSCompactorChanging(value);
                    ReportPropertyChanging("GPSCompactor");
                    _GPSCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GPSCompactor");
                    OnGPSCompactorChanged();
                }
            }
        }
        private global::System.String _GPSCompactor;
        partial void OnGPSCompactorChanging(global::System.String value);
        partial void OnGPSCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComplianceMixture
        {
            get
            {
                return _ComplianceMixture;
            }
            set
            {
                if (_ComplianceMixture != value)
                {
                    OnComplianceMixtureChanging(value);
                    ReportPropertyChanging("ComplianceMixture");
                    _ComplianceMixture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ComplianceMixture");
                    OnComplianceMixtureChanged();
                }
            }
        }
        private global::System.String _ComplianceMixture;
        partial void OnComplianceMixtureChanging(global::System.String value);
        partial void OnComplianceMixtureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SamplesCopro
        {
            get
            {
                return _SamplesCopro;
            }
            set
            {
                if (_SamplesCopro != value)
                {
                    OnSamplesCoproChanging(value);
                    ReportPropertyChanging("SamplesCopro");
                    _SamplesCopro = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SamplesCopro");
                    OnSamplesCoproChanged();
                }
            }
        }
        private global::System.String _SamplesCopro;
        partial void OnSamplesCoproChanging(global::System.String value);
        partial void OnSamplesCoproChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DensityOfField
        {
            get
            {
                return _DensityOfField;
            }
            set
            {
                if (_DensityOfField != value)
                {
                    OnDensityOfFieldChanging(value);
                    ReportPropertyChanging("DensityOfField");
                    _DensityOfField = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DensityOfField");
                    OnDensityOfFieldChanged();
                }
            }
        }
        private global::System.String _DensityOfField;
        partial void OnDensityOfFieldChanging(global::System.String value);
        partial void OnDensityOfFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cores
        {
            get
            {
                return _Cores;
            }
            set
            {
                if (_Cores != value)
                {
                    OnCoresChanging(value);
                    ReportPropertyChanging("Cores");
                    _Cores = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Cores");
                    OnCoresChanged();
                }
            }
        }
        private global::System.String _Cores;
        partial void OnCoresChanging(global::System.String value);
        partial void OnCoresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LengthwiseFlatness
        {
            get
            {
                return _LengthwiseFlatness;
            }
            set
            {
                if (_LengthwiseFlatness != value)
                {
                    OnLengthwiseFlatnessChanging(value);
                    ReportPropertyChanging("LengthwiseFlatness");
                    _LengthwiseFlatness = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LengthwiseFlatness");
                    OnLengthwiseFlatnessChanged();
                }
            }
        }
        private global::System.String _LengthwiseFlatness;
        partial void OnLengthwiseFlatnessChanging(global::System.String value);
        partial void OnLengthwiseFlatnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Skidresistance
        {
            get
            {
                return _Skidresistance;
            }
            set
            {
                if (_Skidresistance != value)
                {
                    OnSkidresistanceChanging(value);
                    ReportPropertyChanging("Skidresistance");
                    _Skidresistance = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Skidresistance");
                    OnSkidresistanceChanged();
                }
            }
        }
        private global::System.String _Skidresistance;
        partial void OnSkidresistanceChanging(global::System.String value);
        partial void OnSkidresistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Iri
        {
            get
            {
                return _Iri;
            }
            set
            {
                if (_Iri != value)
                {
                    OnIriChanging(value);
                    ReportPropertyChanging("Iri");
                    _Iri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Iri");
                    OnIriChanged();
                }
            }
        }
        private global::System.String _Iri;
        partial void OnIriChanging(global::System.String value);
        partial void OnIriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtraTestsAskedBijClient
        {
            get
            {
                return _ExtraTestsAskedBijClient;
            }
            set
            {
                if (_ExtraTestsAskedBijClient != value)
                {
                    OnExtraTestsAskedBijClientChanging(value);
                    ReportPropertyChanging("ExtraTestsAskedBijClient");
                    _ExtraTestsAskedBijClient = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ExtraTestsAskedBijClient");
                    OnExtraTestsAskedBijClientChanged();
                }
            }
        }
        private global::System.String _ExtraTestsAskedBijClient;
        partial void OnExtraTestsAskedBijClientChanging(global::System.String value);
        partial void OnExtraTestsAskedBijClientChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="ColorCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ColorCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ColorCode object.
        /// </summary>
        /// <param name="colorCodeID">Initial value of the ColorCodeID property.</param>
        /// <param name="gPSFinisher">Initial value of the GPSFinisher property.</param>
        /// <param name="gPSCompactor">Initial value of the GPSCompactor property.</param>
        public static ColorCode CreateColorCode(global::System.Int32 colorCodeID, global::System.String gPSFinisher, global::System.String gPSCompactor)
        {
            ColorCode colorCode = new ColorCode();
            colorCode.ColorCodeID = colorCodeID;
            colorCode.GPSFinisher = gPSFinisher;
            colorCode.GPSCompactor = gPSCompactor;
            return colorCode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorCodeID
        {
            get
            {
                return _ColorCodeID;
            }
            set
            {
                if (_ColorCodeID != value)
                {
                    OnColorCodeIDChanging(value);
                    ReportPropertyChanging("ColorCodeID");
                    _ColorCodeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColorCodeID");
                    OnColorCodeIDChanged();
                }
            }
        }
        private global::System.Int32 _ColorCodeID;
        partial void OnColorCodeIDChanging(global::System.Int32 value);
        partial void OnColorCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSFinisher
        {
            get
            {
                return _GPSFinisher;
            }
            set
            {
                OnGPSFinisherChanging(value);
                ReportPropertyChanging("GPSFinisher");
                _GPSFinisher = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GPSFinisher");
                OnGPSFinisherChanged();
            }
        }
        private global::System.String _GPSFinisher;
        partial void OnGPSFinisherChanging(global::System.String value);
        partial void OnGPSFinisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSCompactor
        {
            get
            {
                return _GPSCompactor;
            }
            set
            {
                OnGPSCompactorChanging(value);
                ReportPropertyChanging("GPSCompactor");
                _GPSCompactor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GPSCompactor");
                OnGPSCompactorChanged();
            }
        }
        private global::System.String _GPSCompactor;
        partial void OnGPSCompactorChanging(global::System.String value);
        partial void OnGPSCompactorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Compactor_ibfk_1", "Compactor")]
        public EntityCollection<Compactor> Compactors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Compactor>("RoadItEntitiesModel.Compactor_ibfk_1", "Compactor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Compactor>("RoadItEntitiesModel.Compactor_ibfk_1", "Compactor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Compactor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Compactor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Compactor object.
        /// </summary>
        /// <param name="compactorId">Initial value of the CompactorId property.</param>
        /// <param name="batchId">Initial value of the BatchId property.</param>
        /// <param name="qrCodeCompactor">Initial value of the QrCodeCompactor property.</param>
        /// <param name="numberOfRollerCompactorPassages">Initial value of the NumberOfRollerCompactorPassages property.</param>
        /// <param name="locationOfVibration">Initial value of the LocationOfVibration property.</param>
        /// <param name="colorCodeId">Initial value of the ColorCodeId property.</param>
        /// <param name="speedOfRollerCompactor">Initial value of the SpeedOfRollerCompactor property.</param>
        public static Compactor CreateCompactor(global::System.Int32 compactorId, global::System.Int32 batchId, global::System.String qrCodeCompactor, global::System.Int32 numberOfRollerCompactorPassages, global::System.String locationOfVibration, global::System.Int32 colorCodeId, global::System.Int32 speedOfRollerCompactor)
        {
            Compactor compactor = new Compactor();
            compactor.CompactorId = compactorId;
            compactor.BatchId = batchId;
            compactor.QrCodeCompactor = qrCodeCompactor;
            compactor.NumberOfRollerCompactorPassages = numberOfRollerCompactorPassages;
            compactor.LocationOfVibration = locationOfVibration;
            compactor.ColorCodeId = colorCodeId;
            compactor.SpeedOfRollerCompactor = speedOfRollerCompactor;
            return compactor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompactorId
        {
            get
            {
                return _CompactorId;
            }
            set
            {
                if (_CompactorId != value)
                {
                    OnCompactorIdChanging(value);
                    ReportPropertyChanging("CompactorId");
                    _CompactorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompactorId");
                    OnCompactorIdChanged();
                }
            }
        }
        private global::System.Int32 _CompactorId;
        partial void OnCompactorIdChanging(global::System.Int32 value);
        partial void OnCompactorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BatchId
        {
            get
            {
                return _BatchId;
            }
            set
            {
                OnBatchIdChanging(value);
                ReportPropertyChanging("BatchId");
                _BatchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchId");
                OnBatchIdChanged();
            }
        }
        private global::System.Int32 _BatchId;
        partial void OnBatchIdChanging(global::System.Int32 value);
        partial void OnBatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QrCodeCompactor
        {
            get
            {
                return _QrCodeCompactor;
            }
            set
            {
                OnQrCodeCompactorChanging(value);
                ReportPropertyChanging("QrCodeCompactor");
                _QrCodeCompactor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QrCodeCompactor");
                OnQrCodeCompactorChanged();
            }
        }
        private global::System.String _QrCodeCompactor;
        partial void OnQrCodeCompactorChanging(global::System.String value);
        partial void OnQrCodeCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfRollerCompactorPassages
        {
            get
            {
                return _NumberOfRollerCompactorPassages;
            }
            set
            {
                OnNumberOfRollerCompactorPassagesChanging(value);
                ReportPropertyChanging("NumberOfRollerCompactorPassages");
                _NumberOfRollerCompactorPassages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfRollerCompactorPassages");
                OnNumberOfRollerCompactorPassagesChanged();
            }
        }
        private global::System.Int32 _NumberOfRollerCompactorPassages;
        partial void OnNumberOfRollerCompactorPassagesChanging(global::System.Int32 value);
        partial void OnNumberOfRollerCompactorPassagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationOfVibration
        {
            get
            {
                return _LocationOfVibration;
            }
            set
            {
                OnLocationOfVibrationChanging(value);
                ReportPropertyChanging("LocationOfVibration");
                _LocationOfVibration = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocationOfVibration");
                OnLocationOfVibrationChanged();
            }
        }
        private global::System.String _LocationOfVibration;
        partial void OnLocationOfVibrationChanging(global::System.String value);
        partial void OnLocationOfVibrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorCodeId
        {
            get
            {
                return _ColorCodeId;
            }
            set
            {
                OnColorCodeIdChanging(value);
                ReportPropertyChanging("ColorCodeId");
                _ColorCodeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColorCodeId");
                OnColorCodeIdChanged();
            }
        }
        private global::System.Int32 _ColorCodeId;
        partial void OnColorCodeIdChanging(global::System.Int32 value);
        partial void OnColorCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedOfRollerCompactor
        {
            get
            {
                return _SpeedOfRollerCompactor;
            }
            set
            {
                OnSpeedOfRollerCompactorChanging(value);
                ReportPropertyChanging("SpeedOfRollerCompactor");
                _SpeedOfRollerCompactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpeedOfRollerCompactor");
                OnSpeedOfRollerCompactorChanged();
            }
        }
        private global::System.Int32 _SpeedOfRollerCompactor;
        partial void OnSpeedOfRollerCompactorChanging(global::System.Int32 value);
        partial void OnSpeedOfRollerCompactorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Compactor_ibfk_2", "BatchList")]
        public BatchList BatchList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BatchList>("RoadItEntitiesModel.Compactor_ibfk_2", "BatchList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BatchList>("RoadItEntitiesModel.Compactor_ibfk_2", "BatchList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BatchList> BatchListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BatchList>("RoadItEntitiesModel.Compactor_ibfk_2", "BatchList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BatchList>("RoadItEntitiesModel.Compactor_ibfk_2", "BatchList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Compactor_ibfk_1", "ColorCode")]
        public ColorCode ColorCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ColorCode>("RoadItEntitiesModel.Compactor_ibfk_1", "ColorCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ColorCode>("RoadItEntitiesModel.Compactor_ibfk_1", "ColorCode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ColorCode> ColorCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ColorCode>("RoadItEntitiesModel.Compactor_ibfk_1", "ColorCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ColorCode>("RoadItEntitiesModel.Compactor_ibfk_1", "ColorCode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Composition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Composition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Composition object.
        /// </summary>
        /// <param name="realCompositionId">Initial value of the RealCompositionId property.</param>
        /// <param name="massOfAggregationBunker1">Initial value of the MassOfAggregationBunker1 property.</param>
        /// <param name="massOfAggregationBunker2">Initial value of the MassOfAggregationBunker2 property.</param>
        /// <param name="massOfAggregationBunker3">Initial value of the MassOfAggregationBunker3 property.</param>
        /// <param name="massOfAggregationBunker4">Initial value of the MassOfAggregationBunker4 property.</param>
        /// <param name="massOfAggregationBunker5">Initial value of the MassOfAggregationBunker5 property.</param>
        /// <param name="massOfAggregationBunker6">Initial value of the MassOfAggregationBunker6 property.</param>
        /// <param name="filler">Initial value of the Filler property.</param>
        /// <param name="bitumen">Initial value of the Bitumen property.</param>
        /// <param name="additivesKg">Initial value of the AdditivesKg property.</param>
        public static Composition CreateComposition(global::System.Int32 realCompositionId, global::System.Int32 massOfAggregationBunker1, global::System.Int32 massOfAggregationBunker2, global::System.Int32 massOfAggregationBunker3, global::System.Int32 massOfAggregationBunker4, global::System.Int32 massOfAggregationBunker5, global::System.Int32 massOfAggregationBunker6, global::System.Int32 filler, global::System.Int32 bitumen, global::System.Int32 additivesKg)
        {
            Composition composition = new Composition();
            composition.RealCompositionId = realCompositionId;
            composition.MassOfAggregationBunker1 = massOfAggregationBunker1;
            composition.MassOfAggregationBunker2 = massOfAggregationBunker2;
            composition.MassOfAggregationBunker3 = massOfAggregationBunker3;
            composition.MassOfAggregationBunker4 = massOfAggregationBunker4;
            composition.MassOfAggregationBunker5 = massOfAggregationBunker5;
            composition.MassOfAggregationBunker6 = massOfAggregationBunker6;
            composition.Filler = filler;
            composition.Bitumen = bitumen;
            composition.AdditivesKg = additivesKg;
            return composition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealCompositionId
        {
            get
            {
                return _RealCompositionId;
            }
            set
            {
                if (_RealCompositionId != value)
                {
                    OnRealCompositionIdChanging(value);
                    ReportPropertyChanging("RealCompositionId");
                    _RealCompositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealCompositionId");
                    OnRealCompositionIdChanged();
                }
            }
        }
        private global::System.Int32 _RealCompositionId;
        partial void OnRealCompositionIdChanging(global::System.Int32 value);
        partial void OnRealCompositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker1
        {
            get
            {
                return _MassOfAggregationBunker1;
            }
            set
            {
                OnMassOfAggregationBunker1Changing(value);
                ReportPropertyChanging("MassOfAggregationBunker1");
                _MassOfAggregationBunker1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MassOfAggregationBunker1");
                OnMassOfAggregationBunker1Changed();
            }
        }
        private global::System.Int32 _MassOfAggregationBunker1;
        partial void OnMassOfAggregationBunker1Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker2
        {
            get
            {
                return _MassOfAggregationBunker2;
            }
            set
            {
                OnMassOfAggregationBunker2Changing(value);
                ReportPropertyChanging("MassOfAggregationBunker2");
                _MassOfAggregationBunker2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MassOfAggregationBunker2");
                OnMassOfAggregationBunker2Changed();
            }
        }
        private global::System.Int32 _MassOfAggregationBunker2;
        partial void OnMassOfAggregationBunker2Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker3
        {
            get
            {
                return _MassOfAggregationBunker3;
            }
            set
            {
                OnMassOfAggregationBunker3Changing(value);
                ReportPropertyChanging("MassOfAggregationBunker3");
                _MassOfAggregationBunker3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MassOfAggregationBunker3");
                OnMassOfAggregationBunker3Changed();
            }
        }
        private global::System.Int32 _MassOfAggregationBunker3;
        partial void OnMassOfAggregationBunker3Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker4
        {
            get
            {
                return _MassOfAggregationBunker4;
            }
            set
            {
                OnMassOfAggregationBunker4Changing(value);
                ReportPropertyChanging("MassOfAggregationBunker4");
                _MassOfAggregationBunker4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MassOfAggregationBunker4");
                OnMassOfAggregationBunker4Changed();
            }
        }
        private global::System.Int32 _MassOfAggregationBunker4;
        partial void OnMassOfAggregationBunker4Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker5
        {
            get
            {
                return _MassOfAggregationBunker5;
            }
            set
            {
                OnMassOfAggregationBunker5Changing(value);
                ReportPropertyChanging("MassOfAggregationBunker5");
                _MassOfAggregationBunker5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MassOfAggregationBunker5");
                OnMassOfAggregationBunker5Changed();
            }
        }
        private global::System.Int32 _MassOfAggregationBunker5;
        partial void OnMassOfAggregationBunker5Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker6
        {
            get
            {
                return _MassOfAggregationBunker6;
            }
            set
            {
                OnMassOfAggregationBunker6Changing(value);
                ReportPropertyChanging("MassOfAggregationBunker6");
                _MassOfAggregationBunker6 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MassOfAggregationBunker6");
                OnMassOfAggregationBunker6Changed();
            }
        }
        private global::System.Int32 _MassOfAggregationBunker6;
        partial void OnMassOfAggregationBunker6Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Filler
        {
            get
            {
                return _Filler;
            }
            set
            {
                OnFillerChanging(value);
                ReportPropertyChanging("Filler");
                _Filler = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Filler");
                OnFillerChanged();
            }
        }
        private global::System.Int32 _Filler;
        partial void OnFillerChanging(global::System.Int32 value);
        partial void OnFillerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bitumen
        {
            get
            {
                return _Bitumen;
            }
            set
            {
                OnBitumenChanging(value);
                ReportPropertyChanging("Bitumen");
                _Bitumen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bitumen");
                OnBitumenChanged();
            }
        }
        private global::System.Int32 _Bitumen;
        partial void OnBitumenChanging(global::System.Int32 value);
        partial void OnBitumenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdditivesKg
        {
            get
            {
                return _AdditivesKg;
            }
            set
            {
                OnAdditivesKgChanging(value);
                ReportPropertyChanging("AdditivesKg");
                _AdditivesKg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdditivesKg");
                OnAdditivesKgChanged();
            }
        }
        private global::System.Int32 _AdditivesKg;
        partial void OnAdditivesKgChanging(global::System.Int32 value);
        partial void OnAdditivesKgChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_5", "Silo")]
        public EntityCollection<Silo> Silos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_5", "Silo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_5", "Silo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Contractor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contractor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contractor object.
        /// </summary>
        /// <param name="contractorId">Initial value of the ContractorId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static Contractor CreateContractor(global::System.Int32 contractorId, global::System.Int32 projectId)
        {
            Contractor contractor = new Contractor();
            contractor.ContractorId = contractorId;
            contractor.ProjectId = projectId;
            return contractor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorId
        {
            get
            {
                return _ContractorId;
            }
            set
            {
                if (_ContractorId != value)
                {
                    OnContractorIdChanging(value);
                    ReportPropertyChanging("ContractorId");
                    _ContractorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContractorId");
                    OnContractorIdChanged();
                }
            }
        }
        private global::System.Int32 _ContractorId;
        partial void OnContractorIdChanging(global::System.Int32 value);
        partial void OnContractorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Contractor_ibfk_1", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.Contractor_ibfk_1", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.Contractor_ibfk_1", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.Contractor_ibfk_1", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("RoadItEntitiesModel.Contractor_ibfk_1", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="ContractorView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorView object.
        /// </summary>
        /// <param name="layerThickness">Initial value of the LayerThickness property.</param>
        /// <param name="surface">Initial value of the Surface property.</param>
        /// <param name="tonPerDay">Initial value of the TonPerDay property.</param>
        /// <param name="technicalDataSheet">Initial value of the TechnicalDataSheet property.</param>
        /// <param name="mixtureName">Initial value of the MixtureName property.</param>
        /// <param name="truckLicensPlate">Initial value of the TruckLicensPlate property.</param>
        /// <param name="departureTime">Initial value of the DepartureTime property.</param>
        /// <param name="massTruck">Initial value of the MassTruck property.</param>
        /// <param name="actualPositionId">Initial value of the ActualPositionId property.</param>
        /// <param name="actualPosition">Initial value of the ActualPosition property.</param>
        /// <param name="eTAId">Initial value of the ETAId property.</param>
        /// <param name="eTA">Initial value of the ETA property.</param>
        /// <param name="realArrivalTime">Initial value of the RealArrivalTime property.</param>
        /// <param name="deattachmentFinisherTime">Initial value of the DeattachmentFinisherTime property.</param>
        /// <param name="deattachmentFinisherPosition">Initial value of the DeattachmentFinisherPosition property.</param>
        /// <param name="actualPositionReturnId">Initial value of the ActualPositionReturnId property.</param>
        /// <param name="actualPositionReturn">Initial value of the ActualPositionReturn property.</param>
        /// <param name="eTAReturnId">Initial value of the ETAReturnId property.</param>
        /// <param name="eTAReturn">Initial value of the ETAReturn property.</param>
        /// <param name="arrivalAtPlant">Initial value of the ArrivalAtPlant property.</param>
        /// <param name="unforseenStop">Initial value of the UnforseenStop property.</param>
        /// <param name="finisherId">Initial value of the FinisherId property.</param>
        /// <param name="speedId">Initial value of the SpeedId property.</param>
        /// <param name="finisherSpeed">Initial value of the FinisherSpeed property.</param>
        /// <param name="angleId">Initial value of the AngleId property.</param>
        /// <param name="angleLeft">Initial value of the AngleLeft property.</param>
        /// <param name="angleRight">Initial value of the AngleRight property.</param>
        /// <param name="widthId">Initial value of the WidthId property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="thicknessLayerId">Initial value of the ThicknessLayerId property.</param>
        /// <param name="thicknessLeft">Initial value of the ThicknessLeft property.</param>
        /// <param name="thicknessMiddel">Initial value of the ThicknessMiddel property.</param>
        /// <param name="thicknessRight">Initial value of the ThicknessRight property.</param>
        /// <param name="tranverseSlope">Initial value of the TranverseSlope property.</param>
        /// <param name="locationAndTimeSpanId">Initial value of the LocationAndTimeSpanId property.</param>
        /// <param name="stopLocation">Initial value of the StopLocation property.</param>
        /// <param name="stopTime">Initial value of the StopTime property.</param>
        /// <param name="precipation">Initial value of the Precipation property.</param>
        /// <param name="tempId">Initial value of the TempId property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        /// <param name="windId">Initial value of the WindId property.</param>
        /// <param name="windSpeed">Initial value of the WindSpeed property.</param>
        /// <param name="airHumidityId">Initial value of the AirHumidityId property.</param>
        /// <param name="airHumidity">Initial value of the AirHumidity property.</param>
        /// <param name="asphaltTempAfterFinisherIrScanOrThermo">Initial value of the AsphaltTempAfterFinisherIrScanOrThermo property.</param>
        /// <param name="complianceMixture">Initial value of the ComplianceMixture property.</param>
        /// <param name="samplesCopro">Initial value of the SamplesCopro property.</param>
        /// <param name="densityOfField">Initial value of the DensityOfField property.</param>
        /// <param name="cores">Initial value of the Cores property.</param>
        /// <param name="lengthwiseFlatness">Initial value of the LengthwiseFlatness property.</param>
        /// <param name="skidresistance">Initial value of the Skidresistance property.</param>
        /// <param name="iri">Initial value of the Iri property.</param>
        /// <param name="extraTestsAskedBijClient">Initial value of the ExtraTestsAskedBijClient property.</param>
        /// <param name="qrCodeCompactor">Initial value of the QrCodeCompactor property.</param>
        /// <param name="numberOfRollerCompactorPassages">Initial value of the NumberOfRollerCompactorPassages property.</param>
        /// <param name="locationOfVibration">Initial value of the LocationOfVibration property.</param>
        /// <param name="colorCodeId">Initial value of the ColorCodeId property.</param>
        /// <param name="gPSFinisher">Initial value of the GPSFinisher property.</param>
        /// <param name="gPSCompactor">Initial value of the GPSCompactor property.</param>
        /// <param name="speedOfRollerCompactor">Initial value of the SpeedOfRollerCompactor property.</param>
        public static ContractorView CreateContractorView(global::System.Int32 layerThickness, global::System.Int32 surface, global::System.Int32 tonPerDay, global::System.String technicalDataSheet, global::System.String mixtureName, global::System.String truckLicensPlate, global::System.DateTime departureTime, global::System.Int32 massTruck, global::System.Int32 actualPositionId, global::System.String actualPosition, global::System.Int32 eTAId, global::System.String eTA, global::System.DateTime realArrivalTime, global::System.DateTime deattachmentFinisherTime, global::System.String deattachmentFinisherPosition, global::System.Int32 actualPositionReturnId, global::System.String actualPositionReturn, global::System.Int32 eTAReturnId, global::System.String eTAReturn, global::System.DateTime arrivalAtPlant, global::System.Int32 unforseenStop, global::System.Int32 finisherId, global::System.Int32 speedId, global::System.Int32 finisherSpeed, global::System.Int32 angleId, global::System.Int32 angleLeft, global::System.Int32 angleRight, global::System.Int32 widthId, global::System.Int32 width, global::System.Int32 thicknessLayerId, global::System.Int32 thicknessLeft, global::System.Int32 thicknessMiddel, global::System.Int32 thicknessRight, global::System.Int32 tranverseSlope, global::System.Int32 locationAndTimeSpanId, global::System.String stopLocation, global::System.TimeSpan stopTime, global::System.String precipation, global::System.Int32 tempId, global::System.Int32 temp, global::System.Int32 windId, global::System.Int32 windSpeed, global::System.Int32 airHumidityId, global::System.Int32 airHumidity, global::System.String asphaltTempAfterFinisherIrScanOrThermo, global::System.String complianceMixture, global::System.String samplesCopro, global::System.String densityOfField, global::System.String cores, global::System.String lengthwiseFlatness, global::System.String skidresistance, global::System.String iri, global::System.String extraTestsAskedBijClient, global::System.String qrCodeCompactor, global::System.Int32 numberOfRollerCompactorPassages, global::System.String locationOfVibration, global::System.Int32 colorCodeId, global::System.String gPSFinisher, global::System.String gPSCompactor, global::System.Int32 speedOfRollerCompactor)
        {
            ContractorView contractorView = new ContractorView();
            contractorView.LayerThickness = layerThickness;
            contractorView.Surface = surface;
            contractorView.TonPerDay = tonPerDay;
            contractorView.TechnicalDataSheet = technicalDataSheet;
            contractorView.MixtureName = mixtureName;
            contractorView.TruckLicensPlate = truckLicensPlate;
            contractorView.DepartureTime = departureTime;
            contractorView.MassTruck = massTruck;
            contractorView.ActualPositionId = actualPositionId;
            contractorView.ActualPosition = actualPosition;
            contractorView.ETAId = eTAId;
            contractorView.ETA = eTA;
            contractorView.RealArrivalTime = realArrivalTime;
            contractorView.DeattachmentFinisherTime = deattachmentFinisherTime;
            contractorView.DeattachmentFinisherPosition = deattachmentFinisherPosition;
            contractorView.ActualPositionReturnId = actualPositionReturnId;
            contractorView.ActualPositionReturn = actualPositionReturn;
            contractorView.ETAReturnId = eTAReturnId;
            contractorView.ETAReturn = eTAReturn;
            contractorView.ArrivalAtPlant = arrivalAtPlant;
            contractorView.UnforseenStop = unforseenStop;
            contractorView.FinisherId = finisherId;
            contractorView.SpeedId = speedId;
            contractorView.FinisherSpeed = finisherSpeed;
            contractorView.AngleId = angleId;
            contractorView.AngleLeft = angleLeft;
            contractorView.AngleRight = angleRight;
            contractorView.WidthId = widthId;
            contractorView.Width = width;
            contractorView.ThicknessLayerId = thicknessLayerId;
            contractorView.ThicknessLeft = thicknessLeft;
            contractorView.ThicknessMiddel = thicknessMiddel;
            contractorView.ThicknessRight = thicknessRight;
            contractorView.TranverseSlope = tranverseSlope;
            contractorView.LocationAndTimeSpanId = locationAndTimeSpanId;
            contractorView.StopLocation = stopLocation;
            contractorView.StopTime = stopTime;
            contractorView.Precipation = precipation;
            contractorView.TempId = tempId;
            contractorView.Temp = temp;
            contractorView.WindId = windId;
            contractorView.WindSpeed = windSpeed;
            contractorView.AirHumidityId = airHumidityId;
            contractorView.AirHumidity = airHumidity;
            contractorView.AsphaltTempAfterFinisherIrScanOrThermo = asphaltTempAfterFinisherIrScanOrThermo;
            contractorView.ComplianceMixture = complianceMixture;
            contractorView.SamplesCopro = samplesCopro;
            contractorView.DensityOfField = densityOfField;
            contractorView.Cores = cores;
            contractorView.LengthwiseFlatness = lengthwiseFlatness;
            contractorView.Skidresistance = skidresistance;
            contractorView.Iri = iri;
            contractorView.ExtraTestsAskedBijClient = extraTestsAskedBijClient;
            contractorView.QrCodeCompactor = qrCodeCompactor;
            contractorView.NumberOfRollerCompactorPassages = numberOfRollerCompactorPassages;
            contractorView.LocationOfVibration = locationOfVibration;
            contractorView.ColorCodeId = colorCodeId;
            contractorView.GPSFinisher = gPSFinisher;
            contractorView.GPSCompactor = gPSCompactor;
            contractorView.SpeedOfRollerCompactor = speedOfRollerCompactor;
            return contractorView;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LayerThickness
        {
            get
            {
                return _LayerThickness;
            }
            set
            {
                if (_LayerThickness != value)
                {
                    OnLayerThicknessChanging(value);
                    ReportPropertyChanging("LayerThickness");
                    _LayerThickness = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LayerThickness");
                    OnLayerThicknessChanged();
                }
            }
        }
        private global::System.Int32 _LayerThickness;
        partial void OnLayerThicknessChanging(global::System.Int32 value);
        partial void OnLayerThicknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Surface
        {
            get
            {
                return _Surface;
            }
            set
            {
                if (_Surface != value)
                {
                    OnSurfaceChanging(value);
                    ReportPropertyChanging("Surface");
                    _Surface = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Surface");
                    OnSurfaceChanged();
                }
            }
        }
        private global::System.Int32 _Surface;
        partial void OnSurfaceChanging(global::System.Int32 value);
        partial void OnSurfaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TonPerDay
        {
            get
            {
                return _TonPerDay;
            }
            set
            {
                if (_TonPerDay != value)
                {
                    OnTonPerDayChanging(value);
                    ReportPropertyChanging("TonPerDay");
                    _TonPerDay = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TonPerDay");
                    OnTonPerDayChanged();
                }
            }
        }
        private global::System.Int32 _TonPerDay;
        partial void OnTonPerDayChanging(global::System.Int32 value);
        partial void OnTonPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TechnicalDataSheet
        {
            get
            {
                return _TechnicalDataSheet;
            }
            set
            {
                if (_TechnicalDataSheet != value)
                {
                    OnTechnicalDataSheetChanging(value);
                    ReportPropertyChanging("TechnicalDataSheet");
                    _TechnicalDataSheet = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TechnicalDataSheet");
                    OnTechnicalDataSheetChanged();
                }
            }
        }
        private global::System.String _TechnicalDataSheet;
        partial void OnTechnicalDataSheetChanging(global::System.String value);
        partial void OnTechnicalDataSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureName
        {
            get
            {
                return _MixtureName;
            }
            set
            {
                if (_MixtureName != value)
                {
                    OnMixtureNameChanging(value);
                    ReportPropertyChanging("MixtureName");
                    _MixtureName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureName");
                    OnMixtureNameChanged();
                }
            }
        }
        private global::System.String _MixtureName;
        partial void OnMixtureNameChanging(global::System.String value);
        partial void OnMixtureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TruckLicensPlate
        {
            get
            {
                return _TruckLicensPlate;
            }
            set
            {
                if (_TruckLicensPlate != value)
                {
                    OnTruckLicensPlateChanging(value);
                    ReportPropertyChanging("TruckLicensPlate");
                    _TruckLicensPlate = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TruckLicensPlate");
                    OnTruckLicensPlateChanged();
                }
            }
        }
        private global::System.String _TruckLicensPlate;
        partial void OnTruckLicensPlateChanging(global::System.String value);
        partial void OnTruckLicensPlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureTime
        {
            get
            {
                return _DepartureTime;
            }
            set
            {
                if (_DepartureTime != value)
                {
                    OnDepartureTimeChanging(value);
                    ReportPropertyChanging("DepartureTime");
                    _DepartureTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartureTime");
                    OnDepartureTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartureTime;
        partial void OnDepartureTimeChanging(global::System.DateTime value);
        partial void OnDepartureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassTruck
        {
            get
            {
                return _MassTruck;
            }
            set
            {
                if (_MassTruck != value)
                {
                    OnMassTruckChanging(value);
                    ReportPropertyChanging("MassTruck");
                    _MassTruck = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassTruck");
                    OnMassTruckChanged();
                }
            }
        }
        private global::System.Int32 _MassTruck;
        partial void OnMassTruckChanging(global::System.Int32 value);
        partial void OnMassTruckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionId
        {
            get
            {
                return _ActualPositionId;
            }
            set
            {
                if (_ActualPositionId != value)
                {
                    OnActualPositionIdChanging(value);
                    ReportPropertyChanging("ActualPositionId");
                    _ActualPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionId");
                    OnActualPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionId;
        partial void OnActualPositionIdChanging(global::System.Int32 value);
        partial void OnActualPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPosition
        {
            get
            {
                return _ActualPosition;
            }
            set
            {
                if (_ActualPosition != value)
                {
                    OnActualPositionChanging(value);
                    ReportPropertyChanging("ActualPosition");
                    _ActualPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPosition");
                    OnActualPositionChanged();
                }
            }
        }
        private global::System.String _ActualPosition;
        partial void OnActualPositionChanging(global::System.String value);
        partial void OnActualPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAId
        {
            get
            {
                return _ETAId;
            }
            set
            {
                if (_ETAId != value)
                {
                    OnETAIdChanging(value);
                    ReportPropertyChanging("ETAId");
                    _ETAId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAId");
                    OnETAIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAId;
        partial void OnETAIdChanging(global::System.Int32 value);
        partial void OnETAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETA
        {
            get
            {
                return _ETA;
            }
            set
            {
                if (_ETA != value)
                {
                    OnETAChanging(value);
                    ReportPropertyChanging("ETA");
                    _ETA = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETA");
                    OnETAChanged();
                }
            }
        }
        private global::System.String _ETA;
        partial void OnETAChanging(global::System.String value);
        partial void OnETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealArrivalTime
        {
            get
            {
                return _RealArrivalTime;
            }
            set
            {
                if (_RealArrivalTime != value)
                {
                    OnRealArrivalTimeChanging(value);
                    ReportPropertyChanging("RealArrivalTime");
                    _RealArrivalTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealArrivalTime");
                    OnRealArrivalTimeChanged();
                }
            }
        }
        private global::System.DateTime _RealArrivalTime;
        partial void OnRealArrivalTimeChanging(global::System.DateTime value);
        partial void OnRealArrivalTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeattachmentFinisherTime
        {
            get
            {
                return _DeattachmentFinisherTime;
            }
            set
            {
                if (_DeattachmentFinisherTime != value)
                {
                    OnDeattachmentFinisherTimeChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherTime");
                    _DeattachmentFinisherTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeattachmentFinisherTime");
                    OnDeattachmentFinisherTimeChanged();
                }
            }
        }
        private global::System.DateTime _DeattachmentFinisherTime;
        partial void OnDeattachmentFinisherTimeChanging(global::System.DateTime value);
        partial void OnDeattachmentFinisherTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeattachmentFinisherPosition
        {
            get
            {
                return _DeattachmentFinisherPosition;
            }
            set
            {
                if (_DeattachmentFinisherPosition != value)
                {
                    OnDeattachmentFinisherPositionChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherPosition");
                    _DeattachmentFinisherPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DeattachmentFinisherPosition");
                    OnDeattachmentFinisherPositionChanged();
                }
            }
        }
        private global::System.String _DeattachmentFinisherPosition;
        partial void OnDeattachmentFinisherPositionChanging(global::System.String value);
        partial void OnDeattachmentFinisherPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionReturnId
        {
            get
            {
                return _ActualPositionReturnId;
            }
            set
            {
                if (_ActualPositionReturnId != value)
                {
                    OnActualPositionReturnIdChanging(value);
                    ReportPropertyChanging("ActualPositionReturnId");
                    _ActualPositionReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionReturnId");
                    OnActualPositionReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionReturnId;
        partial void OnActualPositionReturnIdChanging(global::System.Int32 value);
        partial void OnActualPositionReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPositionReturn
        {
            get
            {
                return _ActualPositionReturn;
            }
            set
            {
                if (_ActualPositionReturn != value)
                {
                    OnActualPositionReturnChanging(value);
                    ReportPropertyChanging("ActualPositionReturn");
                    _ActualPositionReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPositionReturn");
                    OnActualPositionReturnChanged();
                }
            }
        }
        private global::System.String _ActualPositionReturn;
        partial void OnActualPositionReturnChanging(global::System.String value);
        partial void OnActualPositionReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAReturnId
        {
            get
            {
                return _ETAReturnId;
            }
            set
            {
                if (_ETAReturnId != value)
                {
                    OnETAReturnIdChanging(value);
                    ReportPropertyChanging("ETAReturnId");
                    _ETAReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAReturnId");
                    OnETAReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAReturnId;
        partial void OnETAReturnIdChanging(global::System.Int32 value);
        partial void OnETAReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETAReturn
        {
            get
            {
                return _ETAReturn;
            }
            set
            {
                if (_ETAReturn != value)
                {
                    OnETAReturnChanging(value);
                    ReportPropertyChanging("ETAReturn");
                    _ETAReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETAReturn");
                    OnETAReturnChanged();
                }
            }
        }
        private global::System.String _ETAReturn;
        partial void OnETAReturnChanging(global::System.String value);
        partial void OnETAReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArrivalAtPlant
        {
            get
            {
                return _ArrivalAtPlant;
            }
            set
            {
                if (_ArrivalAtPlant != value)
                {
                    OnArrivalAtPlantChanging(value);
                    ReportPropertyChanging("ArrivalAtPlant");
                    _ArrivalAtPlant = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArrivalAtPlant");
                    OnArrivalAtPlantChanged();
                }
            }
        }
        private global::System.DateTime _ArrivalAtPlant;
        partial void OnArrivalAtPlantChanging(global::System.DateTime value);
        partial void OnArrivalAtPlantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnforseenStop
        {
            get
            {
                return _UnforseenStop;
            }
            set
            {
                if (_UnforseenStop != value)
                {
                    OnUnforseenStopChanging(value);
                    ReportPropertyChanging("UnforseenStop");
                    _UnforseenStop = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnforseenStop");
                    OnUnforseenStopChanged();
                }
            }
        }
        private global::System.Int32 _UnforseenStop;
        partial void OnUnforseenStopChanging(global::System.Int32 value);
        partial void OnUnforseenStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinisherId
        {
            get
            {
                return _FinisherId;
            }
            set
            {
                if (_FinisherId != value)
                {
                    OnFinisherIdChanging(value);
                    ReportPropertyChanging("FinisherId");
                    _FinisherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinisherId");
                    OnFinisherIdChanged();
                }
            }
        }
        private global::System.Int32 _FinisherId;
        partial void OnFinisherIdChanging(global::System.Int32 value);
        partial void OnFinisherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedId
        {
            get
            {
                return _SpeedId;
            }
            set
            {
                if (_SpeedId != value)
                {
                    OnSpeedIdChanging(value);
                    ReportPropertyChanging("SpeedId");
                    _SpeedId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpeedId");
                    OnSpeedIdChanged();
                }
            }
        }
        private global::System.Int32 _SpeedId;
        partial void OnSpeedIdChanging(global::System.Int32 value);
        partial void OnSpeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinisherSpeed
        {
            get
            {
                return _FinisherSpeed;
            }
            set
            {
                if (_FinisherSpeed != value)
                {
                    OnFinisherSpeedChanging(value);
                    ReportPropertyChanging("FinisherSpeed");
                    _FinisherSpeed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinisherSpeed");
                    OnFinisherSpeedChanged();
                }
            }
        }
        private global::System.Int32 _FinisherSpeed;
        partial void OnFinisherSpeedChanging(global::System.Int32 value);
        partial void OnFinisherSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleId
        {
            get
            {
                return _AngleId;
            }
            set
            {
                if (_AngleId != value)
                {
                    OnAngleIdChanging(value);
                    ReportPropertyChanging("AngleId");
                    _AngleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleId");
                    OnAngleIdChanged();
                }
            }
        }
        private global::System.Int32 _AngleId;
        partial void OnAngleIdChanging(global::System.Int32 value);
        partial void OnAngleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleLeft
        {
            get
            {
                return _AngleLeft;
            }
            set
            {
                if (_AngleLeft != value)
                {
                    OnAngleLeftChanging(value);
                    ReportPropertyChanging("AngleLeft");
                    _AngleLeft = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleLeft");
                    OnAngleLeftChanged();
                }
            }
        }
        private global::System.Int32 _AngleLeft;
        partial void OnAngleLeftChanging(global::System.Int32 value);
        partial void OnAngleLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleRight
        {
            get
            {
                return _AngleRight;
            }
            set
            {
                if (_AngleRight != value)
                {
                    OnAngleRightChanging(value);
                    ReportPropertyChanging("AngleRight");
                    _AngleRight = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleRight");
                    OnAngleRightChanged();
                }
            }
        }
        private global::System.Int32 _AngleRight;
        partial void OnAngleRightChanging(global::System.Int32 value);
        partial void OnAngleRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WidthId
        {
            get
            {
                return _WidthId;
            }
            set
            {
                if (_WidthId != value)
                {
                    OnWidthIdChanging(value);
                    ReportPropertyChanging("WidthId");
                    _WidthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WidthId");
                    OnWidthIdChanged();
                }
            }
        }
        private global::System.Int32 _WidthId;
        partial void OnWidthIdChanging(global::System.Int32 value);
        partial void OnWidthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                if (_Width != value)
                {
                    OnWidthChanging(value);
                    ReportPropertyChanging("Width");
                    _Width = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Width");
                    OnWidthChanged();
                }
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessLayerId
        {
            get
            {
                return _ThicknessLayerId;
            }
            set
            {
                if (_ThicknessLayerId != value)
                {
                    OnThicknessLayerIdChanging(value);
                    ReportPropertyChanging("ThicknessLayerId");
                    _ThicknessLayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessLayerId");
                    OnThicknessLayerIdChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessLayerId;
        partial void OnThicknessLayerIdChanging(global::System.Int32 value);
        partial void OnThicknessLayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessLeft
        {
            get
            {
                return _ThicknessLeft;
            }
            set
            {
                if (_ThicknessLeft != value)
                {
                    OnThicknessLeftChanging(value);
                    ReportPropertyChanging("ThicknessLeft");
                    _ThicknessLeft = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessLeft");
                    OnThicknessLeftChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessLeft;
        partial void OnThicknessLeftChanging(global::System.Int32 value);
        partial void OnThicknessLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessMiddel
        {
            get
            {
                return _ThicknessMiddel;
            }
            set
            {
                if (_ThicknessMiddel != value)
                {
                    OnThicknessMiddelChanging(value);
                    ReportPropertyChanging("ThicknessMiddel");
                    _ThicknessMiddel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessMiddel");
                    OnThicknessMiddelChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessMiddel;
        partial void OnThicknessMiddelChanging(global::System.Int32 value);
        partial void OnThicknessMiddelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessRight
        {
            get
            {
                return _ThicknessRight;
            }
            set
            {
                if (_ThicknessRight != value)
                {
                    OnThicknessRightChanging(value);
                    ReportPropertyChanging("ThicknessRight");
                    _ThicknessRight = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessRight");
                    OnThicknessRightChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessRight;
        partial void OnThicknessRightChanging(global::System.Int32 value);
        partial void OnThicknessRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TranverseSlope
        {
            get
            {
                return _TranverseSlope;
            }
            set
            {
                if (_TranverseSlope != value)
                {
                    OnTranverseSlopeChanging(value);
                    ReportPropertyChanging("TranverseSlope");
                    _TranverseSlope = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TranverseSlope");
                    OnTranverseSlopeChanged();
                }
            }
        }
        private global::System.Int32 _TranverseSlope;
        partial void OnTranverseSlopeChanging(global::System.Int32 value);
        partial void OnTranverseSlopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationAndTimeSpanId
        {
            get
            {
                return _LocationAndTimeSpanId;
            }
            set
            {
                if (_LocationAndTimeSpanId != value)
                {
                    OnLocationAndTimeSpanIdChanging(value);
                    ReportPropertyChanging("LocationAndTimeSpanId");
                    _LocationAndTimeSpanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationAndTimeSpanId");
                    OnLocationAndTimeSpanIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationAndTimeSpanId;
        partial void OnLocationAndTimeSpanIdChanging(global::System.Int32 value);
        partial void OnLocationAndTimeSpanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StopLocation
        {
            get
            {
                return _StopLocation;
            }
            set
            {
                if (_StopLocation != value)
                {
                    OnStopLocationChanging(value);
                    ReportPropertyChanging("StopLocation");
                    _StopLocation = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StopLocation");
                    OnStopLocationChanged();
                }
            }
        }
        private global::System.String _StopLocation;
        partial void OnStopLocationChanging(global::System.String value);
        partial void OnStopLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StopTime
        {
            get
            {
                return _StopTime;
            }
            set
            {
                if (_StopTime != value)
                {
                    OnStopTimeChanging(value);
                    ReportPropertyChanging("StopTime");
                    _StopTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StopTime");
                    OnStopTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _StopTime;
        partial void OnStopTimeChanging(global::System.TimeSpan value);
        partial void OnStopTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Precipation
        {
            get
            {
                return _Precipation;
            }
            set
            {
                if (_Precipation != value)
                {
                    OnPrecipationChanging(value);
                    ReportPropertyChanging("Precipation");
                    _Precipation = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Precipation");
                    OnPrecipationChanged();
                }
            }
        }
        private global::System.String _Precipation;
        partial void OnPrecipationChanging(global::System.String value);
        partial void OnPrecipationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempId
        {
            get
            {
                return _TempId;
            }
            set
            {
                if (_TempId != value)
                {
                    OnTempIdChanging(value);
                    ReportPropertyChanging("TempId");
                    _TempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TempId");
                    OnTempIdChanged();
                }
            }
        }
        private global::System.Int32 _TempId;
        partial void OnTempIdChanging(global::System.Int32 value);
        partial void OnTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                if (_Temp != value)
                {
                    OnTempChanging(value);
                    ReportPropertyChanging("Temp");
                    _Temp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Temp");
                    OnTempChanged();
                }
            }
        }
        private global::System.Int32 _Temp;
        partial void OnTempChanging(global::System.Int32 value);
        partial void OnTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindId
        {
            get
            {
                return _WindId;
            }
            set
            {
                if (_WindId != value)
                {
                    OnWindIdChanging(value);
                    ReportPropertyChanging("WindId");
                    _WindId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindId");
                    OnWindIdChanged();
                }
            }
        }
        private global::System.Int32 _WindId;
        partial void OnWindIdChanging(global::System.Int32 value);
        partial void OnWindIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindSpeed
        {
            get
            {
                return _WindSpeed;
            }
            set
            {
                if (_WindSpeed != value)
                {
                    OnWindSpeedChanging(value);
                    ReportPropertyChanging("WindSpeed");
                    _WindSpeed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindSpeed");
                    OnWindSpeedChanged();
                }
            }
        }
        private global::System.Int32 _WindSpeed;
        partial void OnWindSpeedChanging(global::System.Int32 value);
        partial void OnWindSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidityId
        {
            get
            {
                return _AirHumidityId;
            }
            set
            {
                if (_AirHumidityId != value)
                {
                    OnAirHumidityIdChanging(value);
                    ReportPropertyChanging("AirHumidityId");
                    _AirHumidityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirHumidityId");
                    OnAirHumidityIdChanged();
                }
            }
        }
        private global::System.Int32 _AirHumidityId;
        partial void OnAirHumidityIdChanging(global::System.Int32 value);
        partial void OnAirHumidityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidity
        {
            get
            {
                return _AirHumidity;
            }
            set
            {
                if (_AirHumidity != value)
                {
                    OnAirHumidityChanging(value);
                    ReportPropertyChanging("AirHumidity");
                    _AirHumidity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirHumidity");
                    OnAirHumidityChanged();
                }
            }
        }
        private global::System.Int32 _AirHumidity;
        partial void OnAirHumidityChanging(global::System.Int32 value);
        partial void OnAirHumidityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AsphaltTempAfterFinisherIrScanOrThermo
        {
            get
            {
                return _AsphaltTempAfterFinisherIrScanOrThermo;
            }
            set
            {
                if (_AsphaltTempAfterFinisherIrScanOrThermo != value)
                {
                    OnAsphaltTempAfterFinisherIrScanOrThermoChanging(value);
                    ReportPropertyChanging("AsphaltTempAfterFinisherIrScanOrThermo");
                    _AsphaltTempAfterFinisherIrScanOrThermo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AsphaltTempAfterFinisherIrScanOrThermo");
                    OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
                }
            }
        }
        private global::System.String _AsphaltTempAfterFinisherIrScanOrThermo;
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanging(global::System.String value);
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComplianceMixture
        {
            get
            {
                return _ComplianceMixture;
            }
            set
            {
                if (_ComplianceMixture != value)
                {
                    OnComplianceMixtureChanging(value);
                    ReportPropertyChanging("ComplianceMixture");
                    _ComplianceMixture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ComplianceMixture");
                    OnComplianceMixtureChanged();
                }
            }
        }
        private global::System.String _ComplianceMixture;
        partial void OnComplianceMixtureChanging(global::System.String value);
        partial void OnComplianceMixtureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SamplesCopro
        {
            get
            {
                return _SamplesCopro;
            }
            set
            {
                if (_SamplesCopro != value)
                {
                    OnSamplesCoproChanging(value);
                    ReportPropertyChanging("SamplesCopro");
                    _SamplesCopro = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SamplesCopro");
                    OnSamplesCoproChanged();
                }
            }
        }
        private global::System.String _SamplesCopro;
        partial void OnSamplesCoproChanging(global::System.String value);
        partial void OnSamplesCoproChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DensityOfField
        {
            get
            {
                return _DensityOfField;
            }
            set
            {
                if (_DensityOfField != value)
                {
                    OnDensityOfFieldChanging(value);
                    ReportPropertyChanging("DensityOfField");
                    _DensityOfField = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DensityOfField");
                    OnDensityOfFieldChanged();
                }
            }
        }
        private global::System.String _DensityOfField;
        partial void OnDensityOfFieldChanging(global::System.String value);
        partial void OnDensityOfFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cores
        {
            get
            {
                return _Cores;
            }
            set
            {
                if (_Cores != value)
                {
                    OnCoresChanging(value);
                    ReportPropertyChanging("Cores");
                    _Cores = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Cores");
                    OnCoresChanged();
                }
            }
        }
        private global::System.String _Cores;
        partial void OnCoresChanging(global::System.String value);
        partial void OnCoresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LengthwiseFlatness
        {
            get
            {
                return _LengthwiseFlatness;
            }
            set
            {
                if (_LengthwiseFlatness != value)
                {
                    OnLengthwiseFlatnessChanging(value);
                    ReportPropertyChanging("LengthwiseFlatness");
                    _LengthwiseFlatness = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LengthwiseFlatness");
                    OnLengthwiseFlatnessChanged();
                }
            }
        }
        private global::System.String _LengthwiseFlatness;
        partial void OnLengthwiseFlatnessChanging(global::System.String value);
        partial void OnLengthwiseFlatnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Skidresistance
        {
            get
            {
                return _Skidresistance;
            }
            set
            {
                if (_Skidresistance != value)
                {
                    OnSkidresistanceChanging(value);
                    ReportPropertyChanging("Skidresistance");
                    _Skidresistance = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Skidresistance");
                    OnSkidresistanceChanged();
                }
            }
        }
        private global::System.String _Skidresistance;
        partial void OnSkidresistanceChanging(global::System.String value);
        partial void OnSkidresistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Iri
        {
            get
            {
                return _Iri;
            }
            set
            {
                if (_Iri != value)
                {
                    OnIriChanging(value);
                    ReportPropertyChanging("Iri");
                    _Iri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Iri");
                    OnIriChanged();
                }
            }
        }
        private global::System.String _Iri;
        partial void OnIriChanging(global::System.String value);
        partial void OnIriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtraTestsAskedBijClient
        {
            get
            {
                return _ExtraTestsAskedBijClient;
            }
            set
            {
                if (_ExtraTestsAskedBijClient != value)
                {
                    OnExtraTestsAskedBijClientChanging(value);
                    ReportPropertyChanging("ExtraTestsAskedBijClient");
                    _ExtraTestsAskedBijClient = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ExtraTestsAskedBijClient");
                    OnExtraTestsAskedBijClientChanged();
                }
            }
        }
        private global::System.String _ExtraTestsAskedBijClient;
        partial void OnExtraTestsAskedBijClientChanging(global::System.String value);
        partial void OnExtraTestsAskedBijClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QrCodeCompactor
        {
            get
            {
                return _QrCodeCompactor;
            }
            set
            {
                if (_QrCodeCompactor != value)
                {
                    OnQrCodeCompactorChanging(value);
                    ReportPropertyChanging("QrCodeCompactor");
                    _QrCodeCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QrCodeCompactor");
                    OnQrCodeCompactorChanged();
                }
            }
        }
        private global::System.String _QrCodeCompactor;
        partial void OnQrCodeCompactorChanging(global::System.String value);
        partial void OnQrCodeCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfRollerCompactorPassages
        {
            get
            {
                return _NumberOfRollerCompactorPassages;
            }
            set
            {
                if (_NumberOfRollerCompactorPassages != value)
                {
                    OnNumberOfRollerCompactorPassagesChanging(value);
                    ReportPropertyChanging("NumberOfRollerCompactorPassages");
                    _NumberOfRollerCompactorPassages = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NumberOfRollerCompactorPassages");
                    OnNumberOfRollerCompactorPassagesChanged();
                }
            }
        }
        private global::System.Int32 _NumberOfRollerCompactorPassages;
        partial void OnNumberOfRollerCompactorPassagesChanging(global::System.Int32 value);
        partial void OnNumberOfRollerCompactorPassagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationOfVibration
        {
            get
            {
                return _LocationOfVibration;
            }
            set
            {
                if (_LocationOfVibration != value)
                {
                    OnLocationOfVibrationChanging(value);
                    ReportPropertyChanging("LocationOfVibration");
                    _LocationOfVibration = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LocationOfVibration");
                    OnLocationOfVibrationChanged();
                }
            }
        }
        private global::System.String _LocationOfVibration;
        partial void OnLocationOfVibrationChanging(global::System.String value);
        partial void OnLocationOfVibrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorCodeId
        {
            get
            {
                return _ColorCodeId;
            }
            set
            {
                if (_ColorCodeId != value)
                {
                    OnColorCodeIdChanging(value);
                    ReportPropertyChanging("ColorCodeId");
                    _ColorCodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColorCodeId");
                    OnColorCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _ColorCodeId;
        partial void OnColorCodeIdChanging(global::System.Int32 value);
        partial void OnColorCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSFinisher
        {
            get
            {
                return _GPSFinisher;
            }
            set
            {
                if (_GPSFinisher != value)
                {
                    OnGPSFinisherChanging(value);
                    ReportPropertyChanging("GPSFinisher");
                    _GPSFinisher = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GPSFinisher");
                    OnGPSFinisherChanged();
                }
            }
        }
        private global::System.String _GPSFinisher;
        partial void OnGPSFinisherChanging(global::System.String value);
        partial void OnGPSFinisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSCompactor
        {
            get
            {
                return _GPSCompactor;
            }
            set
            {
                if (_GPSCompactor != value)
                {
                    OnGPSCompactorChanging(value);
                    ReportPropertyChanging("GPSCompactor");
                    _GPSCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GPSCompactor");
                    OnGPSCompactorChanged();
                }
            }
        }
        private global::System.String _GPSCompactor;
        partial void OnGPSCompactorChanging(global::System.String value);
        partial void OnGPSCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedOfRollerCompactor
        {
            get
            {
                return _SpeedOfRollerCompactor;
            }
            set
            {
                if (_SpeedOfRollerCompactor != value)
                {
                    OnSpeedOfRollerCompactorChanging(value);
                    ReportPropertyChanging("SpeedOfRollerCompactor");
                    _SpeedOfRollerCompactor = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpeedOfRollerCompactor");
                    OnSpeedOfRollerCompactorChanged();
                }
            }
        }
        private global::System.Int32 _SpeedOfRollerCompactor;
        partial void OnSpeedOfRollerCompactorChanging(global::System.Int32 value);
        partial void OnSpeedOfRollerCompactorChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Copro")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Copro : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Copro object.
        /// </summary>
        /// <param name="technicalDataSheet">Initial value of the TechnicalDataSheet property.</param>
        /// <param name="mixtureName">Initial value of the MixtureName property.</param>
        /// <param name="typeOfAggregates">Initial value of the TypeOfAggregates property.</param>
        /// <param name="mixtureChange">Initial value of the MixtureChange property.</param>
        /// <param name="centralId">Initial value of the CentralId property.</param>
        /// <param name="aggregationId">Initial value of the AggregationId property.</param>
        /// <param name="aggragationMaxTemp">Initial value of the AggragationMaxTemp property.</param>
        /// <param name="aggragationMinTemp">Initial value of the AggragationMinTemp property.</param>
        /// <param name="aggragationTimeStamp">Initial value of the AggragationTimeStamp property.</param>
        /// <param name="bitumenId">Initial value of the BitumenId property.</param>
        /// <param name="bitumenMaxTemp">Initial value of the BitumenMaxTemp property.</param>
        /// <param name="bitumenMinTemp">Initial value of the BitumenMinTemp property.</param>
        /// <param name="bitumenTimeStamp">Initial value of the BitumenTimeStamp property.</param>
        /// <param name="listRecupFillerId">Initial value of the ListRecupFillerId property.</param>
        /// <param name="fillerRecup">Initial value of the FillerRecup property.</param>
        /// <param name="mixingTemp">Initial value of the MixingTemp property.</param>
        /// <param name="mixingTime">Initial value of the MixingTime property.</param>
        /// <param name="realCompositionId">Initial value of the RealCompositionId property.</param>
        /// <param name="massOfAggregationBunker1">Initial value of the MassOfAggregationBunker1 property.</param>
        /// <param name="massOfAggregationBunker2">Initial value of the MassOfAggregationBunker2 property.</param>
        /// <param name="massOfAggregationBunker3">Initial value of the MassOfAggregationBunker3 property.</param>
        /// <param name="massOfAggregationBunker4">Initial value of the MassOfAggregationBunker4 property.</param>
        /// <param name="massOfAggregationBunker5">Initial value of the MassOfAggregationBunker5 property.</param>
        /// <param name="massOfAggregationBunker6">Initial value of the MassOfAggregationBunker6 property.</param>
        /// <param name="filler">Initial value of the Filler property.</param>
        /// <param name="bitumen">Initial value of the Bitumen property.</param>
        /// <param name="additivesKg">Initial value of the AdditivesKg property.</param>
        /// <param name="tempSilo">Initial value of the TempSilo property.</param>
        /// <param name="analysisComposition">Initial value of the AnalysisComposition property.</param>
        /// <param name="truckLicensPlate">Initial value of the TruckLicensPlate property.</param>
        /// <param name="departureTime">Initial value of the DepartureTime property.</param>
        /// <param name="massTruck">Initial value of the MassTruck property.</param>
        /// <param name="actualTempId">Initial value of the ActualTempId property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        /// <param name="finisherId">Initial value of the FinisherId property.</param>
        /// <param name="qrCodeCompactor">Initial value of the QrCodeCompactor property.</param>
        /// <param name="samplesCopro">Initial value of the SamplesCopro property.</param>
        /// <param name="extraTestsAskedBijClient">Initial value of the ExtraTestsAskedBijClient property.</param>
        public static Copro CreateCopro(global::System.String technicalDataSheet, global::System.String mixtureName, global::System.String typeOfAggregates, global::System.String mixtureChange, global::System.Int32 centralId, global::System.Int32 aggregationId, global::System.Int32 aggragationMaxTemp, global::System.Int32 aggragationMinTemp, global::System.DateTime aggragationTimeStamp, global::System.Int32 bitumenId, global::System.Int32 bitumenMaxTemp, global::System.Int32 bitumenMinTemp, global::System.DateTime bitumenTimeStamp, global::System.Int32 listRecupFillerId, global::System.Int32 fillerRecup, global::System.Int32 mixingTemp, global::System.TimeSpan mixingTime, global::System.Int32 realCompositionId, global::System.Int32 massOfAggregationBunker1, global::System.Int32 massOfAggregationBunker2, global::System.Int32 massOfAggregationBunker3, global::System.Int32 massOfAggregationBunker4, global::System.Int32 massOfAggregationBunker5, global::System.Int32 massOfAggregationBunker6, global::System.Int32 filler, global::System.Int32 bitumen, global::System.Int32 additivesKg, global::System.Int32 tempSilo, global::System.String analysisComposition, global::System.String truckLicensPlate, global::System.DateTime departureTime, global::System.Int32 massTruck, global::System.Int32 actualTempId, global::System.Int32 temp, global::System.Int32 finisherId, global::System.String qrCodeCompactor, global::System.String samplesCopro, global::System.String extraTestsAskedBijClient)
        {
            Copro copro = new Copro();
            copro.TechnicalDataSheet = technicalDataSheet;
            copro.MixtureName = mixtureName;
            copro.TypeOfAggregates = typeOfAggregates;
            copro.MixtureChange = mixtureChange;
            copro.CentralId = centralId;
            copro.AggregationId = aggregationId;
            copro.AggragationMaxTemp = aggragationMaxTemp;
            copro.AggragationMinTemp = aggragationMinTemp;
            copro.AggragationTimeStamp = aggragationTimeStamp;
            copro.BitumenId = bitumenId;
            copro.BitumenMaxTemp = bitumenMaxTemp;
            copro.BitumenMinTemp = bitumenMinTemp;
            copro.BitumenTimeStamp = bitumenTimeStamp;
            copro.ListRecupFillerId = listRecupFillerId;
            copro.FillerRecup = fillerRecup;
            copro.MixingTemp = mixingTemp;
            copro.MixingTime = mixingTime;
            copro.RealCompositionId = realCompositionId;
            copro.MassOfAggregationBunker1 = massOfAggregationBunker1;
            copro.MassOfAggregationBunker2 = massOfAggregationBunker2;
            copro.MassOfAggregationBunker3 = massOfAggregationBunker3;
            copro.MassOfAggregationBunker4 = massOfAggregationBunker4;
            copro.MassOfAggregationBunker5 = massOfAggregationBunker5;
            copro.MassOfAggregationBunker6 = massOfAggregationBunker6;
            copro.Filler = filler;
            copro.Bitumen = bitumen;
            copro.AdditivesKg = additivesKg;
            copro.TempSilo = tempSilo;
            copro.AnalysisComposition = analysisComposition;
            copro.TruckLicensPlate = truckLicensPlate;
            copro.DepartureTime = departureTime;
            copro.MassTruck = massTruck;
            copro.ActualTempId = actualTempId;
            copro.Temp = temp;
            copro.FinisherId = finisherId;
            copro.QrCodeCompactor = qrCodeCompactor;
            copro.SamplesCopro = samplesCopro;
            copro.ExtraTestsAskedBijClient = extraTestsAskedBijClient;
            return copro;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TechnicalDataSheet
        {
            get
            {
                return _TechnicalDataSheet;
            }
            set
            {
                if (_TechnicalDataSheet != value)
                {
                    OnTechnicalDataSheetChanging(value);
                    ReportPropertyChanging("TechnicalDataSheet");
                    _TechnicalDataSheet = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TechnicalDataSheet");
                    OnTechnicalDataSheetChanged();
                }
            }
        }
        private global::System.String _TechnicalDataSheet;
        partial void OnTechnicalDataSheetChanging(global::System.String value);
        partial void OnTechnicalDataSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureName
        {
            get
            {
                return _MixtureName;
            }
            set
            {
                if (_MixtureName != value)
                {
                    OnMixtureNameChanging(value);
                    ReportPropertyChanging("MixtureName");
                    _MixtureName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureName");
                    OnMixtureNameChanged();
                }
            }
        }
        private global::System.String _MixtureName;
        partial void OnMixtureNameChanging(global::System.String value);
        partial void OnMixtureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeOfAggregates
        {
            get
            {
                return _TypeOfAggregates;
            }
            set
            {
                if (_TypeOfAggregates != value)
                {
                    OnTypeOfAggregatesChanging(value);
                    ReportPropertyChanging("TypeOfAggregates");
                    _TypeOfAggregates = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeOfAggregates");
                    OnTypeOfAggregatesChanged();
                }
            }
        }
        private global::System.String _TypeOfAggregates;
        partial void OnTypeOfAggregatesChanging(global::System.String value);
        partial void OnTypeOfAggregatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureChange
        {
            get
            {
                return _MixtureChange;
            }
            set
            {
                if (_MixtureChange != value)
                {
                    OnMixtureChangeChanging(value);
                    ReportPropertyChanging("MixtureChange");
                    _MixtureChange = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureChange");
                    OnMixtureChangeChanged();
                }
            }
        }
        private global::System.String _MixtureChange;
        partial void OnMixtureChangeChanging(global::System.String value);
        partial void OnMixtureChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CentralId
        {
            get
            {
                return _CentralId;
            }
            set
            {
                if (_CentralId != value)
                {
                    OnCentralIdChanging(value);
                    ReportPropertyChanging("CentralId");
                    _CentralId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CentralId");
                    OnCentralIdChanged();
                }
            }
        }
        private global::System.Int32 _CentralId;
        partial void OnCentralIdChanging(global::System.Int32 value);
        partial void OnCentralIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggregationId
        {
            get
            {
                return _AggregationId;
            }
            set
            {
                if (_AggregationId != value)
                {
                    OnAggregationIdChanging(value);
                    ReportPropertyChanging("AggregationId");
                    _AggregationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggregationId");
                    OnAggregationIdChanged();
                }
            }
        }
        private global::System.Int32 _AggregationId;
        partial void OnAggregationIdChanging(global::System.Int32 value);
        partial void OnAggregationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMaxTemp
        {
            get
            {
                return _AggragationMaxTemp;
            }
            set
            {
                if (_AggragationMaxTemp != value)
                {
                    OnAggragationMaxTempChanging(value);
                    ReportPropertyChanging("AggragationMaxTemp");
                    _AggragationMaxTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationMaxTemp");
                    OnAggragationMaxTempChanged();
                }
            }
        }
        private global::System.Int32 _AggragationMaxTemp;
        partial void OnAggragationMaxTempChanging(global::System.Int32 value);
        partial void OnAggragationMaxTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMinTemp
        {
            get
            {
                return _AggragationMinTemp;
            }
            set
            {
                if (_AggragationMinTemp != value)
                {
                    OnAggragationMinTempChanging(value);
                    ReportPropertyChanging("AggragationMinTemp");
                    _AggragationMinTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationMinTemp");
                    OnAggragationMinTempChanged();
                }
            }
        }
        private global::System.Int32 _AggragationMinTemp;
        partial void OnAggragationMinTempChanging(global::System.Int32 value);
        partial void OnAggragationMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AggragationTimeStamp
        {
            get
            {
                return _AggragationTimeStamp;
            }
            set
            {
                if (_AggragationTimeStamp != value)
                {
                    OnAggragationTimeStampChanging(value);
                    ReportPropertyChanging("AggragationTimeStamp");
                    _AggragationTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationTimeStamp");
                    OnAggragationTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _AggragationTimeStamp;
        partial void OnAggragationTimeStampChanging(global::System.DateTime value);
        partial void OnAggragationTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenId
        {
            get
            {
                return _BitumenId;
            }
            set
            {
                if (_BitumenId != value)
                {
                    OnBitumenIdChanging(value);
                    ReportPropertyChanging("BitumenId");
                    _BitumenId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenId");
                    OnBitumenIdChanged();
                }
            }
        }
        private global::System.Int32 _BitumenId;
        partial void OnBitumenIdChanging(global::System.Int32 value);
        partial void OnBitumenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMaxTemp
        {
            get
            {
                return _BitumenMaxTemp;
            }
            set
            {
                if (_BitumenMaxTemp != value)
                {
                    OnBitumenMaxTempChanging(value);
                    ReportPropertyChanging("BitumenMaxTemp");
                    _BitumenMaxTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenMaxTemp");
                    OnBitumenMaxTempChanged();
                }
            }
        }
        private global::System.Int32 _BitumenMaxTemp;
        partial void OnBitumenMaxTempChanging(global::System.Int32 value);
        partial void OnBitumenMaxTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMinTemp
        {
            get
            {
                return _BitumenMinTemp;
            }
            set
            {
                if (_BitumenMinTemp != value)
                {
                    OnBitumenMinTempChanging(value);
                    ReportPropertyChanging("BitumenMinTemp");
                    _BitumenMinTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenMinTemp");
                    OnBitumenMinTempChanged();
                }
            }
        }
        private global::System.Int32 _BitumenMinTemp;
        partial void OnBitumenMinTempChanging(global::System.Int32 value);
        partial void OnBitumenMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BitumenTimeStamp
        {
            get
            {
                return _BitumenTimeStamp;
            }
            set
            {
                if (_BitumenTimeStamp != value)
                {
                    OnBitumenTimeStampChanging(value);
                    ReportPropertyChanging("BitumenTimeStamp");
                    _BitumenTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenTimeStamp");
                    OnBitumenTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _BitumenTimeStamp;
        partial void OnBitumenTimeStampChanging(global::System.DateTime value);
        partial void OnBitumenTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListRecupFillerId
        {
            get
            {
                return _ListRecupFillerId;
            }
            set
            {
                if (_ListRecupFillerId != value)
                {
                    OnListRecupFillerIdChanging(value);
                    ReportPropertyChanging("ListRecupFillerId");
                    _ListRecupFillerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListRecupFillerId");
                    OnListRecupFillerIdChanged();
                }
            }
        }
        private global::System.Int32 _ListRecupFillerId;
        partial void OnListRecupFillerIdChanging(global::System.Int32 value);
        partial void OnListRecupFillerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FillerRecup
        {
            get
            {
                return _FillerRecup;
            }
            set
            {
                if (_FillerRecup != value)
                {
                    OnFillerRecupChanging(value);
                    ReportPropertyChanging("FillerRecup");
                    _FillerRecup = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FillerRecup");
                    OnFillerRecupChanged();
                }
            }
        }
        private global::System.Int32 _FillerRecup;
        partial void OnFillerRecupChanging(global::System.Int32 value);
        partial void OnFillerRecupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MixingTemp
        {
            get
            {
                return _MixingTemp;
            }
            set
            {
                if (_MixingTemp != value)
                {
                    OnMixingTempChanging(value);
                    ReportPropertyChanging("MixingTemp");
                    _MixingTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MixingTemp");
                    OnMixingTempChanged();
                }
            }
        }
        private global::System.Int32 _MixingTemp;
        partial void OnMixingTempChanging(global::System.Int32 value);
        partial void OnMixingTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan MixingTime
        {
            get
            {
                return _MixingTime;
            }
            set
            {
                if (_MixingTime != value)
                {
                    OnMixingTimeChanging(value);
                    ReportPropertyChanging("MixingTime");
                    _MixingTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MixingTime");
                    OnMixingTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _MixingTime;
        partial void OnMixingTimeChanging(global::System.TimeSpan value);
        partial void OnMixingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealCompositionId
        {
            get
            {
                return _RealCompositionId;
            }
            set
            {
                if (_RealCompositionId != value)
                {
                    OnRealCompositionIdChanging(value);
                    ReportPropertyChanging("RealCompositionId");
                    _RealCompositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealCompositionId");
                    OnRealCompositionIdChanged();
                }
            }
        }
        private global::System.Int32 _RealCompositionId;
        partial void OnRealCompositionIdChanging(global::System.Int32 value);
        partial void OnRealCompositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker1
        {
            get
            {
                return _MassOfAggregationBunker1;
            }
            set
            {
                if (_MassOfAggregationBunker1 != value)
                {
                    OnMassOfAggregationBunker1Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker1");
                    _MassOfAggregationBunker1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker1");
                    OnMassOfAggregationBunker1Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker1;
        partial void OnMassOfAggregationBunker1Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker2
        {
            get
            {
                return _MassOfAggregationBunker2;
            }
            set
            {
                if (_MassOfAggregationBunker2 != value)
                {
                    OnMassOfAggregationBunker2Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker2");
                    _MassOfAggregationBunker2 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker2");
                    OnMassOfAggregationBunker2Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker2;
        partial void OnMassOfAggregationBunker2Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker3
        {
            get
            {
                return _MassOfAggregationBunker3;
            }
            set
            {
                if (_MassOfAggregationBunker3 != value)
                {
                    OnMassOfAggregationBunker3Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker3");
                    _MassOfAggregationBunker3 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker3");
                    OnMassOfAggregationBunker3Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker3;
        partial void OnMassOfAggregationBunker3Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker4
        {
            get
            {
                return _MassOfAggregationBunker4;
            }
            set
            {
                if (_MassOfAggregationBunker4 != value)
                {
                    OnMassOfAggregationBunker4Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker4");
                    _MassOfAggregationBunker4 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker4");
                    OnMassOfAggregationBunker4Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker4;
        partial void OnMassOfAggregationBunker4Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker5
        {
            get
            {
                return _MassOfAggregationBunker5;
            }
            set
            {
                if (_MassOfAggregationBunker5 != value)
                {
                    OnMassOfAggregationBunker5Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker5");
                    _MassOfAggregationBunker5 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker5");
                    OnMassOfAggregationBunker5Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker5;
        partial void OnMassOfAggregationBunker5Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker6
        {
            get
            {
                return _MassOfAggregationBunker6;
            }
            set
            {
                if (_MassOfAggregationBunker6 != value)
                {
                    OnMassOfAggregationBunker6Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker6");
                    _MassOfAggregationBunker6 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker6");
                    OnMassOfAggregationBunker6Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker6;
        partial void OnMassOfAggregationBunker6Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Filler
        {
            get
            {
                return _Filler;
            }
            set
            {
                if (_Filler != value)
                {
                    OnFillerChanging(value);
                    ReportPropertyChanging("Filler");
                    _Filler = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Filler");
                    OnFillerChanged();
                }
            }
        }
        private global::System.Int32 _Filler;
        partial void OnFillerChanging(global::System.Int32 value);
        partial void OnFillerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bitumen
        {
            get
            {
                return _Bitumen;
            }
            set
            {
                if (_Bitumen != value)
                {
                    OnBitumenChanging(value);
                    ReportPropertyChanging("Bitumen");
                    _Bitumen = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Bitumen");
                    OnBitumenChanged();
                }
            }
        }
        private global::System.Int32 _Bitumen;
        partial void OnBitumenChanging(global::System.Int32 value);
        partial void OnBitumenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdditivesKg
        {
            get
            {
                return _AdditivesKg;
            }
            set
            {
                if (_AdditivesKg != value)
                {
                    OnAdditivesKgChanging(value);
                    ReportPropertyChanging("AdditivesKg");
                    _AdditivesKg = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdditivesKg");
                    OnAdditivesKgChanged();
                }
            }
        }
        private global::System.Int32 _AdditivesKg;
        partial void OnAdditivesKgChanging(global::System.Int32 value);
        partial void OnAdditivesKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempSilo
        {
            get
            {
                return _TempSilo;
            }
            set
            {
                if (_TempSilo != value)
                {
                    OnTempSiloChanging(value);
                    ReportPropertyChanging("TempSilo");
                    _TempSilo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TempSilo");
                    OnTempSiloChanged();
                }
            }
        }
        private global::System.Int32 _TempSilo;
        partial void OnTempSiloChanging(global::System.Int32 value);
        partial void OnTempSiloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnalysisComposition
        {
            get
            {
                return _AnalysisComposition;
            }
            set
            {
                if (_AnalysisComposition != value)
                {
                    OnAnalysisCompositionChanging(value);
                    ReportPropertyChanging("AnalysisComposition");
                    _AnalysisComposition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AnalysisComposition");
                    OnAnalysisCompositionChanged();
                }
            }
        }
        private global::System.String _AnalysisComposition;
        partial void OnAnalysisCompositionChanging(global::System.String value);
        partial void OnAnalysisCompositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TruckLicensPlate
        {
            get
            {
                return _TruckLicensPlate;
            }
            set
            {
                if (_TruckLicensPlate != value)
                {
                    OnTruckLicensPlateChanging(value);
                    ReportPropertyChanging("TruckLicensPlate");
                    _TruckLicensPlate = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TruckLicensPlate");
                    OnTruckLicensPlateChanged();
                }
            }
        }
        private global::System.String _TruckLicensPlate;
        partial void OnTruckLicensPlateChanging(global::System.String value);
        partial void OnTruckLicensPlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureTime
        {
            get
            {
                return _DepartureTime;
            }
            set
            {
                if (_DepartureTime != value)
                {
                    OnDepartureTimeChanging(value);
                    ReportPropertyChanging("DepartureTime");
                    _DepartureTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartureTime");
                    OnDepartureTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartureTime;
        partial void OnDepartureTimeChanging(global::System.DateTime value);
        partial void OnDepartureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassTruck
        {
            get
            {
                return _MassTruck;
            }
            set
            {
                if (_MassTruck != value)
                {
                    OnMassTruckChanging(value);
                    ReportPropertyChanging("MassTruck");
                    _MassTruck = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassTruck");
                    OnMassTruckChanged();
                }
            }
        }
        private global::System.Int32 _MassTruck;
        partial void OnMassTruckChanging(global::System.Int32 value);
        partial void OnMassTruckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualTempId
        {
            get
            {
                return _ActualTempId;
            }
            set
            {
                if (_ActualTempId != value)
                {
                    OnActualTempIdChanging(value);
                    ReportPropertyChanging("ActualTempId");
                    _ActualTempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualTempId");
                    OnActualTempIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualTempId;
        partial void OnActualTempIdChanging(global::System.Int32 value);
        partial void OnActualTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                if (_Temp != value)
                {
                    OnTempChanging(value);
                    ReportPropertyChanging("Temp");
                    _Temp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Temp");
                    OnTempChanged();
                }
            }
        }
        private global::System.Int32 _Temp;
        partial void OnTempChanging(global::System.Int32 value);
        partial void OnTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinisherId
        {
            get
            {
                return _FinisherId;
            }
            set
            {
                if (_FinisherId != value)
                {
                    OnFinisherIdChanging(value);
                    ReportPropertyChanging("FinisherId");
                    _FinisherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinisherId");
                    OnFinisherIdChanged();
                }
            }
        }
        private global::System.Int32 _FinisherId;
        partial void OnFinisherIdChanging(global::System.Int32 value);
        partial void OnFinisherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QrCodeCompactor
        {
            get
            {
                return _QrCodeCompactor;
            }
            set
            {
                if (_QrCodeCompactor != value)
                {
                    OnQrCodeCompactorChanging(value);
                    ReportPropertyChanging("QrCodeCompactor");
                    _QrCodeCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QrCodeCompactor");
                    OnQrCodeCompactorChanged();
                }
            }
        }
        private global::System.String _QrCodeCompactor;
        partial void OnQrCodeCompactorChanging(global::System.String value);
        partial void OnQrCodeCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SamplesCopro
        {
            get
            {
                return _SamplesCopro;
            }
            set
            {
                if (_SamplesCopro != value)
                {
                    OnSamplesCoproChanging(value);
                    ReportPropertyChanging("SamplesCopro");
                    _SamplesCopro = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SamplesCopro");
                    OnSamplesCoproChanged();
                }
            }
        }
        private global::System.String _SamplesCopro;
        partial void OnSamplesCoproChanging(global::System.String value);
        partial void OnSamplesCoproChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtraTestsAskedBijClient
        {
            get
            {
                return _ExtraTestsAskedBijClient;
            }
            set
            {
                if (_ExtraTestsAskedBijClient != value)
                {
                    OnExtraTestsAskedBijClientChanging(value);
                    ReportPropertyChanging("ExtraTestsAskedBijClient");
                    _ExtraTestsAskedBijClient = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ExtraTestsAskedBijClient");
                    OnExtraTestsAskedBijClientChanged();
                }
            }
        }
        private global::System.String _ExtraTestsAskedBijClient;
        partial void OnExtraTestsAskedBijClientChanging(global::System.String value);
        partial void OnExtraTestsAskedBijClientChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="ETA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ETA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ETA object.
        /// </summary>
        /// <param name="eTAId">Initial value of the ETAId property.</param>
        /// <param name="eTA1">Initial value of the ETA1 property.</param>
        public static ETA CreateETA(global::System.Int32 eTAId, global::System.String eTA1)
        {
            ETA eTA = new ETA();
            eTA.ETAId = eTAId;
            eTA.ETA1 = eTA1;
            return eTA;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAId
        {
            get
            {
                return _ETAId;
            }
            set
            {
                if (_ETAId != value)
                {
                    OnETAIdChanging(value);
                    ReportPropertyChanging("ETAId");
                    _ETAId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAId");
                    OnETAIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAId;
        partial void OnETAIdChanging(global::System.Int32 value);
        partial void OnETAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETA1
        {
            get
            {
                return _ETA1;
            }
            set
            {
                OnETA1Changing(value);
                ReportPropertyChanging("ETA1");
                _ETA1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ETA1");
                OnETA1Changed();
            }
        }
        private global::System.String _ETA1;
        partial void OnETA1Changing(global::System.String value);
        partial void OnETA1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_4", "Transport")]
        public EntityCollection<Transport> Transports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_4", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_4", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="ETAReturn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ETAReturn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ETAReturn object.
        /// </summary>
        /// <param name="eTAReturnId">Initial value of the ETAReturnId property.</param>
        /// <param name="eTA">Initial value of the ETA property.</param>
        public static ETAReturn CreateETAReturn(global::System.Int32 eTAReturnId, global::System.String eTA)
        {
            ETAReturn eTAReturn = new ETAReturn();
            eTAReturn.ETAReturnId = eTAReturnId;
            eTAReturn.ETA = eTA;
            return eTAReturn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAReturnId
        {
            get
            {
                return _ETAReturnId;
            }
            set
            {
                if (_ETAReturnId != value)
                {
                    OnETAReturnIdChanging(value);
                    ReportPropertyChanging("ETAReturnId");
                    _ETAReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAReturnId");
                    OnETAReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAReturnId;
        partial void OnETAReturnIdChanging(global::System.Int32 value);
        partial void OnETAReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETA
        {
            get
            {
                return _ETA;
            }
            set
            {
                OnETAChanging(value);
                ReportPropertyChanging("ETA");
                _ETA = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ETA");
                OnETAChanged();
            }
        }
        private global::System.String _ETA;
        partial void OnETAChanging(global::System.String value);
        partial void OnETAChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_6", "Transport")]
        public EntityCollection<Transport> Transports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_6", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_6", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Finisher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Finisher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Finisher object.
        /// </summary>
        /// <param name="finicherId">Initial value of the FinicherId property.</param>
        /// <param name="speedId">Initial value of the SpeedId property.</param>
        /// <param name="angleId">Initial value of the AngleId property.</param>
        /// <param name="widthId">Initial value of the WidthId property.</param>
        /// <param name="thicknessLayerId">Initial value of the ThicknessLayerId property.</param>
        /// <param name="tranverseSlope">Initial value of the TranverseSlope property.</param>
        /// <param name="locationAndTimeSpanId">Initial value of the LocationAndTimeSpanId property.</param>
        /// <param name="precipation">Initial value of the Precipation property.</param>
        /// <param name="tempId">Initial value of the TempId property.</param>
        /// <param name="windId">Initial value of the WindId property.</param>
        /// <param name="airHumidityId">Initial value of the AirHumidityId property.</param>
        /// <param name="asphaltTempAfterFinisherIrScanOrThermo">Initial value of the AsphaltTempAfterFinisherIrScanOrThermo property.</param>
        /// <param name="asphaltTempId">Initial value of the AsphaltTempId property.</param>
        public static Finisher CreateFinisher(global::System.Int32 finicherId, global::System.Int32 speedId, global::System.Int32 angleId, global::System.Int32 widthId, global::System.Int32 thicknessLayerId, global::System.Int32 tranverseSlope, global::System.Int32 locationAndTimeSpanId, global::System.String precipation, global::System.Int32 tempId, global::System.Int32 windId, global::System.Int32 airHumidityId, global::System.String asphaltTempAfterFinisherIrScanOrThermo, global::System.Int32 asphaltTempId)
        {
            Finisher finisher = new Finisher();
            finisher.FinicherId = finicherId;
            finisher.SpeedId = speedId;
            finisher.AngleId = angleId;
            finisher.WidthId = widthId;
            finisher.ThicknessLayerId = thicknessLayerId;
            finisher.TranverseSlope = tranverseSlope;
            finisher.LocationAndTimeSpanId = locationAndTimeSpanId;
            finisher.Precipation = precipation;
            finisher.TempId = tempId;
            finisher.WindId = windId;
            finisher.AirHumidityId = airHumidityId;
            finisher.AsphaltTempAfterFinisherIrScanOrThermo = asphaltTempAfterFinisherIrScanOrThermo;
            finisher.AsphaltTempId = asphaltTempId;
            return finisher;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinicherId
        {
            get
            {
                return _FinicherId;
            }
            set
            {
                if (_FinicherId != value)
                {
                    OnFinicherIdChanging(value);
                    ReportPropertyChanging("FinicherId");
                    _FinicherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinicherId");
                    OnFinicherIdChanged();
                }
            }
        }
        private global::System.Int32 _FinicherId;
        partial void OnFinicherIdChanging(global::System.Int32 value);
        partial void OnFinicherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedId
        {
            get
            {
                return _SpeedId;
            }
            set
            {
                OnSpeedIdChanging(value);
                ReportPropertyChanging("SpeedId");
                _SpeedId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpeedId");
                OnSpeedIdChanged();
            }
        }
        private global::System.Int32 _SpeedId;
        partial void OnSpeedIdChanging(global::System.Int32 value);
        partial void OnSpeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleId
        {
            get
            {
                return _AngleId;
            }
            set
            {
                OnAngleIdChanging(value);
                ReportPropertyChanging("AngleId");
                _AngleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AngleId");
                OnAngleIdChanged();
            }
        }
        private global::System.Int32 _AngleId;
        partial void OnAngleIdChanging(global::System.Int32 value);
        partial void OnAngleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WidthId
        {
            get
            {
                return _WidthId;
            }
            set
            {
                OnWidthIdChanging(value);
                ReportPropertyChanging("WidthId");
                _WidthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WidthId");
                OnWidthIdChanged();
            }
        }
        private global::System.Int32 _WidthId;
        partial void OnWidthIdChanging(global::System.Int32 value);
        partial void OnWidthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessLayerId
        {
            get
            {
                return _ThicknessLayerId;
            }
            set
            {
                OnThicknessLayerIdChanging(value);
                ReportPropertyChanging("ThicknessLayerId");
                _ThicknessLayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ThicknessLayerId");
                OnThicknessLayerIdChanged();
            }
        }
        private global::System.Int32 _ThicknessLayerId;
        partial void OnThicknessLayerIdChanging(global::System.Int32 value);
        partial void OnThicknessLayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TranverseSlope
        {
            get
            {
                return _TranverseSlope;
            }
            set
            {
                OnTranverseSlopeChanging(value);
                ReportPropertyChanging("TranverseSlope");
                _TranverseSlope = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TranverseSlope");
                OnTranverseSlopeChanged();
            }
        }
        private global::System.Int32 _TranverseSlope;
        partial void OnTranverseSlopeChanging(global::System.Int32 value);
        partial void OnTranverseSlopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationAndTimeSpanId
        {
            get
            {
                return _LocationAndTimeSpanId;
            }
            set
            {
                OnLocationAndTimeSpanIdChanging(value);
                ReportPropertyChanging("LocationAndTimeSpanId");
                _LocationAndTimeSpanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LocationAndTimeSpanId");
                OnLocationAndTimeSpanIdChanged();
            }
        }
        private global::System.Int32 _LocationAndTimeSpanId;
        partial void OnLocationAndTimeSpanIdChanging(global::System.Int32 value);
        partial void OnLocationAndTimeSpanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Precipation
        {
            get
            {
                return _Precipation;
            }
            set
            {
                OnPrecipationChanging(value);
                ReportPropertyChanging("Precipation");
                _Precipation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Precipation");
                OnPrecipationChanged();
            }
        }
        private global::System.String _Precipation;
        partial void OnPrecipationChanging(global::System.String value);
        partial void OnPrecipationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempId
        {
            get
            {
                return _TempId;
            }
            set
            {
                OnTempIdChanging(value);
                ReportPropertyChanging("TempId");
                _TempId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TempId");
                OnTempIdChanged();
            }
        }
        private global::System.Int32 _TempId;
        partial void OnTempIdChanging(global::System.Int32 value);
        partial void OnTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindId
        {
            get
            {
                return _WindId;
            }
            set
            {
                OnWindIdChanging(value);
                ReportPropertyChanging("WindId");
                _WindId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WindId");
                OnWindIdChanged();
            }
        }
        private global::System.Int32 _WindId;
        partial void OnWindIdChanging(global::System.Int32 value);
        partial void OnWindIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidityId
        {
            get
            {
                return _AirHumidityId;
            }
            set
            {
                OnAirHumidityIdChanging(value);
                ReportPropertyChanging("AirHumidityId");
                _AirHumidityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AirHumidityId");
                OnAirHumidityIdChanged();
            }
        }
        private global::System.Int32 _AirHumidityId;
        partial void OnAirHumidityIdChanging(global::System.Int32 value);
        partial void OnAirHumidityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AsphaltTempAfterFinisherIrScanOrThermo
        {
            get
            {
                return _AsphaltTempAfterFinisherIrScanOrThermo;
            }
            set
            {
                OnAsphaltTempAfterFinisherIrScanOrThermoChanging(value);
                ReportPropertyChanging("AsphaltTempAfterFinisherIrScanOrThermo");
                _AsphaltTempAfterFinisherIrScanOrThermo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AsphaltTempAfterFinisherIrScanOrThermo");
                OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
            }
        }
        private global::System.String _AsphaltTempAfterFinisherIrScanOrThermo;
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanging(global::System.String value);
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AsphaltTempId
        {
            get
            {
                return _AsphaltTempId;
            }
            set
            {
                OnAsphaltTempIdChanging(value);
                ReportPropertyChanging("AsphaltTempId");
                _AsphaltTempId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AsphaltTempId");
                OnAsphaltTempIdChanged();
            }
        }
        private global::System.Int32 _AsphaltTempId;
        partial void OnAsphaltTempIdChanging(global::System.Int32 value);
        partial void OnAsphaltTempIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_7", "AirHumidity")]
        public AirHumidity AirHumidity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AirHumidity>("RoadItEntitiesModel.Finisher_ibfk_7", "AirHumidity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AirHumidity>("RoadItEntitiesModel.Finisher_ibfk_7", "AirHumidity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AirHumidity> AirHumidityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AirHumidity>("RoadItEntitiesModel.Finisher_ibfk_7", "AirHumidity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AirHumidity>("RoadItEntitiesModel.Finisher_ibfk_7", "AirHumidity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_2", "Angle")]
        public Angle Angle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Angle>("RoadItEntitiesModel.Finisher_ibfk_2", "Angle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Angle>("RoadItEntitiesModel.Finisher_ibfk_2", "Angle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Angle> AngleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Angle>("RoadItEntitiesModel.Finisher_ibfk_2", "Angle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Angle>("RoadItEntitiesModel.Finisher_ibfk_2", "Angle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_8", "AsphaltTemp")]
        public AsphaltTemp AsphaltTemp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsphaltTemp>("RoadItEntitiesModel.Finisher_ibfk_8", "AsphaltTemp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsphaltTemp>("RoadItEntitiesModel.Finisher_ibfk_8", "AsphaltTemp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsphaltTemp> AsphaltTempReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsphaltTemp>("RoadItEntitiesModel.Finisher_ibfk_8", "AsphaltTemp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AsphaltTemp>("RoadItEntitiesModel.Finisher_ibfk_8", "AsphaltTemp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_1", "SpeedFinisher")]
        public SpeedFinisher SpeedFinisher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeedFinisher>("RoadItEntitiesModel.Finisher_ibfk_1", "SpeedFinisher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeedFinisher>("RoadItEntitiesModel.Finisher_ibfk_1", "SpeedFinisher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SpeedFinisher> SpeedFinisherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SpeedFinisher>("RoadItEntitiesModel.Finisher_ibfk_1", "SpeedFinisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SpeedFinisher>("RoadItEntitiesModel.Finisher_ibfk_1", "SpeedFinisher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_3", "LayerThickness")]
        public LayerThickness LayerThickness
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LayerThickness>("RoadItEntitiesModel.Finisher_ibfk_3", "LayerThickness").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LayerThickness>("RoadItEntitiesModel.Finisher_ibfk_3", "LayerThickness").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LayerThickness> LayerThicknessReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LayerThickness>("RoadItEntitiesModel.Finisher_ibfk_3", "LayerThickness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LayerThickness>("RoadItEntitiesModel.Finisher_ibfk_3", "LayerThickness", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_4", "LocationAndTimeSpan")]
        public LocationAndTimeSpan LocationAndTimeSpan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LocationAndTimeSpan>("RoadItEntitiesModel.Finisher_ibfk_4", "LocationAndTimeSpan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LocationAndTimeSpan>("RoadItEntitiesModel.Finisher_ibfk_4", "LocationAndTimeSpan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LocationAndTimeSpan> LocationAndTimeSpanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LocationAndTimeSpan>("RoadItEntitiesModel.Finisher_ibfk_4", "LocationAndTimeSpan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LocationAndTimeSpan>("RoadItEntitiesModel.Finisher_ibfk_4", "LocationAndTimeSpan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_5", "Temp")]
        public Temp Temp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Temp>("RoadItEntitiesModel.Finisher_ibfk_5", "Temp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Temp>("RoadItEntitiesModel.Finisher_ibfk_5", "Temp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Temp> TempReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Temp>("RoadItEntitiesModel.Finisher_ibfk_5", "Temp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Temp>("RoadItEntitiesModel.Finisher_ibfk_5", "Temp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_6", "Wind")]
        public Wind Wind
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wind>("RoadItEntitiesModel.Finisher_ibfk_6", "Wind").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wind>("RoadItEntitiesModel.Finisher_ibfk_6", "Wind").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Wind> WindReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Wind>("RoadItEntitiesModel.Finisher_ibfk_6", "Wind");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Wind>("RoadItEntitiesModel.Finisher_ibfk_6", "Wind", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_9", "Width")]
        public Width Width
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Width>("RoadItEntitiesModel.Finisher_ibfk_9", "Width").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Width>("RoadItEntitiesModel.Finisher_ibfk_9", "Width").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Width> WidthReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Width>("RoadItEntitiesModel.Finisher_ibfk_9", "Width");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Width>("RoadItEntitiesModel.Finisher_ibfk_9", "Width", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_2", "Transport")]
        public EntityCollection<Transport> Transports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_2", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_2", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="LayerThickness")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LayerThickness : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LayerThickness object.
        /// </summary>
        /// <param name="layerThicknessId">Initial value of the LayerThicknessId property.</param>
        /// <param name="left">Initial value of the Left property.</param>
        /// <param name="middel">Initial value of the Middel property.</param>
        /// <param name="right">Initial value of the Right property.</param>
        public static LayerThickness CreateLayerThickness(global::System.Int32 layerThicknessId, global::System.Int32 left, global::System.Int32 middel, global::System.Int32 right)
        {
            LayerThickness layerThickness = new LayerThickness();
            layerThickness.LayerThicknessId = layerThicknessId;
            layerThickness.Left = left;
            layerThickness.Middel = middel;
            layerThickness.Right = right;
            return layerThickness;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LayerThicknessId
        {
            get
            {
                return _LayerThicknessId;
            }
            set
            {
                if (_LayerThicknessId != value)
                {
                    OnLayerThicknessIdChanging(value);
                    ReportPropertyChanging("LayerThicknessId");
                    _LayerThicknessId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LayerThicknessId");
                    OnLayerThicknessIdChanged();
                }
            }
        }
        private global::System.Int32 _LayerThicknessId;
        partial void OnLayerThicknessIdChanging(global::System.Int32 value);
        partial void OnLayerThicknessIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Left
        {
            get
            {
                return _Left;
            }
            set
            {
                OnLeftChanging(value);
                ReportPropertyChanging("Left");
                _Left = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Left");
                OnLeftChanged();
            }
        }
        private global::System.Int32 _Left;
        partial void OnLeftChanging(global::System.Int32 value);
        partial void OnLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Middel
        {
            get
            {
                return _Middel;
            }
            set
            {
                OnMiddelChanging(value);
                ReportPropertyChanging("Middel");
                _Middel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Middel");
                OnMiddelChanged();
            }
        }
        private global::System.Int32 _Middel;
        partial void OnMiddelChanging(global::System.Int32 value);
        partial void OnMiddelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Right
        {
            get
            {
                return _Right;
            }
            set
            {
                OnRightChanging(value);
                ReportPropertyChanging("Right");
                _Right = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Right");
                OnRightChanged();
            }
        }
        private global::System.Int32 _Right;
        partial void OnRightChanging(global::System.Int32 value);
        partial void OnRightChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_3", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_3", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_3", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="ListFillerRecup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListFillerRecup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListFillerRecup object.
        /// </summary>
        /// <param name="listFillerRecupId">Initial value of the ListFillerRecupId property.</param>
        /// <param name="fillerRecup">Initial value of the FillerRecup property.</param>
        public static ListFillerRecup CreateListFillerRecup(global::System.Int32 listFillerRecupId, global::System.Int32 fillerRecup)
        {
            ListFillerRecup listFillerRecup = new ListFillerRecup();
            listFillerRecup.ListFillerRecupId = listFillerRecupId;
            listFillerRecup.FillerRecup = fillerRecup;
            return listFillerRecup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListFillerRecupId
        {
            get
            {
                return _ListFillerRecupId;
            }
            set
            {
                if (_ListFillerRecupId != value)
                {
                    OnListFillerRecupIdChanging(value);
                    ReportPropertyChanging("ListFillerRecupId");
                    _ListFillerRecupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListFillerRecupId");
                    OnListFillerRecupIdChanged();
                }
            }
        }
        private global::System.Int32 _ListFillerRecupId;
        partial void OnListFillerRecupIdChanging(global::System.Int32 value);
        partial void OnListFillerRecupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FillerRecup
        {
            get
            {
                return _FillerRecup;
            }
            set
            {
                OnFillerRecupChanging(value);
                ReportPropertyChanging("FillerRecup");
                _FillerRecup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FillerRecup");
                OnFillerRecupChanged();
            }
        }
        private global::System.Int32 _FillerRecup;
        partial void OnFillerRecupChanging(global::System.Int32 value);
        partial void OnFillerRecupChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_4", "Silo")]
        public EntityCollection<Silo> Silos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_4", "Silo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Silo>("RoadItEntitiesModel.Silo_ibfk_4", "Silo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="LocationAndTimeSpan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationAndTimeSpan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationAndTimeSpan object.
        /// </summary>
        /// <param name="locationAndTimeSpanId">Initial value of the LocationAndTimeSpanId property.</param>
        /// <param name="stopLocation">Initial value of the StopLocation property.</param>
        /// <param name="stopTime">Initial value of the StopTime property.</param>
        public static LocationAndTimeSpan CreateLocationAndTimeSpan(global::System.Int32 locationAndTimeSpanId, global::System.String stopLocation, global::System.TimeSpan stopTime)
        {
            LocationAndTimeSpan locationAndTimeSpan = new LocationAndTimeSpan();
            locationAndTimeSpan.LocationAndTimeSpanId = locationAndTimeSpanId;
            locationAndTimeSpan.StopLocation = stopLocation;
            locationAndTimeSpan.StopTime = stopTime;
            return locationAndTimeSpan;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationAndTimeSpanId
        {
            get
            {
                return _LocationAndTimeSpanId;
            }
            set
            {
                if (_LocationAndTimeSpanId != value)
                {
                    OnLocationAndTimeSpanIdChanging(value);
                    ReportPropertyChanging("LocationAndTimeSpanId");
                    _LocationAndTimeSpanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationAndTimeSpanId");
                    OnLocationAndTimeSpanIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationAndTimeSpanId;
        partial void OnLocationAndTimeSpanIdChanging(global::System.Int32 value);
        partial void OnLocationAndTimeSpanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StopLocation
        {
            get
            {
                return _StopLocation;
            }
            set
            {
                OnStopLocationChanging(value);
                ReportPropertyChanging("StopLocation");
                _StopLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StopLocation");
                OnStopLocationChanged();
            }
        }
        private global::System.String _StopLocation;
        partial void OnStopLocationChanging(global::System.String value);
        partial void OnStopLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StopTime
        {
            get
            {
                return _StopTime;
            }
            set
            {
                OnStopTimeChanging(value);
                ReportPropertyChanging("StopTime");
                _StopTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopTime");
                OnStopTimeChanged();
            }
        }
        private global::System.TimeSpan _StopTime;
        partial void OnStopTimeChanging(global::System.TimeSpan value);
        partial void OnStopTimeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_4", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_4", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_4", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Planning")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Planning : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Planning object.
        /// </summary>
        /// <param name="planningId">Initial value of the PlanningId property.</param>
        /// <param name="layerThickness">Initial value of the LayerThickness property.</param>
        /// <param name="surface">Initial value of the Surface property.</param>
        /// <param name="tonPerDay">Initial value of the TonPerDay property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static Planning CreatePlanning(global::System.Int32 planningId, global::System.Int32 layerThickness, global::System.Int32 surface, global::System.Int32 tonPerDay, global::System.Int32 projectId)
        {
            Planning planning = new Planning();
            planning.PlanningId = planningId;
            planning.LayerThickness = layerThickness;
            planning.Surface = surface;
            planning.TonPerDay = tonPerDay;
            planning.ProjectId = projectId;
            return planning;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlanningId
        {
            get
            {
                return _PlanningId;
            }
            set
            {
                if (_PlanningId != value)
                {
                    OnPlanningIdChanging(value);
                    ReportPropertyChanging("PlanningId");
                    _PlanningId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PlanningId");
                    OnPlanningIdChanged();
                }
            }
        }
        private global::System.Int32 _PlanningId;
        partial void OnPlanningIdChanging(global::System.Int32 value);
        partial void OnPlanningIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LayerThickness
        {
            get
            {
                return _LayerThickness;
            }
            set
            {
                OnLayerThicknessChanging(value);
                ReportPropertyChanging("LayerThickness");
                _LayerThickness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LayerThickness");
                OnLayerThicknessChanged();
            }
        }
        private global::System.Int32 _LayerThickness;
        partial void OnLayerThicknessChanging(global::System.Int32 value);
        partial void OnLayerThicknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Surface
        {
            get
            {
                return _Surface;
            }
            set
            {
                OnSurfaceChanging(value);
                ReportPropertyChanging("Surface");
                _Surface = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Surface");
                OnSurfaceChanged();
            }
        }
        private global::System.Int32 _Surface;
        partial void OnSurfaceChanging(global::System.Int32 value);
        partial void OnSurfaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TonPerDay
        {
            get
            {
                return _TonPerDay;
            }
            set
            {
                OnTonPerDayChanging(value);
                ReportPropertyChanging("TonPerDay");
                _TonPerDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TonPerDay");
                OnTonPerDayChanged();
            }
        }
        private global::System.Int32 _TonPerDay;
        partial void OnTonPerDayChanging(global::System.Int32 value);
        partial void OnTonPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Planning_ibfk_1", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.Planning_ibfk_1", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.Planning_ibfk_1", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.Planning_ibfk_1", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("RoadItEntitiesModel.Planning_ibfk_1", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static Project CreateProject(global::System.Int32 projectId)
        {
            Project project = new Project();
            project.ProjectId = projectId;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                if (_ProjectId != value)
                {
                    OnProjectIdChanging(value);
                    ReportPropertyChanging("ProjectId");
                    _ProjectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectId");
                    OnProjectIdChanged();
                }
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "BatchList_ibfk_1", "BatchList")]
        public EntityCollection<BatchList> BatchLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchList>("RoadItEntitiesModel.BatchList_ibfk_1", "BatchList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchList>("RoadItEntitiesModel.BatchList_ibfk_1", "BatchList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Contractor_ibfk_1", "Contractor")]
        public EntityCollection<Contractor> Contractors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("RoadItEntitiesModel.Contractor_ibfk_1", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("RoadItEntitiesModel.Contractor_ibfk_1", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Planning_ibfk_1", "Planning")]
        public EntityCollection<Planning> Plannings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Planning>("RoadItEntitiesModel.Planning_ibfk_1", "Planning");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Planning>("RoadItEntitiesModel.Planning_ibfk_1", "Planning", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "QualityControl_ibfk_1", "QualityControl")]
        public EntityCollection<QualityControl> QualityControls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QualityControl>("RoadItEntitiesModel.QualityControl_ibfk_1", "QualityControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QualityControl>("RoadItEntitiesModel.QualityControl_ibfk_1", "QualityControl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "RoadSection_ibfk_1", "RoadSection")]
        public EntityCollection<RoadSection> RoadSections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoadSection>("RoadItEntitiesModel.RoadSection_ibfk_1", "RoadSection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoadSection>("RoadItEntitiesModel.RoadSection_ibfk_1", "RoadSection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="QualityControl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QualityControl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QualityControl object.
        /// </summary>
        /// <param name="controlId">Initial value of the ControlId property.</param>
        /// <param name="complianceMixture">Initial value of the ComplianceMixture property.</param>
        /// <param name="samplesCopro">Initial value of the SamplesCopro property.</param>
        /// <param name="densityOfField">Initial value of the DensityOfField property.</param>
        /// <param name="cores">Initial value of the Cores property.</param>
        /// <param name="lengthwiseFlatness">Initial value of the LengthwiseFlatness property.</param>
        /// <param name="skidresistance">Initial value of the Skidresistance property.</param>
        /// <param name="iri">Initial value of the Iri property.</param>
        /// <param name="extraTestsAskedBijClient">Initial value of the ExtraTestsAskedBijClient property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        public static QualityControl CreateQualityControl(global::System.Int32 controlId, global::System.String complianceMixture, global::System.String samplesCopro, global::System.String densityOfField, global::System.String cores, global::System.String lengthwiseFlatness, global::System.String skidresistance, global::System.String iri, global::System.String extraTestsAskedBijClient, global::System.Int32 projectId)
        {
            QualityControl qualityControl = new QualityControl();
            qualityControl.ControlId = controlId;
            qualityControl.ComplianceMixture = complianceMixture;
            qualityControl.SamplesCopro = samplesCopro;
            qualityControl.DensityOfField = densityOfField;
            qualityControl.Cores = cores;
            qualityControl.LengthwiseFlatness = lengthwiseFlatness;
            qualityControl.Skidresistance = skidresistance;
            qualityControl.Iri = iri;
            qualityControl.ExtraTestsAskedBijClient = extraTestsAskedBijClient;
            qualityControl.ProjectId = projectId;
            return qualityControl;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ControlId
        {
            get
            {
                return _ControlId;
            }
            set
            {
                if (_ControlId != value)
                {
                    OnControlIdChanging(value);
                    ReportPropertyChanging("ControlId");
                    _ControlId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ControlId");
                    OnControlIdChanged();
                }
            }
        }
        private global::System.Int32 _ControlId;
        partial void OnControlIdChanging(global::System.Int32 value);
        partial void OnControlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComplianceMixture
        {
            get
            {
                return _ComplianceMixture;
            }
            set
            {
                OnComplianceMixtureChanging(value);
                ReportPropertyChanging("ComplianceMixture");
                _ComplianceMixture = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ComplianceMixture");
                OnComplianceMixtureChanged();
            }
        }
        private global::System.String _ComplianceMixture;
        partial void OnComplianceMixtureChanging(global::System.String value);
        partial void OnComplianceMixtureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SamplesCopro
        {
            get
            {
                return _SamplesCopro;
            }
            set
            {
                OnSamplesCoproChanging(value);
                ReportPropertyChanging("SamplesCopro");
                _SamplesCopro = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SamplesCopro");
                OnSamplesCoproChanged();
            }
        }
        private global::System.String _SamplesCopro;
        partial void OnSamplesCoproChanging(global::System.String value);
        partial void OnSamplesCoproChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DensityOfField
        {
            get
            {
                return _DensityOfField;
            }
            set
            {
                OnDensityOfFieldChanging(value);
                ReportPropertyChanging("DensityOfField");
                _DensityOfField = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DensityOfField");
                OnDensityOfFieldChanged();
            }
        }
        private global::System.String _DensityOfField;
        partial void OnDensityOfFieldChanging(global::System.String value);
        partial void OnDensityOfFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cores
        {
            get
            {
                return _Cores;
            }
            set
            {
                OnCoresChanging(value);
                ReportPropertyChanging("Cores");
                _Cores = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cores");
                OnCoresChanged();
            }
        }
        private global::System.String _Cores;
        partial void OnCoresChanging(global::System.String value);
        partial void OnCoresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LengthwiseFlatness
        {
            get
            {
                return _LengthwiseFlatness;
            }
            set
            {
                OnLengthwiseFlatnessChanging(value);
                ReportPropertyChanging("LengthwiseFlatness");
                _LengthwiseFlatness = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LengthwiseFlatness");
                OnLengthwiseFlatnessChanged();
            }
        }
        private global::System.String _LengthwiseFlatness;
        partial void OnLengthwiseFlatnessChanging(global::System.String value);
        partial void OnLengthwiseFlatnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Skidresistance
        {
            get
            {
                return _Skidresistance;
            }
            set
            {
                OnSkidresistanceChanging(value);
                ReportPropertyChanging("Skidresistance");
                _Skidresistance = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Skidresistance");
                OnSkidresistanceChanged();
            }
        }
        private global::System.String _Skidresistance;
        partial void OnSkidresistanceChanging(global::System.String value);
        partial void OnSkidresistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Iri
        {
            get
            {
                return _Iri;
            }
            set
            {
                OnIriChanging(value);
                ReportPropertyChanging("Iri");
                _Iri = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Iri");
                OnIriChanged();
            }
        }
        private global::System.String _Iri;
        partial void OnIriChanging(global::System.String value);
        partial void OnIriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtraTestsAskedBijClient
        {
            get
            {
                return _ExtraTestsAskedBijClient;
            }
            set
            {
                OnExtraTestsAskedBijClientChanging(value);
                ReportPropertyChanging("ExtraTestsAskedBijClient");
                _ExtraTestsAskedBijClient = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExtraTestsAskedBijClient");
                OnExtraTestsAskedBijClientChanged();
            }
        }
        private global::System.String _ExtraTestsAskedBijClient;
        partial void OnExtraTestsAskedBijClientChanging(global::System.String value);
        partial void OnExtraTestsAskedBijClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "QualityControl_ibfk_1", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.QualityControl_ibfk_1", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.QualityControl_ibfk_1", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.QualityControl_ibfk_1", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("RoadItEntitiesModel.QualityControl_ibfk_1", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="RoadSection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoadSection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoadSection object.
        /// </summary>
        /// <param name="roadId">Initial value of the RoadId property.</param>
        /// <param name="projectId">Initial value of the ProjectId property.</param>
        /// <param name="roadDescription">Initial value of the RoadDescription property.</param>
        public static RoadSection CreateRoadSection(global::System.Int32 roadId, global::System.Int32 projectId, global::System.String roadDescription)
        {
            RoadSection roadSection = new RoadSection();
            roadSection.RoadId = roadId;
            roadSection.ProjectId = projectId;
            roadSection.RoadDescription = roadDescription;
            return roadSection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoadId
        {
            get
            {
                return _RoadId;
            }
            set
            {
                if (_RoadId != value)
                {
                    OnRoadIdChanging(value);
                    ReportPropertyChanging("RoadId");
                    _RoadId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoadId");
                    OnRoadIdChanged();
                }
            }
        }
        private global::System.Int32 _RoadId;
        partial void OnRoadIdChanging(global::System.Int32 value);
        partial void OnRoadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private global::System.Int32 _ProjectId;
        partial void OnProjectIdChanging(global::System.Int32 value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoadDescription
        {
            get
            {
                return _RoadDescription;
            }
            set
            {
                OnRoadDescriptionChanging(value);
                ReportPropertyChanging("RoadDescription");
                _RoadDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoadDescription");
                OnRoadDescriptionChanged();
            }
        }
        private global::System.String _RoadDescription;
        partial void OnRoadDescriptionChanging(global::System.String value);
        partial void OnRoadDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "RoadSection_ibfk_1", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.RoadSection_ibfk_1", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.RoadSection_ibfk_1", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("RoadItEntitiesModel.RoadSection_ibfk_1", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("RoadItEntitiesModel.RoadSection_ibfk_1", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.String name)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.Name = name;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Users_ibfk_1", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("RoadItEntitiesModel.Users_ibfk_1", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("RoadItEntitiesModel.Users_ibfk_1", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Silo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Silo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Silo object.
        /// </summary>
        /// <param name="siloId">Initial value of the SiloId property.</param>
        /// <param name="centralId">Initial value of the CentralId property.</param>
        /// <param name="aggregationId">Initial value of the AggregationId property.</param>
        /// <param name="bitumenId">Initial value of the BitumenId property.</param>
        /// <param name="listRecupFillerId">Initial value of the ListRecupFillerId property.</param>
        /// <param name="mixingTemp">Initial value of the MixingTemp property.</param>
        /// <param name="mixingTime">Initial value of the MixingTime property.</param>
        /// <param name="realCompositionId">Initial value of the RealCompositionId property.</param>
        /// <param name="tempSilo">Initial value of the TempSilo property.</param>
        /// <param name="analysisComposition">Initial value of the AnalysisComposition property.</param>
        public static Silo CreateSilo(global::System.Int32 siloId, global::System.Int32 centralId, global::System.Int32 aggregationId, global::System.Int32 bitumenId, global::System.Int32 listRecupFillerId, global::System.Int32 mixingTemp, global::System.TimeSpan mixingTime, global::System.Int32 realCompositionId, global::System.Int32 tempSilo, global::System.String analysisComposition)
        {
            Silo silo = new Silo();
            silo.SiloId = siloId;
            silo.CentralId = centralId;
            silo.AggregationId = aggregationId;
            silo.BitumenId = bitumenId;
            silo.ListRecupFillerId = listRecupFillerId;
            silo.MixingTemp = mixingTemp;
            silo.MixingTime = mixingTime;
            silo.RealCompositionId = realCompositionId;
            silo.TempSilo = tempSilo;
            silo.AnalysisComposition = analysisComposition;
            return silo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiloId
        {
            get
            {
                return _SiloId;
            }
            set
            {
                if (_SiloId != value)
                {
                    OnSiloIdChanging(value);
                    ReportPropertyChanging("SiloId");
                    _SiloId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiloId");
                    OnSiloIdChanged();
                }
            }
        }
        private global::System.Int32 _SiloId;
        partial void OnSiloIdChanging(global::System.Int32 value);
        partial void OnSiloIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CentralId
        {
            get
            {
                return _CentralId;
            }
            set
            {
                OnCentralIdChanging(value);
                ReportPropertyChanging("CentralId");
                _CentralId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CentralId");
                OnCentralIdChanged();
            }
        }
        private global::System.Int32 _CentralId;
        partial void OnCentralIdChanging(global::System.Int32 value);
        partial void OnCentralIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggregationId
        {
            get
            {
                return _AggregationId;
            }
            set
            {
                OnAggregationIdChanging(value);
                ReportPropertyChanging("AggregationId");
                _AggregationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AggregationId");
                OnAggregationIdChanged();
            }
        }
        private global::System.Int32 _AggregationId;
        partial void OnAggregationIdChanging(global::System.Int32 value);
        partial void OnAggregationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenId
        {
            get
            {
                return _BitumenId;
            }
            set
            {
                OnBitumenIdChanging(value);
                ReportPropertyChanging("BitumenId");
                _BitumenId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BitumenId");
                OnBitumenIdChanged();
            }
        }
        private global::System.Int32 _BitumenId;
        partial void OnBitumenIdChanging(global::System.Int32 value);
        partial void OnBitumenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListRecupFillerId
        {
            get
            {
                return _ListRecupFillerId;
            }
            set
            {
                OnListRecupFillerIdChanging(value);
                ReportPropertyChanging("ListRecupFillerId");
                _ListRecupFillerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListRecupFillerId");
                OnListRecupFillerIdChanged();
            }
        }
        private global::System.Int32 _ListRecupFillerId;
        partial void OnListRecupFillerIdChanging(global::System.Int32 value);
        partial void OnListRecupFillerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MixingTemp
        {
            get
            {
                return _MixingTemp;
            }
            set
            {
                OnMixingTempChanging(value);
                ReportPropertyChanging("MixingTemp");
                _MixingTemp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MixingTemp");
                OnMixingTempChanged();
            }
        }
        private global::System.Int32 _MixingTemp;
        partial void OnMixingTempChanging(global::System.Int32 value);
        partial void OnMixingTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan MixingTime
        {
            get
            {
                return _MixingTime;
            }
            set
            {
                OnMixingTimeChanging(value);
                ReportPropertyChanging("MixingTime");
                _MixingTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MixingTime");
                OnMixingTimeChanged();
            }
        }
        private global::System.TimeSpan _MixingTime;
        partial void OnMixingTimeChanging(global::System.TimeSpan value);
        partial void OnMixingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealCompositionId
        {
            get
            {
                return _RealCompositionId;
            }
            set
            {
                OnRealCompositionIdChanging(value);
                ReportPropertyChanging("RealCompositionId");
                _RealCompositionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RealCompositionId");
                OnRealCompositionIdChanged();
            }
        }
        private global::System.Int32 _RealCompositionId;
        partial void OnRealCompositionIdChanging(global::System.Int32 value);
        partial void OnRealCompositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempSilo
        {
            get
            {
                return _TempSilo;
            }
            set
            {
                OnTempSiloChanging(value);
                ReportPropertyChanging("TempSilo");
                _TempSilo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TempSilo");
                OnTempSiloChanged();
            }
        }
        private global::System.Int32 _TempSilo;
        partial void OnTempSiloChanging(global::System.Int32 value);
        partial void OnTempSiloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnalysisComposition
        {
            get
            {
                return _AnalysisComposition;
            }
            set
            {
                OnAnalysisCompositionChanging(value);
                ReportPropertyChanging("AnalysisComposition");
                _AnalysisComposition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AnalysisComposition");
                OnAnalysisCompositionChanged();
            }
        }
        private global::System.String _AnalysisComposition;
        partial void OnAnalysisCompositionChanging(global::System.String value);
        partial void OnAnalysisCompositionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_2", "Aggragation")]
        public Aggragation Aggragation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aggragation>("RoadItEntitiesModel.Silo_ibfk_2", "Aggragation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aggragation>("RoadItEntitiesModel.Silo_ibfk_2", "Aggragation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Aggragation> AggragationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Aggragation>("RoadItEntitiesModel.Silo_ibfk_2", "Aggragation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Aggragation>("RoadItEntitiesModel.Silo_ibfk_2", "Aggragation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_1", "AsphaltMixPlant")]
        public AsphaltMixPlant AsphaltMixPlant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsphaltMixPlant>("RoadItEntitiesModel.Silo_ibfk_1", "AsphaltMixPlant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsphaltMixPlant>("RoadItEntitiesModel.Silo_ibfk_1", "AsphaltMixPlant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AsphaltMixPlant> AsphaltMixPlantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AsphaltMixPlant>("RoadItEntitiesModel.Silo_ibfk_1", "AsphaltMixPlant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AsphaltMixPlant>("RoadItEntitiesModel.Silo_ibfk_1", "AsphaltMixPlant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "BatchList_ibfk_2", "BatchList")]
        public EntityCollection<BatchList> BatchLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchList>("RoadItEntitiesModel.BatchList_ibfk_2", "BatchList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchList>("RoadItEntitiesModel.BatchList_ibfk_2", "BatchList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_3", "Bitumen")]
        public Bituman Bituman
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bituman>("RoadItEntitiesModel.Silo_ibfk_3", "Bitumen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bituman>("RoadItEntitiesModel.Silo_ibfk_3", "Bitumen").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bituman> BitumanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bituman>("RoadItEntitiesModel.Silo_ibfk_3", "Bitumen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bituman>("RoadItEntitiesModel.Silo_ibfk_3", "Bitumen", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_5", "Composition")]
        public Composition Composition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Composition>("RoadItEntitiesModel.Silo_ibfk_5", "Composition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Composition>("RoadItEntitiesModel.Silo_ibfk_5", "Composition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Composition> CompositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Composition>("RoadItEntitiesModel.Silo_ibfk_5", "Composition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Composition>("RoadItEntitiesModel.Silo_ibfk_5", "Composition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Silo_ibfk_4", "ListFillerRecup")]
        public ListFillerRecup ListFillerRecup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListFillerRecup>("RoadItEntitiesModel.Silo_ibfk_4", "ListFillerRecup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListFillerRecup>("RoadItEntitiesModel.Silo_ibfk_4", "ListFillerRecup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListFillerRecup> ListFillerRecupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListFillerRecup>("RoadItEntitiesModel.Silo_ibfk_4", "ListFillerRecup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListFillerRecup>("RoadItEntitiesModel.Silo_ibfk_4", "ListFillerRecup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="SpeedFinisher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpeedFinisher : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpeedFinisher object.
        /// </summary>
        /// <param name="speedId">Initial value of the SpeedId property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        public static SpeedFinisher CreateSpeedFinisher(global::System.Int32 speedId, global::System.Int32 speed)
        {
            SpeedFinisher speedFinisher = new SpeedFinisher();
            speedFinisher.SpeedId = speedId;
            speedFinisher.Speed = speed;
            return speedFinisher;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedId
        {
            get
            {
                return _SpeedId;
            }
            set
            {
                if (_SpeedId != value)
                {
                    OnSpeedIdChanging(value);
                    ReportPropertyChanging("SpeedId");
                    _SpeedId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpeedId");
                    OnSpeedIdChanged();
                }
            }
        }
        private global::System.Int32 _SpeedId;
        partial void OnSpeedIdChanging(global::System.Int32 value);
        partial void OnSpeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Int32 _Speed;
        partial void OnSpeedChanging(global::System.Int32 value);
        partial void OnSpeedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_1", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_1", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_1", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Temp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Temp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Temp object.
        /// </summary>
        /// <param name="tempId">Initial value of the TempId property.</param>
        /// <param name="temp1">Initial value of the Temp1 property.</param>
        public static Temp CreateTemp(global::System.Int32 tempId, global::System.Int32 temp1)
        {
            Temp temp = new Temp();
            temp.TempId = tempId;
            temp.Temp1 = temp1;
            return temp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempId
        {
            get
            {
                return _TempId;
            }
            set
            {
                if (_TempId != value)
                {
                    OnTempIdChanging(value);
                    ReportPropertyChanging("TempId");
                    _TempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TempId");
                    OnTempIdChanged();
                }
            }
        }
        private global::System.Int32 _TempId;
        partial void OnTempIdChanging(global::System.Int32 value);
        partial void OnTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp1
        {
            get
            {
                return _Temp1;
            }
            set
            {
                OnTemp1Changing(value);
                ReportPropertyChanging("Temp1");
                _Temp1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Temp1");
                OnTemp1Changed();
            }
        }
        private global::System.Int32 _Temp1;
        partial void OnTemp1Changing(global::System.Int32 value);
        partial void OnTemp1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_5", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_5", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_5", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Transport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transport object.
        /// </summary>
        /// <param name="transportId">Initial value of the TransportId property.</param>
        /// <param name="finisherId">Initial value of the FinisherId property.</param>
        /// <param name="truckLicensPlate">Initial value of the TruckLicensPlate property.</param>
        /// <param name="departureTime">Initial value of the DepartureTime property.</param>
        /// <param name="massTruck">Initial value of the MassTruck property.</param>
        /// <param name="actualPositionId">Initial value of the ActualPositionId property.</param>
        /// <param name="eTAId">Initial value of the ETAId property.</param>
        /// <param name="actualTempId">Initial value of the ActualTempId property.</param>
        /// <param name="realArrivalTime">Initial value of the RealArrivalTime property.</param>
        /// <param name="deattachmentFinisherTime">Initial value of the DeattachmentFinisherTime property.</param>
        /// <param name="deattachmentFinisherPosition">Initial value of the DeattachmentFinisherPosition property.</param>
        /// <param name="actualPositionReturnId">Initial value of the ActualPositionReturnId property.</param>
        /// <param name="eTAReturnId">Initial value of the ETAReturnId property.</param>
        /// <param name="arrivalAtPlant">Initial value of the ArrivalAtPlant property.</param>
        /// <param name="unforseenStop">Initial value of the UnforseenStop property.</param>
        public static Transport CreateTransport(global::System.Int32 transportId, global::System.Int32 finisherId, global::System.String truckLicensPlate, global::System.DateTime departureTime, global::System.Int32 massTruck, global::System.Int32 actualPositionId, global::System.Int32 eTAId, global::System.Int32 actualTempId, global::System.DateTime realArrivalTime, global::System.DateTime deattachmentFinisherTime, global::System.String deattachmentFinisherPosition, global::System.Int32 actualPositionReturnId, global::System.Int32 eTAReturnId, global::System.DateTime arrivalAtPlant, global::System.Int32 unforseenStop)
        {
            Transport transport = new Transport();
            transport.TransportId = transportId;
            transport.FinisherId = finisherId;
            transport.TruckLicensPlate = truckLicensPlate;
            transport.DepartureTime = departureTime;
            transport.MassTruck = massTruck;
            transport.ActualPositionId = actualPositionId;
            transport.ETAId = eTAId;
            transport.ActualTempId = actualTempId;
            transport.RealArrivalTime = realArrivalTime;
            transport.DeattachmentFinisherTime = deattachmentFinisherTime;
            transport.DeattachmentFinisherPosition = deattachmentFinisherPosition;
            transport.ActualPositionReturnId = actualPositionReturnId;
            transport.ETAReturnId = eTAReturnId;
            transport.ArrivalAtPlant = arrivalAtPlant;
            transport.UnforseenStop = unforseenStop;
            return transport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransportId
        {
            get
            {
                return _TransportId;
            }
            set
            {
                if (_TransportId != value)
                {
                    OnTransportIdChanging(value);
                    ReportPropertyChanging("TransportId");
                    _TransportId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransportId");
                    OnTransportIdChanged();
                }
            }
        }
        private global::System.Int32 _TransportId;
        partial void OnTransportIdChanging(global::System.Int32 value);
        partial void OnTransportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinisherId
        {
            get
            {
                return _FinisherId;
            }
            set
            {
                OnFinisherIdChanging(value);
                ReportPropertyChanging("FinisherId");
                _FinisherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinisherId");
                OnFinisherIdChanged();
            }
        }
        private global::System.Int32 _FinisherId;
        partial void OnFinisherIdChanging(global::System.Int32 value);
        partial void OnFinisherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TruckLicensPlate
        {
            get
            {
                return _TruckLicensPlate;
            }
            set
            {
                OnTruckLicensPlateChanging(value);
                ReportPropertyChanging("TruckLicensPlate");
                _TruckLicensPlate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TruckLicensPlate");
                OnTruckLicensPlateChanged();
            }
        }
        private global::System.String _TruckLicensPlate;
        partial void OnTruckLicensPlateChanging(global::System.String value);
        partial void OnTruckLicensPlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureTime
        {
            get
            {
                return _DepartureTime;
            }
            set
            {
                OnDepartureTimeChanging(value);
                ReportPropertyChanging("DepartureTime");
                _DepartureTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartureTime");
                OnDepartureTimeChanged();
            }
        }
        private global::System.DateTime _DepartureTime;
        partial void OnDepartureTimeChanging(global::System.DateTime value);
        partial void OnDepartureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassTruck
        {
            get
            {
                return _MassTruck;
            }
            set
            {
                OnMassTruckChanging(value);
                ReportPropertyChanging("MassTruck");
                _MassTruck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MassTruck");
                OnMassTruckChanged();
            }
        }
        private global::System.Int32 _MassTruck;
        partial void OnMassTruckChanging(global::System.Int32 value);
        partial void OnMassTruckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionId
        {
            get
            {
                return _ActualPositionId;
            }
            set
            {
                OnActualPositionIdChanging(value);
                ReportPropertyChanging("ActualPositionId");
                _ActualPositionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPositionId");
                OnActualPositionIdChanged();
            }
        }
        private global::System.Int32 _ActualPositionId;
        partial void OnActualPositionIdChanging(global::System.Int32 value);
        partial void OnActualPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAId
        {
            get
            {
                return _ETAId;
            }
            set
            {
                OnETAIdChanging(value);
                ReportPropertyChanging("ETAId");
                _ETAId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ETAId");
                OnETAIdChanged();
            }
        }
        private global::System.Int32 _ETAId;
        partial void OnETAIdChanging(global::System.Int32 value);
        partial void OnETAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualTempId
        {
            get
            {
                return _ActualTempId;
            }
            set
            {
                OnActualTempIdChanging(value);
                ReportPropertyChanging("ActualTempId");
                _ActualTempId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualTempId");
                OnActualTempIdChanged();
            }
        }
        private global::System.Int32 _ActualTempId;
        partial void OnActualTempIdChanging(global::System.Int32 value);
        partial void OnActualTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealArrivalTime
        {
            get
            {
                return _RealArrivalTime;
            }
            set
            {
                OnRealArrivalTimeChanging(value);
                ReportPropertyChanging("RealArrivalTime");
                _RealArrivalTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RealArrivalTime");
                OnRealArrivalTimeChanged();
            }
        }
        private global::System.DateTime _RealArrivalTime;
        partial void OnRealArrivalTimeChanging(global::System.DateTime value);
        partial void OnRealArrivalTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeattachmentFinisherTime
        {
            get
            {
                return _DeattachmentFinisherTime;
            }
            set
            {
                OnDeattachmentFinisherTimeChanging(value);
                ReportPropertyChanging("DeattachmentFinisherTime");
                _DeattachmentFinisherTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeattachmentFinisherTime");
                OnDeattachmentFinisherTimeChanged();
            }
        }
        private global::System.DateTime _DeattachmentFinisherTime;
        partial void OnDeattachmentFinisherTimeChanging(global::System.DateTime value);
        partial void OnDeattachmentFinisherTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeattachmentFinisherPosition
        {
            get
            {
                return _DeattachmentFinisherPosition;
            }
            set
            {
                OnDeattachmentFinisherPositionChanging(value);
                ReportPropertyChanging("DeattachmentFinisherPosition");
                _DeattachmentFinisherPosition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeattachmentFinisherPosition");
                OnDeattachmentFinisherPositionChanged();
            }
        }
        private global::System.String _DeattachmentFinisherPosition;
        partial void OnDeattachmentFinisherPositionChanging(global::System.String value);
        partial void OnDeattachmentFinisherPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionReturnId
        {
            get
            {
                return _ActualPositionReturnId;
            }
            set
            {
                OnActualPositionReturnIdChanging(value);
                ReportPropertyChanging("ActualPositionReturnId");
                _ActualPositionReturnId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActualPositionReturnId");
                OnActualPositionReturnIdChanged();
            }
        }
        private global::System.Int32 _ActualPositionReturnId;
        partial void OnActualPositionReturnIdChanging(global::System.Int32 value);
        partial void OnActualPositionReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAReturnId
        {
            get
            {
                return _ETAReturnId;
            }
            set
            {
                OnETAReturnIdChanging(value);
                ReportPropertyChanging("ETAReturnId");
                _ETAReturnId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ETAReturnId");
                OnETAReturnIdChanged();
            }
        }
        private global::System.Int32 _ETAReturnId;
        partial void OnETAReturnIdChanging(global::System.Int32 value);
        partial void OnETAReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArrivalAtPlant
        {
            get
            {
                return _ArrivalAtPlant;
            }
            set
            {
                OnArrivalAtPlantChanging(value);
                ReportPropertyChanging("ArrivalAtPlant");
                _ArrivalAtPlant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArrivalAtPlant");
                OnArrivalAtPlantChanged();
            }
        }
        private global::System.DateTime _ArrivalAtPlant;
        partial void OnArrivalAtPlantChanging(global::System.DateTime value);
        partial void OnArrivalAtPlantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnforseenStop
        {
            get
            {
                return _UnforseenStop;
            }
            set
            {
                OnUnforseenStopChanging(value);
                ReportPropertyChanging("UnforseenStop");
                _UnforseenStop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnforseenStop");
                OnUnforseenStopChanged();
            }
        }
        private global::System.Int32 _UnforseenStop;
        partial void OnUnforseenStopChanging(global::System.Int32 value);
        partial void OnUnforseenStopChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_3", "ActualPosition")]
        public ActualPosition ActualPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActualPosition>("RoadItEntitiesModel.Transport_ibfk_3", "ActualPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActualPosition>("RoadItEntitiesModel.Transport_ibfk_3", "ActualPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActualPosition> ActualPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActualPosition>("RoadItEntitiesModel.Transport_ibfk_3", "ActualPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActualPosition>("RoadItEntitiesModel.Transport_ibfk_3", "ActualPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_5", "ActualPositionReturn")]
        public ActualPositionReturn ActualPositionReturn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActualPositionReturn>("RoadItEntitiesModel.Transport_ibfk_5", "ActualPositionReturn").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActualPositionReturn>("RoadItEntitiesModel.Transport_ibfk_5", "ActualPositionReturn").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActualPositionReturn> ActualPositionReturnReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActualPositionReturn>("RoadItEntitiesModel.Transport_ibfk_5", "ActualPositionReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActualPositionReturn>("RoadItEntitiesModel.Transport_ibfk_5", "ActualPositionReturn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "BatchList_ibfk_3", "BatchList")]
        public EntityCollection<BatchList> BatchLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BatchList>("RoadItEntitiesModel.BatchList_ibfk_3", "BatchList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BatchList>("RoadItEntitiesModel.BatchList_ibfk_3", "BatchList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_4", "ETA")]
        public ETA ETA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETA>("RoadItEntitiesModel.Transport_ibfk_4", "ETA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETA>("RoadItEntitiesModel.Transport_ibfk_4", "ETA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ETA> ETAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETA>("RoadItEntitiesModel.Transport_ibfk_4", "ETA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ETA>("RoadItEntitiesModel.Transport_ibfk_4", "ETA", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_6", "ETAReturn")]
        public ETAReturn ETAReturn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETAReturn>("RoadItEntitiesModel.Transport_ibfk_6", "ETAReturn").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETAReturn>("RoadItEntitiesModel.Transport_ibfk_6", "ETAReturn").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ETAReturn> ETAReturnReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETAReturn>("RoadItEntitiesModel.Transport_ibfk_6", "ETAReturn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ETAReturn>("RoadItEntitiesModel.Transport_ibfk_6", "ETAReturn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_2", "Finisher")]
        public Finisher Finisher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Finisher>("RoadItEntitiesModel.Transport_ibfk_2", "Finisher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Finisher>("RoadItEntitiesModel.Transport_ibfk_2", "Finisher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Finisher> FinisherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Finisher>("RoadItEntitiesModel.Transport_ibfk_2", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Finisher>("RoadItEntitiesModel.Transport_ibfk_2", "Finisher", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_7", "TransportTemp")]
        public TransportTemp TransportTemp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransportTemp>("RoadItEntitiesModel.Transport_ibfk_7", "TransportTemp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransportTemp>("RoadItEntitiesModel.Transport_ibfk_7", "TransportTemp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransportTemp> TransportTempReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransportTemp>("RoadItEntitiesModel.Transport_ibfk_7", "TransportTemp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransportTemp>("RoadItEntitiesModel.Transport_ibfk_7", "TransportTemp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Transporter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transporter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transporter object.
        /// </summary>
        /// <param name="truckLicensPlate">Initial value of the TruckLicensPlate property.</param>
        /// <param name="departureTime">Initial value of the DepartureTime property.</param>
        /// <param name="massTruck">Initial value of the MassTruck property.</param>
        /// <param name="actualPositionId">Initial value of the ActualPositionId property.</param>
        /// <param name="actualPosition">Initial value of the ActualPosition property.</param>
        /// <param name="eTAId">Initial value of the ETAId property.</param>
        /// <param name="eTA">Initial value of the ETA property.</param>
        /// <param name="realArrivalTime">Initial value of the RealArrivalTime property.</param>
        /// <param name="deattachmentFinisherTime">Initial value of the DeattachmentFinisherTime property.</param>
        /// <param name="deattachmentFinisherPosition">Initial value of the DeattachmentFinisherPosition property.</param>
        /// <param name="actualPositionReturnId">Initial value of the ActualPositionReturnId property.</param>
        /// <param name="actualPositionReturn">Initial value of the ActualPositionReturn property.</param>
        /// <param name="eTAReturnId">Initial value of the ETAReturnId property.</param>
        /// <param name="eTAReturn">Initial value of the ETAReturn property.</param>
        /// <param name="arrivalAtPlant">Initial value of the ArrivalAtPlant property.</param>
        /// <param name="unforseenStop">Initial value of the UnforseenStop property.</param>
        public static Transporter CreateTransporter(global::System.String truckLicensPlate, global::System.DateTime departureTime, global::System.Int32 massTruck, global::System.Int32 actualPositionId, global::System.String actualPosition, global::System.Int32 eTAId, global::System.String eTA, global::System.DateTime realArrivalTime, global::System.DateTime deattachmentFinisherTime, global::System.String deattachmentFinisherPosition, global::System.Int32 actualPositionReturnId, global::System.String actualPositionReturn, global::System.Int32 eTAReturnId, global::System.String eTAReturn, global::System.DateTime arrivalAtPlant, global::System.Int32 unforseenStop)
        {
            Transporter transporter = new Transporter();
            transporter.TruckLicensPlate = truckLicensPlate;
            transporter.DepartureTime = departureTime;
            transporter.MassTruck = massTruck;
            transporter.ActualPositionId = actualPositionId;
            transporter.ActualPosition = actualPosition;
            transporter.ETAId = eTAId;
            transporter.ETA = eTA;
            transporter.RealArrivalTime = realArrivalTime;
            transporter.DeattachmentFinisherTime = deattachmentFinisherTime;
            transporter.DeattachmentFinisherPosition = deattachmentFinisherPosition;
            transporter.ActualPositionReturnId = actualPositionReturnId;
            transporter.ActualPositionReturn = actualPositionReturn;
            transporter.ETAReturnId = eTAReturnId;
            transporter.ETAReturn = eTAReturn;
            transporter.ArrivalAtPlant = arrivalAtPlant;
            transporter.UnforseenStop = unforseenStop;
            return transporter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TruckLicensPlate
        {
            get
            {
                return _TruckLicensPlate;
            }
            set
            {
                if (_TruckLicensPlate != value)
                {
                    OnTruckLicensPlateChanging(value);
                    ReportPropertyChanging("TruckLicensPlate");
                    _TruckLicensPlate = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TruckLicensPlate");
                    OnTruckLicensPlateChanged();
                }
            }
        }
        private global::System.String _TruckLicensPlate;
        partial void OnTruckLicensPlateChanging(global::System.String value);
        partial void OnTruckLicensPlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureTime
        {
            get
            {
                return _DepartureTime;
            }
            set
            {
                if (_DepartureTime != value)
                {
                    OnDepartureTimeChanging(value);
                    ReportPropertyChanging("DepartureTime");
                    _DepartureTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartureTime");
                    OnDepartureTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartureTime;
        partial void OnDepartureTimeChanging(global::System.DateTime value);
        partial void OnDepartureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassTruck
        {
            get
            {
                return _MassTruck;
            }
            set
            {
                if (_MassTruck != value)
                {
                    OnMassTruckChanging(value);
                    ReportPropertyChanging("MassTruck");
                    _MassTruck = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassTruck");
                    OnMassTruckChanged();
                }
            }
        }
        private global::System.Int32 _MassTruck;
        partial void OnMassTruckChanging(global::System.Int32 value);
        partial void OnMassTruckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionId
        {
            get
            {
                return _ActualPositionId;
            }
            set
            {
                if (_ActualPositionId != value)
                {
                    OnActualPositionIdChanging(value);
                    ReportPropertyChanging("ActualPositionId");
                    _ActualPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionId");
                    OnActualPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionId;
        partial void OnActualPositionIdChanging(global::System.Int32 value);
        partial void OnActualPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPosition
        {
            get
            {
                return _ActualPosition;
            }
            set
            {
                if (_ActualPosition != value)
                {
                    OnActualPositionChanging(value);
                    ReportPropertyChanging("ActualPosition");
                    _ActualPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPosition");
                    OnActualPositionChanged();
                }
            }
        }
        private global::System.String _ActualPosition;
        partial void OnActualPositionChanging(global::System.String value);
        partial void OnActualPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAId
        {
            get
            {
                return _ETAId;
            }
            set
            {
                if (_ETAId != value)
                {
                    OnETAIdChanging(value);
                    ReportPropertyChanging("ETAId");
                    _ETAId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAId");
                    OnETAIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAId;
        partial void OnETAIdChanging(global::System.Int32 value);
        partial void OnETAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETA
        {
            get
            {
                return _ETA;
            }
            set
            {
                if (_ETA != value)
                {
                    OnETAChanging(value);
                    ReportPropertyChanging("ETA");
                    _ETA = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETA");
                    OnETAChanged();
                }
            }
        }
        private global::System.String _ETA;
        partial void OnETAChanging(global::System.String value);
        partial void OnETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealArrivalTime
        {
            get
            {
                return _RealArrivalTime;
            }
            set
            {
                if (_RealArrivalTime != value)
                {
                    OnRealArrivalTimeChanging(value);
                    ReportPropertyChanging("RealArrivalTime");
                    _RealArrivalTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealArrivalTime");
                    OnRealArrivalTimeChanged();
                }
            }
        }
        private global::System.DateTime _RealArrivalTime;
        partial void OnRealArrivalTimeChanging(global::System.DateTime value);
        partial void OnRealArrivalTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeattachmentFinisherTime
        {
            get
            {
                return _DeattachmentFinisherTime;
            }
            set
            {
                if (_DeattachmentFinisherTime != value)
                {
                    OnDeattachmentFinisherTimeChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherTime");
                    _DeattachmentFinisherTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeattachmentFinisherTime");
                    OnDeattachmentFinisherTimeChanged();
                }
            }
        }
        private global::System.DateTime _DeattachmentFinisherTime;
        partial void OnDeattachmentFinisherTimeChanging(global::System.DateTime value);
        partial void OnDeattachmentFinisherTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeattachmentFinisherPosition
        {
            get
            {
                return _DeattachmentFinisherPosition;
            }
            set
            {
                if (_DeattachmentFinisherPosition != value)
                {
                    OnDeattachmentFinisherPositionChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherPosition");
                    _DeattachmentFinisherPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DeattachmentFinisherPosition");
                    OnDeattachmentFinisherPositionChanged();
                }
            }
        }
        private global::System.String _DeattachmentFinisherPosition;
        partial void OnDeattachmentFinisherPositionChanging(global::System.String value);
        partial void OnDeattachmentFinisherPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionReturnId
        {
            get
            {
                return _ActualPositionReturnId;
            }
            set
            {
                if (_ActualPositionReturnId != value)
                {
                    OnActualPositionReturnIdChanging(value);
                    ReportPropertyChanging("ActualPositionReturnId");
                    _ActualPositionReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionReturnId");
                    OnActualPositionReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionReturnId;
        partial void OnActualPositionReturnIdChanging(global::System.Int32 value);
        partial void OnActualPositionReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPositionReturn
        {
            get
            {
                return _ActualPositionReturn;
            }
            set
            {
                if (_ActualPositionReturn != value)
                {
                    OnActualPositionReturnChanging(value);
                    ReportPropertyChanging("ActualPositionReturn");
                    _ActualPositionReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPositionReturn");
                    OnActualPositionReturnChanged();
                }
            }
        }
        private global::System.String _ActualPositionReturn;
        partial void OnActualPositionReturnChanging(global::System.String value);
        partial void OnActualPositionReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAReturnId
        {
            get
            {
                return _ETAReturnId;
            }
            set
            {
                if (_ETAReturnId != value)
                {
                    OnETAReturnIdChanging(value);
                    ReportPropertyChanging("ETAReturnId");
                    _ETAReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAReturnId");
                    OnETAReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAReturnId;
        partial void OnETAReturnIdChanging(global::System.Int32 value);
        partial void OnETAReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETAReturn
        {
            get
            {
                return _ETAReturn;
            }
            set
            {
                if (_ETAReturn != value)
                {
                    OnETAReturnChanging(value);
                    ReportPropertyChanging("ETAReturn");
                    _ETAReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETAReturn");
                    OnETAReturnChanged();
                }
            }
        }
        private global::System.String _ETAReturn;
        partial void OnETAReturnChanging(global::System.String value);
        partial void OnETAReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArrivalAtPlant
        {
            get
            {
                return _ArrivalAtPlant;
            }
            set
            {
                if (_ArrivalAtPlant != value)
                {
                    OnArrivalAtPlantChanging(value);
                    ReportPropertyChanging("ArrivalAtPlant");
                    _ArrivalAtPlant = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArrivalAtPlant");
                    OnArrivalAtPlantChanged();
                }
            }
        }
        private global::System.DateTime _ArrivalAtPlant;
        partial void OnArrivalAtPlantChanging(global::System.DateTime value);
        partial void OnArrivalAtPlantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnforseenStop
        {
            get
            {
                return _UnforseenStop;
            }
            set
            {
                if (_UnforseenStop != value)
                {
                    OnUnforseenStopChanging(value);
                    ReportPropertyChanging("UnforseenStop");
                    _UnforseenStop = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnforseenStop");
                    OnUnforseenStopChanged();
                }
            }
        }
        private global::System.Int32 _UnforseenStop;
        partial void OnUnforseenStopChanging(global::System.Int32 value);
        partial void OnUnforseenStopChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="TransportTemp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransportTemp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransportTemp object.
        /// </summary>
        /// <param name="actualTempId">Initial value of the ActualTempId property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        public static TransportTemp CreateTransportTemp(global::System.Int32 actualTempId, global::System.Int32 temp)
        {
            TransportTemp transportTemp = new TransportTemp();
            transportTemp.ActualTempId = actualTempId;
            transportTemp.Temp = temp;
            return transportTemp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualTempId
        {
            get
            {
                return _ActualTempId;
            }
            set
            {
                if (_ActualTempId != value)
                {
                    OnActualTempIdChanging(value);
                    ReportPropertyChanging("ActualTempId");
                    _ActualTempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualTempId");
                    OnActualTempIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualTempId;
        partial void OnActualTempIdChanging(global::System.Int32 value);
        partial void OnActualTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                OnTempChanging(value);
                ReportPropertyChanging("Temp");
                _Temp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Temp");
                OnTempChanged();
            }
        }
        private global::System.Int32 _Temp;
        partial void OnTempChanging(global::System.Int32 value);
        partial void OnTempChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Transport_ibfk_7", "Transport")]
        public EntityCollection<Transport> Transports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_7", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("RoadItEntitiesModel.Transport_ibfk_7", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="UA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UA object.
        /// </summary>
        /// <param name="layerThickness">Initial value of the LayerThickness property.</param>
        /// <param name="surface">Initial value of the Surface property.</param>
        /// <param name="tonPerDay">Initial value of the TonPerDay property.</param>
        /// <param name="technicalDataSheet">Initial value of the TechnicalDataSheet property.</param>
        /// <param name="mixtureName">Initial value of the MixtureName property.</param>
        /// <param name="typeOfAggregates">Initial value of the TypeOfAggregates property.</param>
        /// <param name="mixtureChange">Initial value of the MixtureChange property.</param>
        /// <param name="centralId">Initial value of the CentralId property.</param>
        /// <param name="aggregationId">Initial value of the AggregationId property.</param>
        /// <param name="aggragationMaxTemp">Initial value of the AggragationMaxTemp property.</param>
        /// <param name="aggragationMinTemp">Initial value of the AggragationMinTemp property.</param>
        /// <param name="aggragationTimeStamp">Initial value of the AggragationTimeStamp property.</param>
        /// <param name="bitumenId">Initial value of the BitumenId property.</param>
        /// <param name="bitumenMaxTemp">Initial value of the BitumenMaxTemp property.</param>
        /// <param name="bitumenMinTemp">Initial value of the BitumenMinTemp property.</param>
        /// <param name="bitumenTimeStamp">Initial value of the BitumenTimeStamp property.</param>
        /// <param name="listRecupFillerId">Initial value of the ListRecupFillerId property.</param>
        /// <param name="fillerRecup">Initial value of the FillerRecup property.</param>
        /// <param name="mixingTemp">Initial value of the MixingTemp property.</param>
        /// <param name="mixingTime">Initial value of the MixingTime property.</param>
        /// <param name="realCompositionId">Initial value of the RealCompositionId property.</param>
        /// <param name="massOfAggregationBunker1">Initial value of the MassOfAggregationBunker1 property.</param>
        /// <param name="massOfAggregationBunker2">Initial value of the MassOfAggregationBunker2 property.</param>
        /// <param name="massOfAggregationBunker3">Initial value of the MassOfAggregationBunker3 property.</param>
        /// <param name="massOfAggregationBunker4">Initial value of the MassOfAggregationBunker4 property.</param>
        /// <param name="massOfAggregationBunker5">Initial value of the MassOfAggregationBunker5 property.</param>
        /// <param name="massOfAggregationBunker6">Initial value of the MassOfAggregationBunker6 property.</param>
        /// <param name="filler">Initial value of the Filler property.</param>
        /// <param name="bitumen">Initial value of the Bitumen property.</param>
        /// <param name="additivesKg">Initial value of the AdditivesKg property.</param>
        /// <param name="tempSilo">Initial value of the TempSilo property.</param>
        /// <param name="analysisComposition">Initial value of the AnalysisComposition property.</param>
        /// <param name="truckLicensPlate">Initial value of the TruckLicensPlate property.</param>
        /// <param name="departureTime">Initial value of the DepartureTime property.</param>
        /// <param name="massTruck">Initial value of the MassTruck property.</param>
        /// <param name="actualPositionId">Initial value of the ActualPositionId property.</param>
        /// <param name="actualPosition">Initial value of the ActualPosition property.</param>
        /// <param name="eTAId">Initial value of the ETAId property.</param>
        /// <param name="eTA">Initial value of the ETA property.</param>
        /// <param name="realArrivalTime">Initial value of the RealArrivalTime property.</param>
        /// <param name="deattachmentFinisherTime">Initial value of the DeattachmentFinisherTime property.</param>
        /// <param name="deattachmentFinisherPosition">Initial value of the DeattachmentFinisherPosition property.</param>
        /// <param name="actualPositionReturnId">Initial value of the ActualPositionReturnId property.</param>
        /// <param name="actualPositionReturn">Initial value of the ActualPositionReturn property.</param>
        /// <param name="eTAReturnId">Initial value of the ETAReturnId property.</param>
        /// <param name="eTAReturn">Initial value of the ETAReturn property.</param>
        /// <param name="arrivalAtPlant">Initial value of the ArrivalAtPlant property.</param>
        /// <param name="unforseenStop">Initial value of the UnforseenStop property.</param>
        /// <param name="finisherId">Initial value of the FinisherId property.</param>
        /// <param name="speedId">Initial value of the SpeedId property.</param>
        /// <param name="finisherSpeed">Initial value of the FinisherSpeed property.</param>
        /// <param name="angleId">Initial value of the AngleId property.</param>
        /// <param name="angleLeft">Initial value of the AngleLeft property.</param>
        /// <param name="angleRight">Initial value of the AngleRight property.</param>
        /// <param name="widthId">Initial value of the WidthId property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="thicknessLayerId">Initial value of the ThicknessLayerId property.</param>
        /// <param name="thicknessLeft">Initial value of the ThicknessLeft property.</param>
        /// <param name="thicknessMiddel">Initial value of the ThicknessMiddel property.</param>
        /// <param name="thicknessRight">Initial value of the ThicknessRight property.</param>
        /// <param name="tranverseSlope">Initial value of the TranverseSlope property.</param>
        /// <param name="locationAndTimeSpanId">Initial value of the LocationAndTimeSpanId property.</param>
        /// <param name="stopLocation">Initial value of the StopLocation property.</param>
        /// <param name="stopTime">Initial value of the StopTime property.</param>
        /// <param name="precipation">Initial value of the Precipation property.</param>
        /// <param name="tempId">Initial value of the TempId property.</param>
        /// <param name="temp">Initial value of the Temp property.</param>
        /// <param name="windId">Initial value of the WindId property.</param>
        /// <param name="windSpeed">Initial value of the WindSpeed property.</param>
        /// <param name="airHumidityId">Initial value of the AirHumidityId property.</param>
        /// <param name="airHumidity">Initial value of the AirHumidity property.</param>
        /// <param name="asphaltTempAfterFinisherIrScanOrThermo">Initial value of the AsphaltTempAfterFinisherIrScanOrThermo property.</param>
        /// <param name="qrCodeCompactor">Initial value of the QrCodeCompactor property.</param>
        /// <param name="numberOfRollerCompactorPassages">Initial value of the NumberOfRollerCompactorPassages property.</param>
        /// <param name="locationOfVibration">Initial value of the LocationOfVibration property.</param>
        /// <param name="colorCodeId">Initial value of the ColorCodeId property.</param>
        /// <param name="gPSFinisher">Initial value of the GPSFinisher property.</param>
        /// <param name="gPSCompactor">Initial value of the GPSCompactor property.</param>
        /// <param name="speedOfRollerCompactor">Initial value of the SpeedOfRollerCompactor property.</param>
        /// <param name="complianceMixture">Initial value of the ComplianceMixture property.</param>
        /// <param name="samplesCopro">Initial value of the SamplesCopro property.</param>
        /// <param name="densityOfField">Initial value of the DensityOfField property.</param>
        /// <param name="cores">Initial value of the Cores property.</param>
        /// <param name="lengthwiseFlatness">Initial value of the LengthwiseFlatness property.</param>
        /// <param name="skidresistance">Initial value of the Skidresistance property.</param>
        /// <param name="iri">Initial value of the Iri property.</param>
        /// <param name="extraTestsAskedBijClient">Initial value of the ExtraTestsAskedBijClient property.</param>
        public static UA CreateUA(global::System.Int32 layerThickness, global::System.Int32 surface, global::System.Int32 tonPerDay, global::System.String technicalDataSheet, global::System.String mixtureName, global::System.String typeOfAggregates, global::System.String mixtureChange, global::System.Int32 centralId, global::System.Int32 aggregationId, global::System.Int32 aggragationMaxTemp, global::System.Int32 aggragationMinTemp, global::System.DateTime aggragationTimeStamp, global::System.Int32 bitumenId, global::System.Int32 bitumenMaxTemp, global::System.Int32 bitumenMinTemp, global::System.DateTime bitumenTimeStamp, global::System.Int32 listRecupFillerId, global::System.Int32 fillerRecup, global::System.Int32 mixingTemp, global::System.TimeSpan mixingTime, global::System.Int32 realCompositionId, global::System.Int32 massOfAggregationBunker1, global::System.Int32 massOfAggregationBunker2, global::System.Int32 massOfAggregationBunker3, global::System.Int32 massOfAggregationBunker4, global::System.Int32 massOfAggregationBunker5, global::System.Int32 massOfAggregationBunker6, global::System.Int32 filler, global::System.Int32 bitumen, global::System.Int32 additivesKg, global::System.Int32 tempSilo, global::System.String analysisComposition, global::System.String truckLicensPlate, global::System.DateTime departureTime, global::System.Int32 massTruck, global::System.Int32 actualPositionId, global::System.String actualPosition, global::System.Int32 eTAId, global::System.String eTA, global::System.DateTime realArrivalTime, global::System.DateTime deattachmentFinisherTime, global::System.String deattachmentFinisherPosition, global::System.Int32 actualPositionReturnId, global::System.String actualPositionReturn, global::System.Int32 eTAReturnId, global::System.String eTAReturn, global::System.DateTime arrivalAtPlant, global::System.Int32 unforseenStop, global::System.Int32 finisherId, global::System.Int32 speedId, global::System.Int32 finisherSpeed, global::System.Int32 angleId, global::System.Int32 angleLeft, global::System.Int32 angleRight, global::System.Int32 widthId, global::System.Int32 width, global::System.Int32 thicknessLayerId, global::System.Int32 thicknessLeft, global::System.Int32 thicknessMiddel, global::System.Int32 thicknessRight, global::System.Int32 tranverseSlope, global::System.Int32 locationAndTimeSpanId, global::System.String stopLocation, global::System.TimeSpan stopTime, global::System.String precipation, global::System.Int32 tempId, global::System.Int32 temp, global::System.Int32 windId, global::System.Int32 windSpeed, global::System.Int32 airHumidityId, global::System.Int32 airHumidity, global::System.String asphaltTempAfterFinisherIrScanOrThermo, global::System.String qrCodeCompactor, global::System.Int32 numberOfRollerCompactorPassages, global::System.String locationOfVibration, global::System.Int32 colorCodeId, global::System.String gPSFinisher, global::System.String gPSCompactor, global::System.Int32 speedOfRollerCompactor, global::System.String complianceMixture, global::System.String samplesCopro, global::System.String densityOfField, global::System.String cores, global::System.String lengthwiseFlatness, global::System.String skidresistance, global::System.String iri, global::System.String extraTestsAskedBijClient)
        {
            UA uA = new UA();
            uA.LayerThickness = layerThickness;
            uA.Surface = surface;
            uA.TonPerDay = tonPerDay;
            uA.TechnicalDataSheet = technicalDataSheet;
            uA.MixtureName = mixtureName;
            uA.TypeOfAggregates = typeOfAggregates;
            uA.MixtureChange = mixtureChange;
            uA.CentralId = centralId;
            uA.AggregationId = aggregationId;
            uA.AggragationMaxTemp = aggragationMaxTemp;
            uA.AggragationMinTemp = aggragationMinTemp;
            uA.AggragationTimeStamp = aggragationTimeStamp;
            uA.BitumenId = bitumenId;
            uA.BitumenMaxTemp = bitumenMaxTemp;
            uA.BitumenMinTemp = bitumenMinTemp;
            uA.BitumenTimeStamp = bitumenTimeStamp;
            uA.ListRecupFillerId = listRecupFillerId;
            uA.FillerRecup = fillerRecup;
            uA.MixingTemp = mixingTemp;
            uA.MixingTime = mixingTime;
            uA.RealCompositionId = realCompositionId;
            uA.MassOfAggregationBunker1 = massOfAggregationBunker1;
            uA.MassOfAggregationBunker2 = massOfAggregationBunker2;
            uA.MassOfAggregationBunker3 = massOfAggregationBunker3;
            uA.MassOfAggregationBunker4 = massOfAggregationBunker4;
            uA.MassOfAggregationBunker5 = massOfAggregationBunker5;
            uA.MassOfAggregationBunker6 = massOfAggregationBunker6;
            uA.Filler = filler;
            uA.Bitumen = bitumen;
            uA.AdditivesKg = additivesKg;
            uA.TempSilo = tempSilo;
            uA.AnalysisComposition = analysisComposition;
            uA.TruckLicensPlate = truckLicensPlate;
            uA.DepartureTime = departureTime;
            uA.MassTruck = massTruck;
            uA.ActualPositionId = actualPositionId;
            uA.ActualPosition = actualPosition;
            uA.ETAId = eTAId;
            uA.ETA = eTA;
            uA.RealArrivalTime = realArrivalTime;
            uA.DeattachmentFinisherTime = deattachmentFinisherTime;
            uA.DeattachmentFinisherPosition = deattachmentFinisherPosition;
            uA.ActualPositionReturnId = actualPositionReturnId;
            uA.ActualPositionReturn = actualPositionReturn;
            uA.ETAReturnId = eTAReturnId;
            uA.ETAReturn = eTAReturn;
            uA.ArrivalAtPlant = arrivalAtPlant;
            uA.UnforseenStop = unforseenStop;
            uA.FinisherId = finisherId;
            uA.SpeedId = speedId;
            uA.FinisherSpeed = finisherSpeed;
            uA.AngleId = angleId;
            uA.AngleLeft = angleLeft;
            uA.AngleRight = angleRight;
            uA.WidthId = widthId;
            uA.Width = width;
            uA.ThicknessLayerId = thicknessLayerId;
            uA.ThicknessLeft = thicknessLeft;
            uA.ThicknessMiddel = thicknessMiddel;
            uA.ThicknessRight = thicknessRight;
            uA.TranverseSlope = tranverseSlope;
            uA.LocationAndTimeSpanId = locationAndTimeSpanId;
            uA.StopLocation = stopLocation;
            uA.StopTime = stopTime;
            uA.Precipation = precipation;
            uA.TempId = tempId;
            uA.Temp = temp;
            uA.WindId = windId;
            uA.WindSpeed = windSpeed;
            uA.AirHumidityId = airHumidityId;
            uA.AirHumidity = airHumidity;
            uA.AsphaltTempAfterFinisherIrScanOrThermo = asphaltTempAfterFinisherIrScanOrThermo;
            uA.QrCodeCompactor = qrCodeCompactor;
            uA.NumberOfRollerCompactorPassages = numberOfRollerCompactorPassages;
            uA.LocationOfVibration = locationOfVibration;
            uA.ColorCodeId = colorCodeId;
            uA.GPSFinisher = gPSFinisher;
            uA.GPSCompactor = gPSCompactor;
            uA.SpeedOfRollerCompactor = speedOfRollerCompactor;
            uA.ComplianceMixture = complianceMixture;
            uA.SamplesCopro = samplesCopro;
            uA.DensityOfField = densityOfField;
            uA.Cores = cores;
            uA.LengthwiseFlatness = lengthwiseFlatness;
            uA.Skidresistance = skidresistance;
            uA.Iri = iri;
            uA.ExtraTestsAskedBijClient = extraTestsAskedBijClient;
            return uA;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LayerThickness
        {
            get
            {
                return _LayerThickness;
            }
            set
            {
                if (_LayerThickness != value)
                {
                    OnLayerThicknessChanging(value);
                    ReportPropertyChanging("LayerThickness");
                    _LayerThickness = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LayerThickness");
                    OnLayerThicknessChanged();
                }
            }
        }
        private global::System.Int32 _LayerThickness;
        partial void OnLayerThicknessChanging(global::System.Int32 value);
        partial void OnLayerThicknessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Surface
        {
            get
            {
                return _Surface;
            }
            set
            {
                if (_Surface != value)
                {
                    OnSurfaceChanging(value);
                    ReportPropertyChanging("Surface");
                    _Surface = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Surface");
                    OnSurfaceChanged();
                }
            }
        }
        private global::System.Int32 _Surface;
        partial void OnSurfaceChanging(global::System.Int32 value);
        partial void OnSurfaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TonPerDay
        {
            get
            {
                return _TonPerDay;
            }
            set
            {
                if (_TonPerDay != value)
                {
                    OnTonPerDayChanging(value);
                    ReportPropertyChanging("TonPerDay");
                    _TonPerDay = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TonPerDay");
                    OnTonPerDayChanged();
                }
            }
        }
        private global::System.Int32 _TonPerDay;
        partial void OnTonPerDayChanging(global::System.Int32 value);
        partial void OnTonPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TechnicalDataSheet
        {
            get
            {
                return _TechnicalDataSheet;
            }
            set
            {
                if (_TechnicalDataSheet != value)
                {
                    OnTechnicalDataSheetChanging(value);
                    ReportPropertyChanging("TechnicalDataSheet");
                    _TechnicalDataSheet = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TechnicalDataSheet");
                    OnTechnicalDataSheetChanged();
                }
            }
        }
        private global::System.String _TechnicalDataSheet;
        partial void OnTechnicalDataSheetChanging(global::System.String value);
        partial void OnTechnicalDataSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureName
        {
            get
            {
                return _MixtureName;
            }
            set
            {
                if (_MixtureName != value)
                {
                    OnMixtureNameChanging(value);
                    ReportPropertyChanging("MixtureName");
                    _MixtureName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureName");
                    OnMixtureNameChanged();
                }
            }
        }
        private global::System.String _MixtureName;
        partial void OnMixtureNameChanging(global::System.String value);
        partial void OnMixtureNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeOfAggregates
        {
            get
            {
                return _TypeOfAggregates;
            }
            set
            {
                if (_TypeOfAggregates != value)
                {
                    OnTypeOfAggregatesChanging(value);
                    ReportPropertyChanging("TypeOfAggregates");
                    _TypeOfAggregates = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeOfAggregates");
                    OnTypeOfAggregatesChanged();
                }
            }
        }
        private global::System.String _TypeOfAggregates;
        partial void OnTypeOfAggregatesChanging(global::System.String value);
        partial void OnTypeOfAggregatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MixtureChange
        {
            get
            {
                return _MixtureChange;
            }
            set
            {
                if (_MixtureChange != value)
                {
                    OnMixtureChangeChanging(value);
                    ReportPropertyChanging("MixtureChange");
                    _MixtureChange = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MixtureChange");
                    OnMixtureChangeChanged();
                }
            }
        }
        private global::System.String _MixtureChange;
        partial void OnMixtureChangeChanging(global::System.String value);
        partial void OnMixtureChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CentralId
        {
            get
            {
                return _CentralId;
            }
            set
            {
                if (_CentralId != value)
                {
                    OnCentralIdChanging(value);
                    ReportPropertyChanging("CentralId");
                    _CentralId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CentralId");
                    OnCentralIdChanged();
                }
            }
        }
        private global::System.Int32 _CentralId;
        partial void OnCentralIdChanging(global::System.Int32 value);
        partial void OnCentralIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggregationId
        {
            get
            {
                return _AggregationId;
            }
            set
            {
                if (_AggregationId != value)
                {
                    OnAggregationIdChanging(value);
                    ReportPropertyChanging("AggregationId");
                    _AggregationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggregationId");
                    OnAggregationIdChanged();
                }
            }
        }
        private global::System.Int32 _AggregationId;
        partial void OnAggregationIdChanging(global::System.Int32 value);
        partial void OnAggregationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMaxTemp
        {
            get
            {
                return _AggragationMaxTemp;
            }
            set
            {
                if (_AggragationMaxTemp != value)
                {
                    OnAggragationMaxTempChanging(value);
                    ReportPropertyChanging("AggragationMaxTemp");
                    _AggragationMaxTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationMaxTemp");
                    OnAggragationMaxTempChanged();
                }
            }
        }
        private global::System.Int32 _AggragationMaxTemp;
        partial void OnAggragationMaxTempChanging(global::System.Int32 value);
        partial void OnAggragationMaxTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AggragationMinTemp
        {
            get
            {
                return _AggragationMinTemp;
            }
            set
            {
                if (_AggragationMinTemp != value)
                {
                    OnAggragationMinTempChanging(value);
                    ReportPropertyChanging("AggragationMinTemp");
                    _AggragationMinTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationMinTemp");
                    OnAggragationMinTempChanged();
                }
            }
        }
        private global::System.Int32 _AggragationMinTemp;
        partial void OnAggragationMinTempChanging(global::System.Int32 value);
        partial void OnAggragationMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AggragationTimeStamp
        {
            get
            {
                return _AggragationTimeStamp;
            }
            set
            {
                if (_AggragationTimeStamp != value)
                {
                    OnAggragationTimeStampChanging(value);
                    ReportPropertyChanging("AggragationTimeStamp");
                    _AggragationTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AggragationTimeStamp");
                    OnAggragationTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _AggragationTimeStamp;
        partial void OnAggragationTimeStampChanging(global::System.DateTime value);
        partial void OnAggragationTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenId
        {
            get
            {
                return _BitumenId;
            }
            set
            {
                if (_BitumenId != value)
                {
                    OnBitumenIdChanging(value);
                    ReportPropertyChanging("BitumenId");
                    _BitumenId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenId");
                    OnBitumenIdChanged();
                }
            }
        }
        private global::System.Int32 _BitumenId;
        partial void OnBitumenIdChanging(global::System.Int32 value);
        partial void OnBitumenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMaxTemp
        {
            get
            {
                return _BitumenMaxTemp;
            }
            set
            {
                if (_BitumenMaxTemp != value)
                {
                    OnBitumenMaxTempChanging(value);
                    ReportPropertyChanging("BitumenMaxTemp");
                    _BitumenMaxTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenMaxTemp");
                    OnBitumenMaxTempChanged();
                }
            }
        }
        private global::System.Int32 _BitumenMaxTemp;
        partial void OnBitumenMaxTempChanging(global::System.Int32 value);
        partial void OnBitumenMaxTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BitumenMinTemp
        {
            get
            {
                return _BitumenMinTemp;
            }
            set
            {
                if (_BitumenMinTemp != value)
                {
                    OnBitumenMinTempChanging(value);
                    ReportPropertyChanging("BitumenMinTemp");
                    _BitumenMinTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenMinTemp");
                    OnBitumenMinTempChanged();
                }
            }
        }
        private global::System.Int32 _BitumenMinTemp;
        partial void OnBitumenMinTempChanging(global::System.Int32 value);
        partial void OnBitumenMinTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BitumenTimeStamp
        {
            get
            {
                return _BitumenTimeStamp;
            }
            set
            {
                if (_BitumenTimeStamp != value)
                {
                    OnBitumenTimeStampChanging(value);
                    ReportPropertyChanging("BitumenTimeStamp");
                    _BitumenTimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BitumenTimeStamp");
                    OnBitumenTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _BitumenTimeStamp;
        partial void OnBitumenTimeStampChanging(global::System.DateTime value);
        partial void OnBitumenTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListRecupFillerId
        {
            get
            {
                return _ListRecupFillerId;
            }
            set
            {
                if (_ListRecupFillerId != value)
                {
                    OnListRecupFillerIdChanging(value);
                    ReportPropertyChanging("ListRecupFillerId");
                    _ListRecupFillerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListRecupFillerId");
                    OnListRecupFillerIdChanged();
                }
            }
        }
        private global::System.Int32 _ListRecupFillerId;
        partial void OnListRecupFillerIdChanging(global::System.Int32 value);
        partial void OnListRecupFillerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FillerRecup
        {
            get
            {
                return _FillerRecup;
            }
            set
            {
                if (_FillerRecup != value)
                {
                    OnFillerRecupChanging(value);
                    ReportPropertyChanging("FillerRecup");
                    _FillerRecup = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FillerRecup");
                    OnFillerRecupChanged();
                }
            }
        }
        private global::System.Int32 _FillerRecup;
        partial void OnFillerRecupChanging(global::System.Int32 value);
        partial void OnFillerRecupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MixingTemp
        {
            get
            {
                return _MixingTemp;
            }
            set
            {
                if (_MixingTemp != value)
                {
                    OnMixingTempChanging(value);
                    ReportPropertyChanging("MixingTemp");
                    _MixingTemp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MixingTemp");
                    OnMixingTempChanged();
                }
            }
        }
        private global::System.Int32 _MixingTemp;
        partial void OnMixingTempChanging(global::System.Int32 value);
        partial void OnMixingTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan MixingTime
        {
            get
            {
                return _MixingTime;
            }
            set
            {
                if (_MixingTime != value)
                {
                    OnMixingTimeChanging(value);
                    ReportPropertyChanging("MixingTime");
                    _MixingTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MixingTime");
                    OnMixingTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _MixingTime;
        partial void OnMixingTimeChanging(global::System.TimeSpan value);
        partial void OnMixingTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RealCompositionId
        {
            get
            {
                return _RealCompositionId;
            }
            set
            {
                if (_RealCompositionId != value)
                {
                    OnRealCompositionIdChanging(value);
                    ReportPropertyChanging("RealCompositionId");
                    _RealCompositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealCompositionId");
                    OnRealCompositionIdChanged();
                }
            }
        }
        private global::System.Int32 _RealCompositionId;
        partial void OnRealCompositionIdChanging(global::System.Int32 value);
        partial void OnRealCompositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker1
        {
            get
            {
                return _MassOfAggregationBunker1;
            }
            set
            {
                if (_MassOfAggregationBunker1 != value)
                {
                    OnMassOfAggregationBunker1Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker1");
                    _MassOfAggregationBunker1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker1");
                    OnMassOfAggregationBunker1Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker1;
        partial void OnMassOfAggregationBunker1Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker2
        {
            get
            {
                return _MassOfAggregationBunker2;
            }
            set
            {
                if (_MassOfAggregationBunker2 != value)
                {
                    OnMassOfAggregationBunker2Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker2");
                    _MassOfAggregationBunker2 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker2");
                    OnMassOfAggregationBunker2Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker2;
        partial void OnMassOfAggregationBunker2Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker3
        {
            get
            {
                return _MassOfAggregationBunker3;
            }
            set
            {
                if (_MassOfAggregationBunker3 != value)
                {
                    OnMassOfAggregationBunker3Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker3");
                    _MassOfAggregationBunker3 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker3");
                    OnMassOfAggregationBunker3Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker3;
        partial void OnMassOfAggregationBunker3Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker4
        {
            get
            {
                return _MassOfAggregationBunker4;
            }
            set
            {
                if (_MassOfAggregationBunker4 != value)
                {
                    OnMassOfAggregationBunker4Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker4");
                    _MassOfAggregationBunker4 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker4");
                    OnMassOfAggregationBunker4Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker4;
        partial void OnMassOfAggregationBunker4Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker5
        {
            get
            {
                return _MassOfAggregationBunker5;
            }
            set
            {
                if (_MassOfAggregationBunker5 != value)
                {
                    OnMassOfAggregationBunker5Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker5");
                    _MassOfAggregationBunker5 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker5");
                    OnMassOfAggregationBunker5Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker5;
        partial void OnMassOfAggregationBunker5Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassOfAggregationBunker6
        {
            get
            {
                return _MassOfAggregationBunker6;
            }
            set
            {
                if (_MassOfAggregationBunker6 != value)
                {
                    OnMassOfAggregationBunker6Changing(value);
                    ReportPropertyChanging("MassOfAggregationBunker6");
                    _MassOfAggregationBunker6 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassOfAggregationBunker6");
                    OnMassOfAggregationBunker6Changed();
                }
            }
        }
        private global::System.Int32 _MassOfAggregationBunker6;
        partial void OnMassOfAggregationBunker6Changing(global::System.Int32 value);
        partial void OnMassOfAggregationBunker6Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Filler
        {
            get
            {
                return _Filler;
            }
            set
            {
                if (_Filler != value)
                {
                    OnFillerChanging(value);
                    ReportPropertyChanging("Filler");
                    _Filler = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Filler");
                    OnFillerChanged();
                }
            }
        }
        private global::System.Int32 _Filler;
        partial void OnFillerChanging(global::System.Int32 value);
        partial void OnFillerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bitumen
        {
            get
            {
                return _Bitumen;
            }
            set
            {
                if (_Bitumen != value)
                {
                    OnBitumenChanging(value);
                    ReportPropertyChanging("Bitumen");
                    _Bitumen = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Bitumen");
                    OnBitumenChanged();
                }
            }
        }
        private global::System.Int32 _Bitumen;
        partial void OnBitumenChanging(global::System.Int32 value);
        partial void OnBitumenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdditivesKg
        {
            get
            {
                return _AdditivesKg;
            }
            set
            {
                if (_AdditivesKg != value)
                {
                    OnAdditivesKgChanging(value);
                    ReportPropertyChanging("AdditivesKg");
                    _AdditivesKg = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdditivesKg");
                    OnAdditivesKgChanged();
                }
            }
        }
        private global::System.Int32 _AdditivesKg;
        partial void OnAdditivesKgChanging(global::System.Int32 value);
        partial void OnAdditivesKgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempSilo
        {
            get
            {
                return _TempSilo;
            }
            set
            {
                if (_TempSilo != value)
                {
                    OnTempSiloChanging(value);
                    ReportPropertyChanging("TempSilo");
                    _TempSilo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TempSilo");
                    OnTempSiloChanged();
                }
            }
        }
        private global::System.Int32 _TempSilo;
        partial void OnTempSiloChanging(global::System.Int32 value);
        partial void OnTempSiloChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnalysisComposition
        {
            get
            {
                return _AnalysisComposition;
            }
            set
            {
                if (_AnalysisComposition != value)
                {
                    OnAnalysisCompositionChanging(value);
                    ReportPropertyChanging("AnalysisComposition");
                    _AnalysisComposition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AnalysisComposition");
                    OnAnalysisCompositionChanged();
                }
            }
        }
        private global::System.String _AnalysisComposition;
        partial void OnAnalysisCompositionChanging(global::System.String value);
        partial void OnAnalysisCompositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TruckLicensPlate
        {
            get
            {
                return _TruckLicensPlate;
            }
            set
            {
                if (_TruckLicensPlate != value)
                {
                    OnTruckLicensPlateChanging(value);
                    ReportPropertyChanging("TruckLicensPlate");
                    _TruckLicensPlate = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TruckLicensPlate");
                    OnTruckLicensPlateChanged();
                }
            }
        }
        private global::System.String _TruckLicensPlate;
        partial void OnTruckLicensPlateChanging(global::System.String value);
        partial void OnTruckLicensPlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DepartureTime
        {
            get
            {
                return _DepartureTime;
            }
            set
            {
                if (_DepartureTime != value)
                {
                    OnDepartureTimeChanging(value);
                    ReportPropertyChanging("DepartureTime");
                    _DepartureTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartureTime");
                    OnDepartureTimeChanged();
                }
            }
        }
        private global::System.DateTime _DepartureTime;
        partial void OnDepartureTimeChanging(global::System.DateTime value);
        partial void OnDepartureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MassTruck
        {
            get
            {
                return _MassTruck;
            }
            set
            {
                if (_MassTruck != value)
                {
                    OnMassTruckChanging(value);
                    ReportPropertyChanging("MassTruck");
                    _MassTruck = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MassTruck");
                    OnMassTruckChanged();
                }
            }
        }
        private global::System.Int32 _MassTruck;
        partial void OnMassTruckChanging(global::System.Int32 value);
        partial void OnMassTruckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionId
        {
            get
            {
                return _ActualPositionId;
            }
            set
            {
                if (_ActualPositionId != value)
                {
                    OnActualPositionIdChanging(value);
                    ReportPropertyChanging("ActualPositionId");
                    _ActualPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionId");
                    OnActualPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionId;
        partial void OnActualPositionIdChanging(global::System.Int32 value);
        partial void OnActualPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPosition
        {
            get
            {
                return _ActualPosition;
            }
            set
            {
                if (_ActualPosition != value)
                {
                    OnActualPositionChanging(value);
                    ReportPropertyChanging("ActualPosition");
                    _ActualPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPosition");
                    OnActualPositionChanged();
                }
            }
        }
        private global::System.String _ActualPosition;
        partial void OnActualPositionChanging(global::System.String value);
        partial void OnActualPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAId
        {
            get
            {
                return _ETAId;
            }
            set
            {
                if (_ETAId != value)
                {
                    OnETAIdChanging(value);
                    ReportPropertyChanging("ETAId");
                    _ETAId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAId");
                    OnETAIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAId;
        partial void OnETAIdChanging(global::System.Int32 value);
        partial void OnETAIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETA
        {
            get
            {
                return _ETA;
            }
            set
            {
                if (_ETA != value)
                {
                    OnETAChanging(value);
                    ReportPropertyChanging("ETA");
                    _ETA = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETA");
                    OnETAChanged();
                }
            }
        }
        private global::System.String _ETA;
        partial void OnETAChanging(global::System.String value);
        partial void OnETAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RealArrivalTime
        {
            get
            {
                return _RealArrivalTime;
            }
            set
            {
                if (_RealArrivalTime != value)
                {
                    OnRealArrivalTimeChanging(value);
                    ReportPropertyChanging("RealArrivalTime");
                    _RealArrivalTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealArrivalTime");
                    OnRealArrivalTimeChanged();
                }
            }
        }
        private global::System.DateTime _RealArrivalTime;
        partial void OnRealArrivalTimeChanging(global::System.DateTime value);
        partial void OnRealArrivalTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeattachmentFinisherTime
        {
            get
            {
                return _DeattachmentFinisherTime;
            }
            set
            {
                if (_DeattachmentFinisherTime != value)
                {
                    OnDeattachmentFinisherTimeChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherTime");
                    _DeattachmentFinisherTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeattachmentFinisherTime");
                    OnDeattachmentFinisherTimeChanged();
                }
            }
        }
        private global::System.DateTime _DeattachmentFinisherTime;
        partial void OnDeattachmentFinisherTimeChanging(global::System.DateTime value);
        partial void OnDeattachmentFinisherTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeattachmentFinisherPosition
        {
            get
            {
                return _DeattachmentFinisherPosition;
            }
            set
            {
                if (_DeattachmentFinisherPosition != value)
                {
                    OnDeattachmentFinisherPositionChanging(value);
                    ReportPropertyChanging("DeattachmentFinisherPosition");
                    _DeattachmentFinisherPosition = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DeattachmentFinisherPosition");
                    OnDeattachmentFinisherPositionChanged();
                }
            }
        }
        private global::System.String _DeattachmentFinisherPosition;
        partial void OnDeattachmentFinisherPositionChanging(global::System.String value);
        partial void OnDeattachmentFinisherPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActualPositionReturnId
        {
            get
            {
                return _ActualPositionReturnId;
            }
            set
            {
                if (_ActualPositionReturnId != value)
                {
                    OnActualPositionReturnIdChanging(value);
                    ReportPropertyChanging("ActualPositionReturnId");
                    _ActualPositionReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActualPositionReturnId");
                    OnActualPositionReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ActualPositionReturnId;
        partial void OnActualPositionReturnIdChanging(global::System.Int32 value);
        partial void OnActualPositionReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActualPositionReturn
        {
            get
            {
                return _ActualPositionReturn;
            }
            set
            {
                if (_ActualPositionReturn != value)
                {
                    OnActualPositionReturnChanging(value);
                    ReportPropertyChanging("ActualPositionReturn");
                    _ActualPositionReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ActualPositionReturn");
                    OnActualPositionReturnChanged();
                }
            }
        }
        private global::System.String _ActualPositionReturn;
        partial void OnActualPositionReturnChanging(global::System.String value);
        partial void OnActualPositionReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETAReturnId
        {
            get
            {
                return _ETAReturnId;
            }
            set
            {
                if (_ETAReturnId != value)
                {
                    OnETAReturnIdChanging(value);
                    ReportPropertyChanging("ETAReturnId");
                    _ETAReturnId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETAReturnId");
                    OnETAReturnIdChanged();
                }
            }
        }
        private global::System.Int32 _ETAReturnId;
        partial void OnETAReturnIdChanging(global::System.Int32 value);
        partial void OnETAReturnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ETAReturn
        {
            get
            {
                return _ETAReturn;
            }
            set
            {
                if (_ETAReturn != value)
                {
                    OnETAReturnChanging(value);
                    ReportPropertyChanging("ETAReturn");
                    _ETAReturn = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ETAReturn");
                    OnETAReturnChanged();
                }
            }
        }
        private global::System.String _ETAReturn;
        partial void OnETAReturnChanging(global::System.String value);
        partial void OnETAReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArrivalAtPlant
        {
            get
            {
                return _ArrivalAtPlant;
            }
            set
            {
                if (_ArrivalAtPlant != value)
                {
                    OnArrivalAtPlantChanging(value);
                    ReportPropertyChanging("ArrivalAtPlant");
                    _ArrivalAtPlant = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ArrivalAtPlant");
                    OnArrivalAtPlantChanged();
                }
            }
        }
        private global::System.DateTime _ArrivalAtPlant;
        partial void OnArrivalAtPlantChanging(global::System.DateTime value);
        partial void OnArrivalAtPlantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnforseenStop
        {
            get
            {
                return _UnforseenStop;
            }
            set
            {
                if (_UnforseenStop != value)
                {
                    OnUnforseenStopChanging(value);
                    ReportPropertyChanging("UnforseenStop");
                    _UnforseenStop = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnforseenStop");
                    OnUnforseenStopChanged();
                }
            }
        }
        private global::System.Int32 _UnforseenStop;
        partial void OnUnforseenStopChanging(global::System.Int32 value);
        partial void OnUnforseenStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinisherId
        {
            get
            {
                return _FinisherId;
            }
            set
            {
                if (_FinisherId != value)
                {
                    OnFinisherIdChanging(value);
                    ReportPropertyChanging("FinisherId");
                    _FinisherId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinisherId");
                    OnFinisherIdChanged();
                }
            }
        }
        private global::System.Int32 _FinisherId;
        partial void OnFinisherIdChanging(global::System.Int32 value);
        partial void OnFinisherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedId
        {
            get
            {
                return _SpeedId;
            }
            set
            {
                if (_SpeedId != value)
                {
                    OnSpeedIdChanging(value);
                    ReportPropertyChanging("SpeedId");
                    _SpeedId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpeedId");
                    OnSpeedIdChanged();
                }
            }
        }
        private global::System.Int32 _SpeedId;
        partial void OnSpeedIdChanging(global::System.Int32 value);
        partial void OnSpeedIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FinisherSpeed
        {
            get
            {
                return _FinisherSpeed;
            }
            set
            {
                if (_FinisherSpeed != value)
                {
                    OnFinisherSpeedChanging(value);
                    ReportPropertyChanging("FinisherSpeed");
                    _FinisherSpeed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FinisherSpeed");
                    OnFinisherSpeedChanged();
                }
            }
        }
        private global::System.Int32 _FinisherSpeed;
        partial void OnFinisherSpeedChanging(global::System.Int32 value);
        partial void OnFinisherSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleId
        {
            get
            {
                return _AngleId;
            }
            set
            {
                if (_AngleId != value)
                {
                    OnAngleIdChanging(value);
                    ReportPropertyChanging("AngleId");
                    _AngleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleId");
                    OnAngleIdChanged();
                }
            }
        }
        private global::System.Int32 _AngleId;
        partial void OnAngleIdChanging(global::System.Int32 value);
        partial void OnAngleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleLeft
        {
            get
            {
                return _AngleLeft;
            }
            set
            {
                if (_AngleLeft != value)
                {
                    OnAngleLeftChanging(value);
                    ReportPropertyChanging("AngleLeft");
                    _AngleLeft = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleLeft");
                    OnAngleLeftChanged();
                }
            }
        }
        private global::System.Int32 _AngleLeft;
        partial void OnAngleLeftChanging(global::System.Int32 value);
        partial void OnAngleLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AngleRight
        {
            get
            {
                return _AngleRight;
            }
            set
            {
                if (_AngleRight != value)
                {
                    OnAngleRightChanging(value);
                    ReportPropertyChanging("AngleRight");
                    _AngleRight = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AngleRight");
                    OnAngleRightChanged();
                }
            }
        }
        private global::System.Int32 _AngleRight;
        partial void OnAngleRightChanging(global::System.Int32 value);
        partial void OnAngleRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WidthId
        {
            get
            {
                return _WidthId;
            }
            set
            {
                if (_WidthId != value)
                {
                    OnWidthIdChanging(value);
                    ReportPropertyChanging("WidthId");
                    _WidthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WidthId");
                    OnWidthIdChanged();
                }
            }
        }
        private global::System.Int32 _WidthId;
        partial void OnWidthIdChanging(global::System.Int32 value);
        partial void OnWidthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                if (_Width != value)
                {
                    OnWidthChanging(value);
                    ReportPropertyChanging("Width");
                    _Width = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Width");
                    OnWidthChanged();
                }
            }
        }
        private global::System.Int32 _Width;
        partial void OnWidthChanging(global::System.Int32 value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessLayerId
        {
            get
            {
                return _ThicknessLayerId;
            }
            set
            {
                if (_ThicknessLayerId != value)
                {
                    OnThicknessLayerIdChanging(value);
                    ReportPropertyChanging("ThicknessLayerId");
                    _ThicknessLayerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessLayerId");
                    OnThicknessLayerIdChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessLayerId;
        partial void OnThicknessLayerIdChanging(global::System.Int32 value);
        partial void OnThicknessLayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessLeft
        {
            get
            {
                return _ThicknessLeft;
            }
            set
            {
                if (_ThicknessLeft != value)
                {
                    OnThicknessLeftChanging(value);
                    ReportPropertyChanging("ThicknessLeft");
                    _ThicknessLeft = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessLeft");
                    OnThicknessLeftChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessLeft;
        partial void OnThicknessLeftChanging(global::System.Int32 value);
        partial void OnThicknessLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessMiddel
        {
            get
            {
                return _ThicknessMiddel;
            }
            set
            {
                if (_ThicknessMiddel != value)
                {
                    OnThicknessMiddelChanging(value);
                    ReportPropertyChanging("ThicknessMiddel");
                    _ThicknessMiddel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessMiddel");
                    OnThicknessMiddelChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessMiddel;
        partial void OnThicknessMiddelChanging(global::System.Int32 value);
        partial void OnThicknessMiddelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThicknessRight
        {
            get
            {
                return _ThicknessRight;
            }
            set
            {
                if (_ThicknessRight != value)
                {
                    OnThicknessRightChanging(value);
                    ReportPropertyChanging("ThicknessRight");
                    _ThicknessRight = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ThicknessRight");
                    OnThicknessRightChanged();
                }
            }
        }
        private global::System.Int32 _ThicknessRight;
        partial void OnThicknessRightChanging(global::System.Int32 value);
        partial void OnThicknessRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TranverseSlope
        {
            get
            {
                return _TranverseSlope;
            }
            set
            {
                if (_TranverseSlope != value)
                {
                    OnTranverseSlopeChanging(value);
                    ReportPropertyChanging("TranverseSlope");
                    _TranverseSlope = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TranverseSlope");
                    OnTranverseSlopeChanged();
                }
            }
        }
        private global::System.Int32 _TranverseSlope;
        partial void OnTranverseSlopeChanging(global::System.Int32 value);
        partial void OnTranverseSlopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationAndTimeSpanId
        {
            get
            {
                return _LocationAndTimeSpanId;
            }
            set
            {
                if (_LocationAndTimeSpanId != value)
                {
                    OnLocationAndTimeSpanIdChanging(value);
                    ReportPropertyChanging("LocationAndTimeSpanId");
                    _LocationAndTimeSpanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationAndTimeSpanId");
                    OnLocationAndTimeSpanIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationAndTimeSpanId;
        partial void OnLocationAndTimeSpanIdChanging(global::System.Int32 value);
        partial void OnLocationAndTimeSpanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StopLocation
        {
            get
            {
                return _StopLocation;
            }
            set
            {
                if (_StopLocation != value)
                {
                    OnStopLocationChanging(value);
                    ReportPropertyChanging("StopLocation");
                    _StopLocation = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("StopLocation");
                    OnStopLocationChanged();
                }
            }
        }
        private global::System.String _StopLocation;
        partial void OnStopLocationChanging(global::System.String value);
        partial void OnStopLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StopTime
        {
            get
            {
                return _StopTime;
            }
            set
            {
                if (_StopTime != value)
                {
                    OnStopTimeChanging(value);
                    ReportPropertyChanging("StopTime");
                    _StopTime = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StopTime");
                    OnStopTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _StopTime;
        partial void OnStopTimeChanging(global::System.TimeSpan value);
        partial void OnStopTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Precipation
        {
            get
            {
                return _Precipation;
            }
            set
            {
                if (_Precipation != value)
                {
                    OnPrecipationChanging(value);
                    ReportPropertyChanging("Precipation");
                    _Precipation = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Precipation");
                    OnPrecipationChanged();
                }
            }
        }
        private global::System.String _Precipation;
        partial void OnPrecipationChanging(global::System.String value);
        partial void OnPrecipationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TempId
        {
            get
            {
                return _TempId;
            }
            set
            {
                if (_TempId != value)
                {
                    OnTempIdChanging(value);
                    ReportPropertyChanging("TempId");
                    _TempId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TempId");
                    OnTempIdChanged();
                }
            }
        }
        private global::System.Int32 _TempId;
        partial void OnTempIdChanging(global::System.Int32 value);
        partial void OnTempIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Temp
        {
            get
            {
                return _Temp;
            }
            set
            {
                if (_Temp != value)
                {
                    OnTempChanging(value);
                    ReportPropertyChanging("Temp");
                    _Temp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Temp");
                    OnTempChanged();
                }
            }
        }
        private global::System.Int32 _Temp;
        partial void OnTempChanging(global::System.Int32 value);
        partial void OnTempChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindId
        {
            get
            {
                return _WindId;
            }
            set
            {
                if (_WindId != value)
                {
                    OnWindIdChanging(value);
                    ReportPropertyChanging("WindId");
                    _WindId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindId");
                    OnWindIdChanged();
                }
            }
        }
        private global::System.Int32 _WindId;
        partial void OnWindIdChanging(global::System.Int32 value);
        partial void OnWindIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindSpeed
        {
            get
            {
                return _WindSpeed;
            }
            set
            {
                if (_WindSpeed != value)
                {
                    OnWindSpeedChanging(value);
                    ReportPropertyChanging("WindSpeed");
                    _WindSpeed = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindSpeed");
                    OnWindSpeedChanged();
                }
            }
        }
        private global::System.Int32 _WindSpeed;
        partial void OnWindSpeedChanging(global::System.Int32 value);
        partial void OnWindSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidityId
        {
            get
            {
                return _AirHumidityId;
            }
            set
            {
                if (_AirHumidityId != value)
                {
                    OnAirHumidityIdChanging(value);
                    ReportPropertyChanging("AirHumidityId");
                    _AirHumidityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirHumidityId");
                    OnAirHumidityIdChanged();
                }
            }
        }
        private global::System.Int32 _AirHumidityId;
        partial void OnAirHumidityIdChanging(global::System.Int32 value);
        partial void OnAirHumidityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AirHumidity
        {
            get
            {
                return _AirHumidity;
            }
            set
            {
                if (_AirHumidity != value)
                {
                    OnAirHumidityChanging(value);
                    ReportPropertyChanging("AirHumidity");
                    _AirHumidity = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AirHumidity");
                    OnAirHumidityChanged();
                }
            }
        }
        private global::System.Int32 _AirHumidity;
        partial void OnAirHumidityChanging(global::System.Int32 value);
        partial void OnAirHumidityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AsphaltTempAfterFinisherIrScanOrThermo
        {
            get
            {
                return _AsphaltTempAfterFinisherIrScanOrThermo;
            }
            set
            {
                if (_AsphaltTempAfterFinisherIrScanOrThermo != value)
                {
                    OnAsphaltTempAfterFinisherIrScanOrThermoChanging(value);
                    ReportPropertyChanging("AsphaltTempAfterFinisherIrScanOrThermo");
                    _AsphaltTempAfterFinisherIrScanOrThermo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AsphaltTempAfterFinisherIrScanOrThermo");
                    OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
                }
            }
        }
        private global::System.String _AsphaltTempAfterFinisherIrScanOrThermo;
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanging(global::System.String value);
        partial void OnAsphaltTempAfterFinisherIrScanOrThermoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QrCodeCompactor
        {
            get
            {
                return _QrCodeCompactor;
            }
            set
            {
                if (_QrCodeCompactor != value)
                {
                    OnQrCodeCompactorChanging(value);
                    ReportPropertyChanging("QrCodeCompactor");
                    _QrCodeCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("QrCodeCompactor");
                    OnQrCodeCompactorChanged();
                }
            }
        }
        private global::System.String _QrCodeCompactor;
        partial void OnQrCodeCompactorChanging(global::System.String value);
        partial void OnQrCodeCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfRollerCompactorPassages
        {
            get
            {
                return _NumberOfRollerCompactorPassages;
            }
            set
            {
                if (_NumberOfRollerCompactorPassages != value)
                {
                    OnNumberOfRollerCompactorPassagesChanging(value);
                    ReportPropertyChanging("NumberOfRollerCompactorPassages");
                    _NumberOfRollerCompactorPassages = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NumberOfRollerCompactorPassages");
                    OnNumberOfRollerCompactorPassagesChanged();
                }
            }
        }
        private global::System.Int32 _NumberOfRollerCompactorPassages;
        partial void OnNumberOfRollerCompactorPassagesChanging(global::System.Int32 value);
        partial void OnNumberOfRollerCompactorPassagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationOfVibration
        {
            get
            {
                return _LocationOfVibration;
            }
            set
            {
                if (_LocationOfVibration != value)
                {
                    OnLocationOfVibrationChanging(value);
                    ReportPropertyChanging("LocationOfVibration");
                    _LocationOfVibration = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LocationOfVibration");
                    OnLocationOfVibrationChanged();
                }
            }
        }
        private global::System.String _LocationOfVibration;
        partial void OnLocationOfVibrationChanging(global::System.String value);
        partial void OnLocationOfVibrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorCodeId
        {
            get
            {
                return _ColorCodeId;
            }
            set
            {
                if (_ColorCodeId != value)
                {
                    OnColorCodeIdChanging(value);
                    ReportPropertyChanging("ColorCodeId");
                    _ColorCodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ColorCodeId");
                    OnColorCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _ColorCodeId;
        partial void OnColorCodeIdChanging(global::System.Int32 value);
        partial void OnColorCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSFinisher
        {
            get
            {
                return _GPSFinisher;
            }
            set
            {
                if (_GPSFinisher != value)
                {
                    OnGPSFinisherChanging(value);
                    ReportPropertyChanging("GPSFinisher");
                    _GPSFinisher = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GPSFinisher");
                    OnGPSFinisherChanged();
                }
            }
        }
        private global::System.String _GPSFinisher;
        partial void OnGPSFinisherChanging(global::System.String value);
        partial void OnGPSFinisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GPSCompactor
        {
            get
            {
                return _GPSCompactor;
            }
            set
            {
                if (_GPSCompactor != value)
                {
                    OnGPSCompactorChanging(value);
                    ReportPropertyChanging("GPSCompactor");
                    _GPSCompactor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GPSCompactor");
                    OnGPSCompactorChanged();
                }
            }
        }
        private global::System.String _GPSCompactor;
        partial void OnGPSCompactorChanging(global::System.String value);
        partial void OnGPSCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpeedOfRollerCompactor
        {
            get
            {
                return _SpeedOfRollerCompactor;
            }
            set
            {
                if (_SpeedOfRollerCompactor != value)
                {
                    OnSpeedOfRollerCompactorChanging(value);
                    ReportPropertyChanging("SpeedOfRollerCompactor");
                    _SpeedOfRollerCompactor = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpeedOfRollerCompactor");
                    OnSpeedOfRollerCompactorChanged();
                }
            }
        }
        private global::System.Int32 _SpeedOfRollerCompactor;
        partial void OnSpeedOfRollerCompactorChanging(global::System.Int32 value);
        partial void OnSpeedOfRollerCompactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ComplianceMixture
        {
            get
            {
                return _ComplianceMixture;
            }
            set
            {
                if (_ComplianceMixture != value)
                {
                    OnComplianceMixtureChanging(value);
                    ReportPropertyChanging("ComplianceMixture");
                    _ComplianceMixture = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ComplianceMixture");
                    OnComplianceMixtureChanged();
                }
            }
        }
        private global::System.String _ComplianceMixture;
        partial void OnComplianceMixtureChanging(global::System.String value);
        partial void OnComplianceMixtureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SamplesCopro
        {
            get
            {
                return _SamplesCopro;
            }
            set
            {
                if (_SamplesCopro != value)
                {
                    OnSamplesCoproChanging(value);
                    ReportPropertyChanging("SamplesCopro");
                    _SamplesCopro = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SamplesCopro");
                    OnSamplesCoproChanged();
                }
            }
        }
        private global::System.String _SamplesCopro;
        partial void OnSamplesCoproChanging(global::System.String value);
        partial void OnSamplesCoproChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DensityOfField
        {
            get
            {
                return _DensityOfField;
            }
            set
            {
                if (_DensityOfField != value)
                {
                    OnDensityOfFieldChanging(value);
                    ReportPropertyChanging("DensityOfField");
                    _DensityOfField = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DensityOfField");
                    OnDensityOfFieldChanged();
                }
            }
        }
        private global::System.String _DensityOfField;
        partial void OnDensityOfFieldChanging(global::System.String value);
        partial void OnDensityOfFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cores
        {
            get
            {
                return _Cores;
            }
            set
            {
                if (_Cores != value)
                {
                    OnCoresChanging(value);
                    ReportPropertyChanging("Cores");
                    _Cores = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Cores");
                    OnCoresChanged();
                }
            }
        }
        private global::System.String _Cores;
        partial void OnCoresChanging(global::System.String value);
        partial void OnCoresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LengthwiseFlatness
        {
            get
            {
                return _LengthwiseFlatness;
            }
            set
            {
                if (_LengthwiseFlatness != value)
                {
                    OnLengthwiseFlatnessChanging(value);
                    ReportPropertyChanging("LengthwiseFlatness");
                    _LengthwiseFlatness = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LengthwiseFlatness");
                    OnLengthwiseFlatnessChanged();
                }
            }
        }
        private global::System.String _LengthwiseFlatness;
        partial void OnLengthwiseFlatnessChanging(global::System.String value);
        partial void OnLengthwiseFlatnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Skidresistance
        {
            get
            {
                return _Skidresistance;
            }
            set
            {
                if (_Skidresistance != value)
                {
                    OnSkidresistanceChanging(value);
                    ReportPropertyChanging("Skidresistance");
                    _Skidresistance = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Skidresistance");
                    OnSkidresistanceChanged();
                }
            }
        }
        private global::System.String _Skidresistance;
        partial void OnSkidresistanceChanging(global::System.String value);
        partial void OnSkidresistanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Iri
        {
            get
            {
                return _Iri;
            }
            set
            {
                if (_Iri != value)
                {
                    OnIriChanging(value);
                    ReportPropertyChanging("Iri");
                    _Iri = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Iri");
                    OnIriChanged();
                }
            }
        }
        private global::System.String _Iri;
        partial void OnIriChanging(global::System.String value);
        partial void OnIriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtraTestsAskedBijClient
        {
            get
            {
                return _ExtraTestsAskedBijClient;
            }
            set
            {
                if (_ExtraTestsAskedBijClient != value)
                {
                    OnExtraTestsAskedBijClientChanging(value);
                    ReportPropertyChanging("ExtraTestsAskedBijClient");
                    _ExtraTestsAskedBijClient = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ExtraTestsAskedBijClient");
                    OnExtraTestsAskedBijClientChanged();
                }
            }
        }
        private global::System.String _ExtraTestsAskedBijClient;
        partial void OnExtraTestsAskedBijClientChanging(global::System.String value);
        partial void OnExtraTestsAskedBijClientChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String name, global::System.String password, global::System.Int32 roleId, global::System.String email)
        {
            User user = new User();
            user.UserId = userId;
            user.Name = name;
            user.Password = password;
            user.RoleId = roleId;
            user.Email = email;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Users_ibfk_1", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RoadItEntitiesModel.Users_ibfk_1", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RoadItEntitiesModel.Users_ibfk_1", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("RoadItEntitiesModel.Users_ibfk_1", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("RoadItEntitiesModel.Users_ibfk_1", "Roles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Width")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Width : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Width object.
        /// </summary>
        /// <param name="widthId">Initial value of the WidthId property.</param>
        /// <param name="width1">Initial value of the Width1 property.</param>
        public static Width CreateWidth(global::System.Int32 widthId, global::System.Int32 width1)
        {
            Width width = new Width();
            width.WidthId = widthId;
            width.Width1 = width1;
            return width;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WidthId
        {
            get
            {
                return _WidthId;
            }
            set
            {
                if (_WidthId != value)
                {
                    OnWidthIdChanging(value);
                    ReportPropertyChanging("WidthId");
                    _WidthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WidthId");
                    OnWidthIdChanged();
                }
            }
        }
        private global::System.Int32 _WidthId;
        partial void OnWidthIdChanging(global::System.Int32 value);
        partial void OnWidthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Width1
        {
            get
            {
                return _Width1;
            }
            set
            {
                OnWidth1Changing(value);
                ReportPropertyChanging("Width1");
                _Width1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width1");
                OnWidth1Changed();
            }
        }
        private global::System.Int32 _Width1;
        partial void OnWidth1Changing(global::System.Int32 value);
        partial void OnWidth1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_9", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_9", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_9", "Finisher", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RoadItEntitiesModel", Name="Wind")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Wind : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Wind object.
        /// </summary>
        /// <param name="windId">Initial value of the WindId property.</param>
        /// <param name="windSpeed">Initial value of the WindSpeed property.</param>
        public static Wind CreateWind(global::System.Int32 windId, global::System.Int32 windSpeed)
        {
            Wind wind = new Wind();
            wind.WindId = windId;
            wind.WindSpeed = windSpeed;
            return wind;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindId
        {
            get
            {
                return _WindId;
            }
            set
            {
                if (_WindId != value)
                {
                    OnWindIdChanging(value);
                    ReportPropertyChanging("WindId");
                    _WindId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WindId");
                    OnWindIdChanged();
                }
            }
        }
        private global::System.Int32 _WindId;
        partial void OnWindIdChanging(global::System.Int32 value);
        partial void OnWindIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WindSpeed
        {
            get
            {
                return _WindSpeed;
            }
            set
            {
                OnWindSpeedChanging(value);
                ReportPropertyChanging("WindSpeed");
                _WindSpeed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WindSpeed");
                OnWindSpeedChanged();
            }
        }
        private global::System.Int32 _WindSpeed;
        partial void OnWindSpeedChanging(global::System.Int32 value);
        partial void OnWindSpeedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RoadItEntitiesModel", "Finisher_ibfk_6", "Finisher")]
        public EntityCollection<Finisher> Finishers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_6", "Finisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Finisher>("RoadItEntitiesModel.Finisher_ibfk_6", "Finisher", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
